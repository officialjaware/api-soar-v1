{
  "openapi": "3.0.1",
  "info": {
    "title": "Chronicle SOAR API",
    "description": "This page lists all of the REST APIs associated with Chronicle SOAR",
    "version": "1.0"
  },
  "paths": {
    "/api/external/v1/agents/TestPublisherConnectivity/{publisherId}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Test connectivity with the publisher by publisher identifier.",
        "description": "status: Live = 0, Error = 1.",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetPublishers": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns the list of publishers configured in your environment.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetPublisherById/{publisherId}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns the list of publishers configured in your environment by their identifier.",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/AddOrUpdatePublisher": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Adds or updates the publisher settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiPublisher"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/DeletePublishers": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Deletes the publisher configured in your environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns the list of all Agents configured in your environment (enabled and disabled).",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetEnabledAgents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list of all the enabled Agents in your environment.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetValidAgentsForConnector/{environment}/{integration}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list with all agents, flagged for connector installation as: available, non available over connection\r\nerror and non available over misconfiguration(integration was not installed on agent), in a specific env,\r\nfor a specific integration.",
        "description": "",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integration",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetValidAgentsForIdeConnector/{environment}/{integration}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list with all agents, flagged for connector test in ide as: available, non available over connection\r\nerror, non available over misconfiguration(integration was not installed on agent), or non supported versions\r\nof agents and publisher, in a specific env, for a specific integration.",
        "description": "",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integration",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAvailableEnvironmentsForAgents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list of all the optional environments to create an Agent on.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgentByIdentifier/{agentIdentifier}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list of all the Agents configured in your environment (enabled and disabled) by their identifier.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "parameters": [
          {
            "name": "agentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgentInformationByIntegrationInstance/{integrationInstanceId}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns the Agent settings for each integration instance.",
        "description": "communicationStatus: Live = 0, Error = 1, Disabled = 2, WaitingForAgent = 3, Deleted = 4; connectivityFlag: Master = 0, Slave = 1, None = 2.",
        "parameters": [
          {
            "name": "integrationInstanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgentsByEnvironment": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns a list of all Agents by their environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgentInformationByIdentifier/{agentIdentifier}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns the Agent settings by agent identifiers.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "parameters": [
          {
            "name": "agentIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/GetAgentsInformationByIdentifiers": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Returns List of Agent information data by agent identifiers.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/AddAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Adds an Agent to your environment.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/UpdateAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Updates the Agent settings.",
        "description": "status: Enabled = 0, Disabled = 1, Deleted = 2.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/DeleteAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Deletes an Agent in your environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.ApiAgent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/agents/RedeployAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/approval-link/Apply": {
      "post": {
        "tags": [
          "Approval Links"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/CreateSimulatedCustomCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Creates a custom (simulated) case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/GetCustomCaseDetails": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns the details of a custom (simulated) case in your environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/ExportCustomCase/{customCaseName}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Exports a custom (simulated) case as a json file.",
        "parameters": [
          {
            "name": "customCaseName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/ImportCustomCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Import a custom (simulated) case from a json file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/DeleteUseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Deletes a given use case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/GenerateUseCases": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Simulates a case (the case will be presented in the case queue).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/SimulateAlert": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Simulate a specific alert within a case in your environment (the alert is then presented as a Test case in your case queue).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/GetCustomCases": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns a list of all of the custom (simulated) cases you have in your environment.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/attackssimulator/IsCustomCaseExists/{alertName}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns true if customCase name already exists.",
        "parameters": [
          {
            "name": "alertName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GetCaseFullDetails/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns all the data related to a single case, based on a given Case identifier",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/cases/GetWorkflowInstanceSummary": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns the summary of an executed playbook for a given case including the alert and playbook Identifiers.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CreateCaseInsight": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Creates an insight for a case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Insights.CaseInsightData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CreateManualCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Creates a manual case that will be displayed in your case queue in the same way as other cases.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GetCaseCardsByRequest": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns minimal data related to the case (CaseCard Object).\r\nTo fetch the entire case data, use the ‘GetCaseFullDetails’ method. For a more comprehensive query, you can use the search Controller.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CasesQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CaseCardsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CaseCardsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CaseCardsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CaseCardsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CaseCardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/cases/GetEvidenceData/{evidenceId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns the attachment file content in a case as a byte array.",
        "parameters": [
          {
            "name": "evidenceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/IsCaseUpdated": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Checks the modification time of a given case identifier.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/cases/AssignUserToCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Assigns a specific user to a case (the user assigned to the case can be viewed in the case top bar).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/RenameCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the case title as presented in the case queue.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CloseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the given case status to closed.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CreateWarRoomIncidentFromCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Creates an incident in the Command Center from a given case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GetWallItemsForWarRoom/{id}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns all the wall items (Case history) and transfers them into the incident in the Command Center.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GetCaseExists/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns a bool value if case exists filtered by caseId",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CloseAlert": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Moves the requested alert in a given case to a new closed case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/AddCaseComment": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds a comment to the case that will be presented in the case wall.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/cases/CreateCaseEntity": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to manually add an entity to an alert in a given case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/AddCaseTag": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds a tag to the given case which can later on be used for filtering cases.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/RemoveCaseTag": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Removes a case tag that was added to a given case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/AddOrUpdateCaseTask": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds or updates a task  assigned to a specific user in a given case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ChangeCaseStage": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the case handling stage (for example, \"Investigation, Triage, etc.\"). The case stages are set in the settings screen under the Case Data tab.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ChangeCasePriority": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to change the priority of a given case (for example - informative, low, medium, high and critical).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ChangeCaseDescription": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Change the description of a given case (the description is presented in the top bar).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GenerateCaseReport": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Generate a report for a specific case. The report will include information about the case, the entities involved, case history etc.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ChangeCaseImportanceStatus": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the \"is important\" status of a case. You can mark or unmark the \"is important\" flag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/UnraiseIncident": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Removes the incident flag from a case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/RaiseIncident": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Raises the case to \"Incident\" stage. Raising an incident assigns the SOC Manager as the case assignee and changes the case stage to \"Incident\".",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/CreateCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to inject cases into the Siemplify Data Processing Engine Service.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/AddEvidence": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds an attachment to a given case.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/cases/ReassignCaseTask": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Reassigns a case task to a specific user or role.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReassignTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteManualAction": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Execute a given playbook action.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiManualActionDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/Skip": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Will skip a pending playbook action, resulting in the execution of the following steps.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteStep": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Executes a single step which is part of a playbook (will trigger the re-calculation of a playbook's status).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/GetActionResultById/{resultIdStr}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns the action result details by identifier.",
        "parameters": [
          {
            "name": "resultIdStr",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionResultDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkAssign": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk assign case action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkAssignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkReopenCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk reopen case action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkReopenCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkCloseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk close case action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkCloseCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkChangeCasePriority": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk case priority change action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkAddCaseTag": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk tag addition on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ExecuteBulkChangeCaseStage": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk case stage changes on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/PauseAlertSla": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to pause alert sla.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/ResumeAlertSla": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to resume alert sla.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/UpdateAlertPriority": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to update the priority of an alert.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/attachments/preview/{attachmentId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/{caseId}": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Text": {
                    "type": "string"
                  },
                  "Attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Text": {
                  "style": "form"
                },
                "Attachments": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMessageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "includeStartMessage",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/{caseId}/new-messages-count": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/pin/{messageId}": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/casechat/unpin/{messageId}": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/requests/GetByRequest": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestFiltersEnum"
              }
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestSortByEnum"
            }
          },
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/requests/GenerateCollaboratorRequest": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Generate alert of the request template in your environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/requests/GetCollaboratorRequestCount": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/comments": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Get all case comments by filter",
        "parameters": [
          {
            "name": "CaseId",
            "in": "query",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "AlertIdentifier",
            "in": "query",
            "description": "Alert identifier",
            "schema": {
              "type": "string",
              "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
            },
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          {
            "name": "UserOwnerId",
            "in": "query",
            "description": "User Owner Id",
            "schema": {
              "type": "string",
              "example": "f6c2e59d-530a-426c-9380-d8257a84f3ac"
            },
            "example": "f6c2e59d-530a-426c-9380-d8257a84f3ac"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Create case comment",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/comments/id:long": {
      "put": {
        "tags": [
          "Case Management"
        ],
        "summary": "Update case comment",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/comments/mark-as-deleted/{id}": {
      "patch": {
        "tags": [
          "Case Management"
        ],
        "summary": "Mark case comment as deleted",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/comments/file/{fileId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Download file attached to a comment",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "FileId id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/insights/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns all case insights by case id and filter parameters.",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          },
          {
            "name": "AlertIdentifier",
            "in": "query",
            "description": "Alert identifier",
            "schema": {
              "type": "string",
              "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
            },
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          {
            "name": "EntityIdentifier",
            "in": "query",
            "description": "Entity identifier",
            "schema": {
              "type": "string",
              "example": "WWW.GOOGLE.COM"
            },
            "example": "WWW.GOOGLE.COM"
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Type",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetAlertOverviewData": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetCaseOverviewData": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/ResolveOverviewWidget": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/PreviewOverviewWidget": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetCaseEntities/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetAlertsEntities": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetOverviewTemplate": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetOverviewTemplateCards": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/GetFullOverviewTemplateDetails/{templateIdentifier}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "templateIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/case-overview/SaveOverviewTemplate": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/saved-filter": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Return saved filters for user.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Add or Update filter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Case Management"
        ],
        "summary": "Delete filter by filterId.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/xml": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "text/xml": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/bulk-operations/ExecuteBulkCloseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk close case action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/bulk-operations/ValidateCasesAssigneeForCloseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to perform bulk close case action on several cases at once.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/bulk-operations/ExecuteBulkAssignCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/bulk-operations/MergeCases": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Merge cases into a new Case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMergeCasesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetCaseDetails/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Provides Detailed information for the requested case",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetAlertEvents": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Provides information for the alert events",
        "requestBody": {
          "description": "Get alert events request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/CreateCaseEntity": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to manually add an entity to an alert in a given case",
        "requestBody": {
          "description": "Create entity request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/CreateCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Used to inject cases into the Siemplify Data Processing Engine Service.",
        "requestBody": {
          "description": "Case package model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasesPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/ChangeCaseDescription": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Change the description of a given case - the description is presented in the top bar",
        "requestBody": {
          "description": "Change case description request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/request": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds an evidence (attachment) to a given case.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/UpdateAlertPriority": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Change the priority of the alert",
        "requestBody": {
          "description": "Update alert priority request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/UpdateCasePriority": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Change the priority of the case",
        "requestBody": {
          "description": "Update case priority request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetWallActivities/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Get all wall activity of the case",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetWallActivitiesV2/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Get all wall activity of the case",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetEvidenceData/{evidenceId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Get file attached to a comment",
        "parameters": [
          {
            "name": "evidenceId",
            "in": "path",
            "description": "Evidence id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/RaiseIncident": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Raises the case to \"Incident\" stage. Raising an incident assigns the SOC Manager as the case assignee and changes the case stage to \"Incident\".",
        "requestBody": {
          "description": "Raise incident request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/AddOrUpdateCaseTask": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds or updates a task assigned to a specific user in a given case",
        "requestBody": {
          "description": "New or updated case task request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/MarkTaskAsDone": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Mark task as done in case wall by the logged-in user",
        "requestBody": {
          "description": "Case task model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/UnraiseIncident": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Removes the incident flag from a case",
        "requestBody": {
          "description": "Un-raise case as an incident request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GenerateCaseReport": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Generate case report",
        "requestBody": {
          "description": "Case report request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.CaseReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/RenameCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the case title",
        "requestBody": {
          "description": "Change case name request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/CloseCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Close a case. New case related operations are not allowed on a closed case.",
        "requestBody": {
          "description": "Close case request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/AddCaseTag": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds a tag to the given case which can later on be used for filtering cases",
        "requestBody": {
          "description": "Add case tag request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/RemoveCaseTag": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Removes a case tag that was added to a given case",
        "requestBody": {
          "description": "Remove case tag request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/AssignUserToCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Assigns a specific user to a case - the user assigned to the case can be viewed in the case top bar",
        "requestBody": {
          "description": "Assign user or soc-role to a case request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/ChangeCaseStage": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the case handling stage (for example, \"Investigation, Triage, etc.\"). The case stages are set in the settings screen under the Case Data tab.",
        "requestBody": {
          "description": "Change case stage request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/ChangeCaseImportanceStatus": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Changes the \"is important\" status of a case. You can mark or unmark the \"is important\" flag.",
        "requestBody": {
          "description": "Change the Is Important flag of a case request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/IsCaseUpdated": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Checks the modification time of a given case identifier",
        "requestBody": {
          "description": "Is case updated request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/AddCaseComment": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/AddEvidence": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds an evidence (attachment) to a given case.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/AddComment": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Adds a comment (could be with attachment) to a given case.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Post - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/UpdateComment": {
      "put": {
        "tags": [
          "Case Management"
        ],
        "summary": "Updates a comment and it's attachment(if needed) in a given case.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Put - api/external/v1/cases/comments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/MarkCommentAsDeleted/{id}": {
      "put": {
        "tags": [
          "Case Management"
        ],
        "summary": "Mark comment as deleted.",
        "description": "**This API is deprecated and will be removed on 02-01-2024.**<br/><br/>Please use the following API instead: Patch - api/external/v1/cases/comments/mark-as-deleted/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/dynamic-cases/MoveAlertToNewCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Move alert to new case",
        "requestBody": {
          "description": "Move alert to a new case request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/CloseAlert": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Close alert in a case. New alert related operations are not allowed on a closed alert.",
        "requestBody": {
          "description": "Close alert in a case request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCloseAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiCaseManipulationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/ReopenAlert": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Reopen alert in a case",
        "requestBody": {
          "description": "Reopen alert in a acse request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiReopenAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/ExecuteBulkReopenCase": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Reopen alert cases in bulk",
        "requestBody": {
          "description": "Reopen cases in bulk request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/IngestCaseInOtherEnvironment": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Move the requested case to a new environment",
        "requestBody": {
          "description": "Ingest existing case to other environment request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/AddOrUpdateEntityProperty": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Add or update property of involved entity and unique entity",
        "requestBody": {
          "description": "New or updated entity property request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedEntity"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedEntity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dynamic-cases/GetWallActivitiesForCommandCenter/{id}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns all the wall items (Case history) and transfers them into the incident in the Command Center.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/GetCaseCardsByRequest": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns minimal data related to the case (CaseCard Object).\r\nTo fetch the entire case data, use the ‘GetCaseFullDetails’ method. For a more comprehensive query, you can use the search Controller.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/GetAlertNames": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns the list of alert names by environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases-queue/alert-vendors": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Returns all alert vendors.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/tasks/GetByRequest": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.ApiDataModels.Requests.TasksFiltersEnum"
              }
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.Homepage.ApiDataModels.Requests.TasksFiltersEnum"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.Homepage.ApiDataModels.Requests.TasksSortByEnum"
            }
          },
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/tasks/{id}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Case Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/tasks": {
      "post": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/tasks/MarkAsDone": {
      "put": {
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/tasks/GetTasksCountForUser": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/wall/{caseId}": {
      "get": {
        "tags": [
          "Case Management"
        ],
        "summary": "Get case wall activities",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.BaseWallActivity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/cases/wall/favourite": {
      "patch": {
        "tags": [
          "Case Management"
        ],
        "summary": "Sets a wall item as favorite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/external/v1/logging/python": {
      "post": {
        "tags": [
          "Cloud Logging"
        ],
        "summary": "Returns the logs of python executions.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetChatChannelCards/{incidentId}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns a summary of the Command Center incident chat according to a specific identifier.",
        "parameters": [
          {
            "name": "incidentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelCard"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelCard"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelCard"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelCard"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/SendChatMessage": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Sends a chat message for a specific incident in the Command Center.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetChatChannelConversation": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns the conversation records of a specific chat.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChatChannelMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetDepartments": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns a list of the departments in an incident workstation.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetFilterDepartments/{incidentId}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns a list of people involved in an incident workstation filtered by departments.",
        "parameters": [
          {
            "name": "incidentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetLastSeverityScore/{id}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns the last severity score for a given incident by identifer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/SaveSeverityScore": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Saves a severity score for a given incident by identifer.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetIncident/{id}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Retrieves data regarding a Command Center incident by identifer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateIncident": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center incident.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CloseIncident": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Closes an existing Command Center incident.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetIncidentUserById/{id}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns users associated with an incident according to their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetWarRoomUserForIncident/{incidentId}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns Command Center user for an incident based on incident ID.",
        "parameters": [
          {
            "name": "incidentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetWarRoomAuditors": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns a list of Command Center auditors.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetForgotPasswordTimeLimit": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns the forgotten password time limit in hours.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/GetWarRoomWallItems": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Returns the Command Center Wall Items for a given incident.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomComment": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a comment in the Command Center.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/UpdateWarRoomComment": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Updates a given Comment in the Command Center.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomFact": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center Fact.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/UpdateWarRoomFact": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Updates a given Command Center Fact.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomDecision": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center Decision.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/UpdateWarRoomDecision": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Updates a given Command Center Decision.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomTask": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center Task under a specific user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/UpdateWarRoomTask": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Updates a given Command Center Task under a specific user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomAssessment": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center Assessment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/UpdateWarRoomAssessment": {
      "post": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Updates a given Command Center Assessment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/warroom/CreateWarRoomReport/{incidentId}": {
      "get": {
        "tags": [
          "CommandCenter"
        ],
        "summary": "Creates a Command Center Report for a given incident identifier.",
        "parameters": [
          {
            "name": "incidentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/configuration-items/{tenantId}": {
      "get": {
        "tags": [
          "ConfigurationItemsManagement"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationItemsManagement"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/cards": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "summary": "Provides basic information per each accessible connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/template-cards": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "summary": "Provides basic information per each accessible connector definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/{identifier}": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "summary": "Retrieves detailed information regarding a specific connector instance.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "The connector instance identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Connectors"
        ],
        "summary": "Deletes a connector instance according to the given instance identifier.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "The connector instance identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/{identifier}/statistics": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "summary": "Details the statistics associated with the specific connector instance.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "The connector instance identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/template": {
      "post": {
        "tags": [
          "Connectors"
        ],
        "summary": "Retrieves detailed information regarding a specific connector instance.",
        "requestBody": {
          "description": "Information which identifies the specific connector instance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors": {
      "post": {
        "tags": [
          "Connectors"
        ],
        "summary": "Adds a new connector instance or updates an existing one.",
        "requestBody": {
          "description": "New or updated details of a connector instance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/update-from-ide": {
      "post": {
        "tags": [
          "Connectors"
        ],
        "summary": "Updates the connector instance to its connector definition's latest version.",
        "requestBody": {
          "description": "Updated details of a connector instance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/connectors/fetch-sample-data": {
      "post": {
        "tags": [
          "Connectors"
        ],
        "summary": "Executes the connector once for testing purposes.",
        "requestBody": {
          "description": "Connector instance details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/GetDashboardWidgetDefinitions": {
      "get": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Returns all available widget definitions. Please note that this doesn’t refer to a specific dashboard.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/GetDashboardWidgetValues": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Returns specific dashboard widget (including filters, order etc) and a list of values for graph representation (array of strings).\r\nThis api is being called either for a specific playbook, or for multiple playbook filters selection",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/GetDashboardWidgetCaseIds": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Returns a list of the Case IDs involved in the widgets presented in the dashboard.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/AddOrUpdateDashboard": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Adds a new dashboard or updates an existing one (determined by dashboard identifier).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDashboardDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/SaveDashboardAsReportTemplate": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Saves the dashboard as a report template. The report template can be viewed in the Reports module.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/ImportDashboard": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Imports a dashboard into the platform (json file).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/AddOrUpdateDashboardWidget": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Adds a new dashboard widget or update an existing one (determined by widget identifier).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/DeleteDashboard": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Deletes a dashboard with a given dashboard identifier. Please note that the deletion of a dashboard cannot be undone.",
        "parameters": [
          {
            "name": "dashboardtId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/dashboards/DeleteDashboardWidget": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "summary": "Deletes a dashboard widget with a given widget ID. Please note that the deletion of a dashboard widget cannot be undone.",
        "parameters": [
          {
            "name": "dashboardWidgetId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/entity-search/count": {
      "post": {
        "tags": [
          "EntitySearch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/entity-search/entities": {
      "post": {
        "tags": [
          "EntitySearch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/homepagecases/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "Cases which match at least one of the filters in this list will be appended to the result.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesFiltersEnum"
              }
            }
          },
          {
            "name": "SlaFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesSlaFiltersEnum"
              }
            }
          },
          {
            "name": "PriorityFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesPriorityFiltersEnum"
              }
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesSortByEnum"
            }
          },
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/cases/homepagecases/GetHomepageCasesCount": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/attachments/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/attachments/{id}": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/attachments": {
      "post": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/contacts/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/contacts/{id}": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/contacts": {
      "post": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserContactDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/links/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/links/{id}": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/links": {
      "post": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserWebsiteLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/notes/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/notes/{id}": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/notes": {
      "post": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/rss/GetByRequest": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/rss/{id}": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Homepage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/rss": {
      "post": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Homepage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.RSSFeed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/homepage/rss/GetRssCount": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetAllEnvironmentCards": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns all the environments as cards (a summary of the environment data).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/DeleteIntegrationInstance": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Deletes a specific integration instance.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetIntegrationInstanceSettings/{integrationInstanceId}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns the settings of an integration instance.",
        "parameters": [
          {
            "name": "integrationInstanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetPlaybooksNamesUsingIntegrationInstance/{integrationInstanceId}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns the names of the playbooks using a specific integration instance by their integration instance identifier.",
        "parameters": [
          {
            "name": "integrationInstanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetInstalledIntegrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns all the details of the installed integrations in the platform.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetEnvironmentInstalledIntegrations": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns all the environments of the installed integrations in the platform.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetOptionalIntegrationInstances": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns a list of the instances that are available for a specific integration according to its environment.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/CreateIntegrationInstance": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Creates a new integration instance.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/integrations/GetIntegrationDefaultInstance/{integrationIdentifier}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns the integration's default instance by a given integration identifier.",
        "parameters": [
          {
            "name": "integrationIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/SaveOrUpdateJobData": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Adds or updates a job in the platform.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/DeleteJobData": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Removes a job from the platform. Please note that this action cannot be undone.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/GetJobTemplates": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Returns a list of the job templates in the system that were configured in the IDE.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/GetInstalledJobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Returns a list of the installed jobs in the platform.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/RunJob": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Runs a specific job according to a specific job identifier.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/jobs/instances": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Adds a new Job instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Updates existing job instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Returns a list of the installed jobs instances in the platform.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/jobs/instances/{id}": {
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Removes a job from the platform. Please note that this action cannot be undone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/jobs/instances/run": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Runs a specific job instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/store/GetIntegrationsStoreData": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns a list of integrations that can be installed and configured from the Marketplace.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetReportsStoreData": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns a list of reports that can be installed and configured from the Marketplace.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetPowerUpsStoreData": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns a list of powerups that can be installed and configured from the Marketplace.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetHtmlViewPresets": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.HtmlViewPreset"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.HtmlViewPreset"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.HtmlViewPreset"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.HtmlViewPreset"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.HtmlViewPreset"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetIntegrationDependencies/{integrationIdentifier}": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns a list of dependencies of a given integration.",
        "parameters": [
          {
            "name": "integrationIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationDependencies"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationDependencies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationDependencies"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationDependencies"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationDependencies"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetUsecasesCards": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns a list of the use cases in the system and their summary.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/ExportUseCase": {
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Export a use case as a zip file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/ReinstallAllIntegrations": {
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Reinstall all the installed integrations in order to be up-to-date.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/TestIntegration/{integrationInstanceId}": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Test an integration by running a test action.",
        "parameters": [
          {
            "name": "integrationInstanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationTestResults"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationTestResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationTestResults"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationTestResults"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationTestResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/SaveIntegrationConfigurationProperties": {
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Save the integration configuration fields.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/store/GetIntegrationFullDetails": {
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Returns all the data related to an integration (actions, connectors etc...).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPackageImportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/GetUnreadNotificationCount": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Counts the number of unread user notifications.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/GetUserNotifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Returns the last 30 User notifications.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.UserNotificationMessage"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.UserNotificationMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.UserNotificationMessage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.UserNotificationMessage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.UserNotificationMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/CloseAllNotifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Closes all System and User notifications which will prevent them from popping up in the UI.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/CloseUserNotification/{recordId}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Closes a User Notification based on a given notification identifier to prevent it from popping up again.",
        "parameters": [
          {
            "name": "recordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/CloseSystemNotification/{recordId}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Closes a System Notification based on a given notification identifier to prevent it from popping up again.",
        "parameters": [
          {
            "name": "recordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/GetUserNotificationSettings": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Returns the current user's notification preferences.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/notifications/SaveUserNotificationSettings": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates the user's notification preferences.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/GetFamily": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualizationResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualizationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualizationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/GetMappingRules": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyEventData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/GetRelatedEntitiesByFamilyName/{familyName}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "parameters": [
          {
            "name": "familyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/GetVisualFamilies": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/ExportVisualFamily": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/ImportVisualFamily": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/IsVisualFamilyExists": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/AddOrUpdateVisualFamily": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/UpdateVisualFamilyImage": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/DuplicateVisualFamilyForSettings": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/DeleteFamilyData/{familyId}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "parameters": [
          {
            "name": "familyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/AddOrUpdateMappingRules": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.MappingRuleMetadata"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/DeleteVisualFamilyRule": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/AddOrUpdateVisualFamilyRules": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/DeleteMappingRule": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/ExportOntology": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/IsOntologyOrVisualFamilyExists": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/ontology/ImportOntology": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/GetPermissionsGroupCards": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/GetPermissionsGroupTypes": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/GetPermissionsGroupTemplateByType/{permissionType}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionGroupInstance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/Duplicate/{id}": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/permissions/GetAllEnvironmentStatus/{permissionGroupId}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "permissionGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/action-widget-template": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "parameters": [
          {
            "name": "ActionIdentifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/permissions/options": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Return playbook access permission options. This should be used to fetch information when creating a\r\nnew playbook, where we do not have yet workflow guid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/permissions": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Add or update permissions for a given workflow.\r\n* Recreates all specific user permissions for that workflow\r\n* Updates the default permissions",
        "requestBody": {
          "description": "Add permissions request containing the new permissions to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/permissions/{identifier}": {
      "delete": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Removes all access permissions for the given workflow. Note the permissions for the notebook will be the default\r\npermissions that is set for the playbook",
        "parameters": [
          {
            "name": "workflowOriginalIdentifier",
            "in": "path",
            "description": "workflow original identifier to delete all of it's access permissions",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkflowFullInfoByIdentifier/{apiWfIdentifier}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a workflow’s (playbook) full definition, including the details of the steps in the playbook.",
        "parameters": [
          {
            "name": "apiWfIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkflowFullInfoWithEnvFilterByIdentifier/{apiWfIdentifier}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a workflow’s (playbook) full definition, including the details of the steps in the playbook.",
        "parameters": [
          {
            "name": "apiWfIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/ExportWorkflowWithBlocksByIdentifier/{apiWfIdentifier}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Exports a workflow (playbook) including the full definition, steps and blocks .",
        "parameters": [
          {
            "name": "apiWfIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetPendingStepsUserRelated": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.PendingActionSortByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetPendingStep": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetPendingStepsCountForUser": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/DuplicateWorkflow": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Duplicate a workflow (playbook).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/DuplicateWorkflows": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Duplicates a list of workflows (playbooks).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/DuplicateNestedWorkflows": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Duplicates a list of nested workflows (Playbook blocks)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/DeleteWorkflows": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Deletes a list of workflows (playbooks).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkflowCategories": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a list of all workflow categories available in the system.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/AddOrUpdatePlaybookCategory": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Adds or Updates a playbook category.",
        "requestBody": {
          "description": "New workflow category to add / updated category data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/RemoveCategories": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Removes a list of categories.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetEnabledWFCards": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a list of all the enabled workflows (playbooks).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPlaybookCard"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPlaybookCard"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPlaybookCard"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPlaybookCard"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPlaybookCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/SaveWorkflowDefinitions": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Save workflow (Playbook).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetTestCases": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Return a list of test cases available in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestCasesPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/RunPlaybookInDebug": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Runs the playbook in simulation mode.",
        "requestBody": {
          "description": "Run playbook in debug request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetActionResultsOfWFId/{wfInstanceId}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns action results by workflow (playbook) instance id.",
        "parameters": [
          {
            "name": "wfInstanceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkflowStepInstance": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns all workflow (playbook) steps instances.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetOverviewTemplate/{templateIdentifier}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "parameters": [
          {
            "name": "templateIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetOverviewTemplate": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetDebugStepCaseData": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns the simulated playbook step case data.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetContextGroupByKey/{key}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns the context group by key.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetPlaybookSimulationEnrichment": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns the enrichment of playbook simulation.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/ExecuteStep": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Runs the playbook step.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetCaseEntities/{caseId}": {
      "get": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns case entities by case id.",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/CheckWorkflowNameInDifferentEnvironments": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Checks if the workflow's name already exists in a different environment (also environments that the user is not permitted to see).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/SaveLogVersionOfWorkflowDefinitions": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Save a new version of the workflow.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkFlowVersionLogs": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a list of versions for a specific workflow.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/RestoreWorkflowDefinition": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Restore workflow to a previous version.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/DeleteWorkflow": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Deletes workflow",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetTriggerTags": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a list of all the tags that are relevant to the trigger type tag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/AttacheWorkflowToCase": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Attaches a workflow (playbook) to a case and starts the execution of the workflow.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/RerunPlaybook": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Rerun playbook on a given alert.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/AttacheNestedWorkflowToCase": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Attaches a nested workflow (Playbook block) to a case.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/RerunBlock": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Rerun block on a given alert.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetWorkflowsInvolvingAction": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Returns a list of actions that are part of the workflow.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.V1.WorkflowsByActionQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/GetPlaybookStatsMap": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Return statistic data related to the workflow (such as number of runs, distribution by time, etc.).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/MoveDefinitionsToCategory": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Move workflows to a selected category.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/ExportDefinitions": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Export workflows (playbooks) as a zip file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/playbooks/ImportDefinitions": {
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Import workflows from a zip file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/GetReportTemplates": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/GenerateReportTemplate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/AddOrUpdateReportWidget": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/RemoveReportWidget/{widgetId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/AddOrUpdateReportTemplate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/ImportReportTemplate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/RemoveReportTemplate/{templateId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/AddOrUpdateReportSchedule": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/DeleteReportSchedule/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/GetReportSchedules": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportSchedule"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/DuplicateReportTemplate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/GetAdvancedReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/GetAdvancedReportDetails": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/RefreshAdvancedReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/UploadAdvancedReport": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/reports/ShareAdvancedReport": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/resources/GetEntityInsightsById/{caseId}/{insightsId}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Returns a case entity insight by insight ID.",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "insightsId",
            "in": "path",
            "description": "Insights Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/resources/GetCaseFullDetailsById/{parentId}/{caseId}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Returns a case with full details by its ID.",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/resources/GetActionResultsById/{caseId}/{actionResultId}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Returns action results by ID and by action result ID.",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "Case Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "actionResultId",
            "in": "path",
            "description": "Action result Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/resources/DownloadAuditControllerActionsCsv": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Returns a CSV file that contains a list of all controllers and actions that have an AuditAttribute action filter.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/retention/Execute": {
      "post": {
        "tags": [
          "Retention"
        ],
        "summary": "Performs manual data retention.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/search/CaseSearchEverything": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of cases by given filters",
        "requestBody": {
          "description": "Set of filters to search the cases by",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResults"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResults"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResults"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/search/GetSearchResultsAsCsv": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of cases as a csv file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/search/EntitySearchEverything": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of entities by given filters.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/search/GetCasesFilterValues": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of values for the cases filters.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/search/GetCasesFilterUserAndRoles": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of values.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/search/GetEntitiesFilterValues": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Return a list of values for the entities filters.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateCaseAssignmentPolicySettings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetMoveCaseBetweenEnvironmentsPolicySettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateMoveCaseBetweenEnvironmentsPolicySettings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetAdvancedReportsSettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns advanced reports settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/SaveAdvancedReportsSettings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Saves advanced reports settings.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/TestAdvancedReportsSettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Validates advanced reports settings.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/UploadCustomActionResultJson": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Uploads custom action result in JSON format.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddCollaboratorRequest": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "AddCollaboratorRequest",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddLicenseAgreementSignature": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "AddLicenseAgreementSignature",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetLatestLicenseAgreement": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/UpdateCollaboratorRequest": {
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "UpdateCollaboratorRequest",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/DeleteCollaboratorRequest/{id}": {
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "AddCollaboratorRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetAllCollaboratorRequests": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "GetAllCollaboratorRequests",
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetCollaboratorRequestsByUser": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "GetCollaboratorRequestsByUser",
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/UpdateAlertGroupingRule": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Updates alert grouping rule.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetSystemEventEntityTypes": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns system event entity types.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetMaximumAlertsGroupingConfiguration": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns maximum alerts grouping configuration.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetPublicCertificate": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/IsPermittedToEnvironment/{environmentName}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "parameters": [
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetEnvironmentInstanceUrls": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetProxySettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the current proxy settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ProxySettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ProxySettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ProxySettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ProxySettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.ProxySettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/TestProxySettings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Test the settings configured for the proxy.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiTestProxyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiTestProxyResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiTestProxyResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiTestProxyResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiTestProxyResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiTestProxyResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetAnalysts": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the list of analysts in the User Management tab.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiAnalystsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiAnalystResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiAnalystResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiAnalystResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiAnalystResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiAnalystResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetUserProfiles": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns all the users profile fields.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetUserProfilesByEnvironments": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the user's profile fields configured for an analyst filtered by environments.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetUserProfileCards": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a summary of all the users profile cards including whether or not the user account is disabled.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiUsersPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetUserImage": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the image that is configured for a user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateUserProfile": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds or update fields in a given user profile.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.User.UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetTrackingListRecords": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of entities listed in the custom list (relevant for Custom Trigger in playbooks and Settings).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetTrackingListRecordsFiltered": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of entities listed in the custom list filtered by environments.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateTrackingListRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds or updates a custom list record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveTrackingListRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a custom list record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.TrackingListItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetTagDefinitionsRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the fields configured for a tag in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddTagDefinitionsRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds a tag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveTagDefinitionRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a tag.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetSlaDefinitionsRecords": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the fields configured for an SLA record.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetSlaDefinitions": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns SLA definitions.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddSlaDefinitionsRecord": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds an SLA record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveSlaDefinitionRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes an SLA record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetCaseStageDefinitionRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Return a list of the case stages configured in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddCaseStageDefinitionRecord": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds a case stage record in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveCaseStageDefinitionRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a case stage record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetAllModelBlockRecords": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of entities which the system will not group alerts by or entities which shouldn’t be displayed in the system.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetBlockListDetails": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of the entities listed in the blocklist and their details.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateModelBlockRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds or updates a block item record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveModelBlockRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a block item record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetNetworkDetails": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Return a list of the organizational networks configured in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateNetworkDetailsRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds or updates organizational network records.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveNetworkDetailsRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes organizational network records.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/settings/networks/permitted": {
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes organizational network records for all permitted environments.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/networks/{identifier}": {
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes organizational network record",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveAllNetworkDetailsRecords": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Remove all the organizational network records configured in the system.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetRootCauseCloseRecords": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of the case close root cause configured in the system.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/AddOrUpdateRootCauseClose": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds or updates a case close root cause record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/RemoveRootCauseClose": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes case close root cause record.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.DataModel.Managment.RootCauseClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetLdapSettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "description": "**This API is deprecated and will be removed on 09-13-2023.**",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/settings/AddOrUpdateLdapSettings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "description": "**This API is deprecated and will be removed on 09-13-2023.**",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiLdapSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/api/external/v1/settings/GetCaseAssigmentPolicySettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetEnvironments": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns a list of all the environments configured in the platform.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/ExportAuditLastWeekAsCsv": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Exports audit info from last week as a CSV file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/ExportAuditLastWeekAsCsvV2": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Exports audit info from last week as a CSV file.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/GetSystemVersion": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns the Siemplify version of the platform.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/external-authentication-settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves all the external authentication providers available.",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "description": "Filters by the name of the provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerType",
            "in": "query",
            "description": "Filters by the provider type",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Adds a new external provider instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/external/v1/external-authentication-settings/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves detailed information on a specific external provider.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "External provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a specific external provider instance from the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "External provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Settings"
        ],
        "summary": "Patches an existing external provider instance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Updates an existing external provider instance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/external/v1/idp-group-mapping": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Creates a new mapping configuration between Identity Provider and SOAR.",
        "requestBody": {
          "description": "New details of mapping configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves a list of idp-group-mappings.",
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "description": "An integer field that represents the number of page to fetch. \r\nAvailable inputs: 0 - 9999. (default = 0).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "example": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Represents the number of Idp mappings group to present at each page.\r\nAvailable inputs: 1 - 999 (default = 5).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            },
            "example": 5
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Represents order to sort by the results.\r\nAvailable inputs: 0 for Descending or 1 for Ascending.",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.SortOrder"
            },
            "example": 0
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "Represents the field to sort by the Idp Groups\r\nAvailable Inputs: 0 for IdpGroup, 1 for PermissionGroup\r\n2 for SocRoleId, 3 for Environments",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMappingSortField"
            },
            "example": 0
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "description": "Search term for the Idp group identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupPagingDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupPagingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupPagingDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupPagingDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupPagingDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/idp-group-mapping/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves specific mapping configuration by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The specific id to search by.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Updates an existing mapping configuration between Identity Provider and SOAR.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The specific id to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Updated details of mapping configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Deletes a mapping configuration according to a given identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The mapping identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/settings/tag-definition/names": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get all tag definitions names.",
        "parameters": [
          {
            "name": "RequestedPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/GetSocRoles": {
      "get": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Return a list of the SOC roles configured in the system.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/GetSocRolesByEnvironments": {
      "post": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Return a list of the SOC roles configured in the system filtered by environments.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.Requests.ApiSocRolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/GetSocRole/{id}": {
      "get": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Return a list of the SOC roles by their identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleWithRoleAccesses"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleWithRoleAccesses"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleWithRoleAccesses"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/HasAssignedUsers/{id}": {
      "get": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Checks if a specific SOC role has users assigned to it.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/AddOrUpdateSocRole": {
      "post": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Adds or update a SOC role in the system.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/socroles/DeleteSocRole": {
      "post": {
        "tags": [
          "SOC Roles"
        ],
        "summary": "Deletes a SOC role defined in the platform.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/Cards": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/{identifier}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/Logs": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "WebhookIdentifier",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "MinimumLogLevel",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Siemplify.Common.Logging.LogLevel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/{identifier}/statistics": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/ExportLogs/{identifier}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/external/v1/webhooks-management/Revoke/{identifier}": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Siemplify.Api.Common.ApiFile": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "blob": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.Common.LandingPageEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<ul><li>CasesOverview = 0</li><li>CasesWall = 1</li><li>HomepageMyCases = 2</li><li>HomepagePendingActions = 3</li><li>HomepageRequests = 4</li><li>Dashboards = 5</li><li>Reports = 6</li><li>Playbooks = 7</li><li>Search = 8</li><li>CommandCenter = 9</li><li>SiemHomepage = 10</li><li>SiemSearchLegacy = 11</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.Common.MainConfigurationItem": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.Cases.ApiSlaExpiration": {
        "type": "object",
        "properties": {
          "slaExpirationTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "criticalExpirationTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "expirationStatus": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.SlaExpirationEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.Cases.CaseInfo": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "string",
            "description": "Identifies the user who creates this case - only relevant for cases of type Request",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Events.SecurityEvent"
            },
            "description": "List of the events that make up this case",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "description": "Case environment",
            "nullable": true,
            "example": "Default Environment"
          },
          "sourceSystemName": {
            "type": "string",
            "description": "Name of the source system - based on the connector\r\n<example>VirusTotal</example>",
            "nullable": true
          },
          "ticketId": {
            "type": "string",
            "description": "External case id received from the external product - based on the connector",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "description": {
            "type": "string",
            "description": "Case description",
            "nullable": true,
            "example": "The case contains several phishing alerts"
          },
          "displayId": {
            "type": "string",
            "description": "External case display id received from the external product - based on the connector",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "reason": {
            "type": "string",
            "description": "Case reason",
            "nullable": true,
            "example": "Malicious"
          },
          "name": {
            "type": "string",
            "description": "Case name",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "deviceVendor": {
            "type": "string",
            "description": "Case product vendor - based on the connector",
            "nullable": true,
            "example": "Email server"
          },
          "deviceProduct": {
            "type": "string",
            "description": "Case product vendor - based on the connector",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "startTime": {
            "type": "integer",
            "description": "Case starting time in unix format as milliseconds - based on the connector",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "endTime": {
            "type": "integer",
            "description": "Case ending time in unix format as milliseconds - based on the connector",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "ruleGenerator": {
            "type": "string",
            "description": "Rule that generates this case - based on the connector",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "sourceGroupingIdentifier": {
            "type": "string",
            "description": "Source grouping identifier will be used to group alert into one case - depends on alert grouping configuration - based on the connector\r\n<example>67e2cbc1-eaa4-4b6e-a594-fe0e6278a255</example>",
            "nullable": true
          },
          "playbookTriggerKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Playbook trigger keywords - used for 'Alert Trigger Value' playbook trigger type.\r\nA comparison is made between those playbook keywords items and the trigger value set by the user.",
            "nullable": true
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
            },
            "nullable": true,
            "deprecated": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseInfoAttachment"
            },
            "description": "Case attachments - based on the connector",
            "nullable": true
          },
          "isTrimmed": {
            "type": "boolean",
            "description": "Flag that indicates whether the case got trimmed or not",
            "example": true
          },
          "dataType": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.LoadDataTypeEnumQueue"
          },
          "sourceType": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.IngestionSourceType"
          },
          "sourceSystemUrl": {
            "type": "string",
            "description": "Configured source url - defined in the connector that ingested this alert",
            "nullable": true,
            "example": "https://www.google.com"
          },
          "sourceRuleIdentifier": {
            "type": "string",
            "description": "Configured source rule url - defined in the connector that ingested this alert",
            "nullable": true,
            "example": "https://www.google.com/ruleDetections/{ruleParams}"
          },
          "siemAlertId": {
            "type": "string",
            "description": "Chronicle SIEM alert identifier.\r\n            \r\nIn case the identifier is null, then, it is assumed that\r\nit is not synced with the SIEM.\r\n            \r\nTo avoid syncing the alert, SiemAlertId can be set to -1.",
            "nullable": true,
            "example": "de_1dc89453-fd55-4c9f-96c9-c93f4926806b"
          }
        },
        "additionalProperties": false,
        "description": "Represents the case information model"
      },
      "Siemplify.Api.DataModel.Cases.CaseInfoAttachment": {
        "type": "object",
        "properties": {
          "base64Blob": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.Cases.CasePriority": {
        "enum": [
          0,
          40,
          60,
          80,
          100,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Unchanged = 0</li><li>Low = 40</li><li>Medium = 60</li><li>High = 80</li><li>Critical = 100</li><li>Informative = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.Cases.CaseType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>External = 0</li><li>Test = 1</li><li>Request = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.Cases.CasesPackage": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseInfo"
            },
            "description": "Package case information items.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "connectorIdentifier": {
            "type": "string",
            "nullable": true
          },
          "debugOutput": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the case package model"
      },
      "Siemplify.Api.DataModel.Cases.IngestionSourceType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Connector = 1</li><li>Webhook = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.Cases.LoadDataTypeEnumQueue": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>EVENTS = 0</li><li>CASES = 1</li><li>CONNECTOR_LOG = 2</li><li>CONNECTOR_OVERFLOW = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.Cases.SlaExpirationEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>PassedDue = 0</li><li>OpenSla = 1</li><li>NoSla = 2</li><li>CriticalExpired = 3</li><li>Paused = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.Enrichment.PropertyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Property key",
            "nullable": true,
            "example": "test key"
          },
          "value": {
            "type": "string",
            "description": "Property value",
            "nullable": true,
            "example": "test value"
          }
        },
        "additionalProperties": false,
        "description": "Represents a key-value model"
      },
      "Siemplify.Api.DataModel.Events.SecurityEvent": {
        "type": "object",
        "properties": {
          "_fields": {
            "type": "object",
            "additionalProperties": { }
          },
          "_rawDataFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "sourceSystemName": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.Events.SiemplifyEventEntityTypesEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36
        ],
        "type": "integer",
        "description": "<ul><li>SourceHostName = 0</li><li>SourceAddress = 1</li><li>SourceUserName = 2</li><li>SourceProcessName = 3</li><li>SourceMacAddress = 4</li><li>DestinationHostName = 5</li><li>DestinationAddress = 6</li><li>DestinationUserName = 7</li><li>DestinationProcessName = 8</li><li>DestinationMacAddress = 9</li><li>DestinationURL = 10</li><li>Process = 11</li><li>FileName = 12</li><li>FileHash = 13</li><li>EmailSubject = 14</li><li>ThreatSignature = 15</li><li>USB = 16</li><li>Deployment = 17</li><li>CreditCard = 18</li><li>PhoneNumber = 19</li><li>CVE = 20</li><li>ThreatActor = 21</li><li>ThreatCampaign = 22</li><li>GenericEntity = 23</li><li>ParentProcess = 24</li><li>ParentHash = 25</li><li>ChildProcess = 26</li><li>ChildHash = 27</li><li>SourceDomain = 28</li><li>DestinationDomain = 29</li><li>IPSET = 30</li><li>Cluster = 31</li><li>Application = 32</li><li>Database = 33</li><li>Pod = 34</li><li>Container = 35</li><li>Service = 36</li></ul>",
        "format": "int32"
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiAddCommentToCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiAddOrRemoveTagToCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiAssignUserToCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiCaseImportanceRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiCaseUpdatesRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "currentModificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseDescriptionRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiChangeCasePriorityRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiChangeCaseStageRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiCloseCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "rootCause": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Api.DataModel.ExternalApi.ApiRenameCaseNameRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Actions.Interfaces.ActionStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "description": "<ul><li>Faulted = 0</li><li>AsyncPending = 1</li><li>Completed = 2</li><li>PendingUserInput = 3</li><li>PendingPreviousSteps = 4</li><li>Started = 5</li><li>FaultedAndSkipped = 6</li><li>HandledTimedout = 7</li><li>UnhandledTimedout = 8</li><li>Terminated = 9</li><li>NotRunAndSkipped = 10</li><li>PendingActionTimeout = 11</li><li>PendingActionTimeoutAndSkipped = 12</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Actions.Interfaces.ServerBaseClasses.ActionCategoryEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "<ul><li>Investigation = 0</li><li>Instruction = 1</li><li>Communication = 2</li><li>Remediation = 3</li><li>Containment = 4</li><li>Management = 5</li><li>Selection = 6</li><li>Custom = 7</li><li>Flow = 8</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.AgentAvailabilityConnectorEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Available = 0</li><li>MisconfigurationError = 1</li><li>ConnectionError = 2</li><li>NonAvailableForIde = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.AgentCommunicationStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Live = 0</li><li>Error = 1</li><li>Disabled = 2</li><li>WaitingForAgent = 3</li><li>Deleted = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.AgentLoggingLevelEnum": {
        "enum": [
          10,
          20,
          30,
          40
        ],
        "type": "integer",
        "description": "<ul><li>Debug = 10</li><li>Info = 20</li><li>Warning = 30</li><li>Error = 40</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.AgentPublisherConnectivityFlag": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Master = 0</li><li>Slave = 1</li><li>None = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.AgentStatusEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Enabled = 0</li><li>Disabled = 1</li><li>Deleted = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Live = 0</li><li>Error = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusResult": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherCommunicationStatusEnum"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherConnectivityResponse"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Agents.DataModel.PublisherConnectivityAgentList": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "nullable": true
          },
          "last_communication_time": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Agents.DataModel.PublisherConnectivityResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.PublisherConnectivityAgentList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseKeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseRequest": {
        "type": "object",
        "properties": {
          "alertSource": {
            "type": "string",
            "nullable": true
          },
          "ruleName": {
            "type": "string",
            "nullable": true
          },
          "alertProduct": {
            "type": "string",
            "nullable": true
          },
          "alertName": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "additionalAlertFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseKeyValue"
            },
            "nullable": true
          },
          "additionalEventFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.CustomSimulatedCaseKeyValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.AttacksSimulation.DataModel.DemoDataComponentEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "<ul><li>PhishingEmail = 0</li><li>RealPhishingEmail = 1</li><li>MalwareDetected = 2</li><li>GroupedMalwareDetected = 3</li><li>FailedLogin = 4</li><li>DataExfiltration = 5</li><li>IRCConnections = 6</li><li>LargeOutboundTransferHighRateOfTransfer = 7</li><li>AccessDisabledAccounts = 8</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.AttacksSimulation.DataModel.GenerationRequest": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          },
          "customCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "kinds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.AttacksSimulation.DataModel.DemoDataComponentEnum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.AttacksSimulation.DataModel.IngestCaseInOtherEnvironmentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "environment": {
            "type": "string",
            "description": "Case environment",
            "nullable": true,
            "example": "Default Environment"
          },
          "shouldCloseOldCase": {
            "type": "boolean",
            "description": "Flag that indicates whether the current case should get closed or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the ingest case in other environment request model"
      },
      "Siemplify.Common.AttacksSimulation.DataModel.SimulationRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "shouldDoGrouping": {
            "type": "boolean"
          },
          "fieldsToReplace": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.ExternalProviderMapperDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identifier used to distinguish between providers.",
            "format": "uuid",
            "example": "6b294dcf-4cde-4a81-b401-d5adfce1d6da"
          },
          "providerName": {
            "type": "string",
            "description": "Name of the provider, this field is unique.",
            "nullable": true,
            "example": "oktaProvider"
          },
          "identityProviderType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType"
          },
          "remoteEntityIdUrl": {
            "type": "string",
            "description": "The identifier of the IDP.",
            "nullable": true,
            "example": "http://www.okta.com/exk95djonm0rDdj"
          },
          "localEntityIdUrl": {
            "type": "string",
            "description": "The ACS URL.",
            "nullable": true,
            "example": "https://mydomain.net/Saml2"
          },
          "autoRedirect": {
            "type": "boolean",
            "description": "Decides if user can be automatically authenticated.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "autoAddUser": {
            "type": "boolean",
            "description": "Created user dynamically when the log in based on the attributes configured.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "areSamlSettingsInUse": {
            "type": "boolean",
            "description": "Are the settings enabled.",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "publicCertificate": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "allowUnsolicitedResponse": {
            "type": "boolean",
            "description": "User will automatically be logged in into the system from external provider application.",
            "nullable": true
          },
          "firstNameAttribute": {
            "type": "string",
            "description": "Name of the field from which first name is extracted.",
            "nullable": true,
            "example": "FirstName"
          },
          "lastNameAttribute": {
            "type": "string",
            "description": "Name of the field from which last name is extracted.",
            "nullable": true,
            "example": "LastName"
          },
          "usernameAttribute": {
            "type": "string",
            "description": "Name of the field from which login id is extracted.",
            "nullable": true,
            "example": "Username"
          },
          "emailAttribute": {
            "type": "string",
            "description": "Name of the field from which user email is extracted.",
            "nullable": true,
            "example": "Primary email"
          },
          "defaultLicenseType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "defaultSocRoleId": {
            "type": "integer",
            "description": "The role of the new user.(only applicable on just in time user provisioning).",
            "format": "int64",
            "nullable": true
          },
          "defaultPermissionGroup": {
            "type": "string",
            "description": "The permission group of the new user. (only applicable on just in time user provisioning).",
            "nullable": true,
            "example": "Admins"
          },
          "defaultEnvironments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The environments the new user will be exposed to. (only applicable on just in time user provisioning).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.ExternalProviderMapperDtoBase": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Name of the provider, this field is unique.",
            "nullable": true,
            "example": "oktaProvider"
          },
          "identityProviderType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType"
          },
          "remoteEntityIdUrl": {
            "type": "string",
            "description": "The identifier of the IDP.",
            "nullable": true,
            "example": "http://www.okta.com/exk95djonm0rDdj"
          },
          "localEntityIdUrl": {
            "type": "string",
            "description": "The ACS URL.",
            "nullable": true,
            "example": "https://mydomain.net/Saml2"
          },
          "autoRedirect": {
            "type": "boolean",
            "description": "Decides if user can be automatically authenticated.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "autoAddUser": {
            "type": "boolean",
            "description": "Created user dynamically when the log in based on the attributes configured.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "areSamlSettingsInUse": {
            "type": "boolean",
            "description": "Are the settings enabled.",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "publicCertificate": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "allowUnsolicitedResponse": {
            "type": "boolean",
            "description": "User will automatically be logged in into the system from external provider application.",
            "nullable": true
          },
          "firstNameAttribute": {
            "type": "string",
            "description": "Name of the field from which first name is extracted.",
            "nullable": true,
            "example": "FirstName"
          },
          "lastNameAttribute": {
            "type": "string",
            "description": "Name of the field from which last name is extracted.",
            "nullable": true,
            "example": "LastName"
          },
          "usernameAttribute": {
            "type": "string",
            "description": "Name of the field from which login id is extracted.",
            "nullable": true,
            "example": "Username"
          },
          "emailAttribute": {
            "type": "string",
            "description": "Name of the field from which user email is extracted.",
            "nullable": true,
            "example": "Primary email"
          },
          "defaultLicenseType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "defaultSocRoleId": {
            "type": "integer",
            "description": "The role of the new user.(only applicable on just in time user provisioning).",
            "format": "int64",
            "nullable": true
          },
          "defaultPermissionGroup": {
            "type": "string",
            "description": "The permission group of the new user. (only applicable on just in time user provisioning).",
            "nullable": true,
            "example": "Admins"
          },
          "defaultEnvironments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The environments the new user will be exposed to. (only applicable on just in time user provisioning).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for creating or updating external authentication settings (saml settings)"
      },
      "Siemplify.Common.Authentication.Apis.IdpGroupMapperDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the mapping group.",
            "format": "uuid",
            "example": "6B29FC40-CA47-1067-B31D-00DD010662DA"
          },
          "idpGroup": {
            "type": "string",
            "description": "The permission group on the target Identity Provider.",
            "nullable": true
          },
          "permissionGroup": {
            "type": "string",
            "description": "The permission group in soar associated with the mapping group.",
            "nullable": true
          },
          "socRoleId": {
            "type": "integer",
            "description": "The identifier of the soc-role associated with the mapping group.\r\nex. 2 - for Tier-1 soc-role group.",
            "format": "int64",
            "example": 2
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing the environments associated with the mapping group.",
            "nullable": true,
            "example": [
              "Environment C",
              "Environment D"
            ]
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.IdpGroupMapperDtoBase": {
        "type": "object",
        "properties": {
          "idpGroup": {
            "type": "string",
            "description": "The permission group on the target Identity Provider.",
            "nullable": true
          },
          "permissionGroup": {
            "type": "string",
            "description": "The permission group in soar associated with the mapping group.",
            "nullable": true
          },
          "socRoleId": {
            "type": "integer",
            "description": "The identifier of the soc-role associated with the mapping group.\r\nex. 2 - for Tier-1 soc-role group.",
            "format": "int64",
            "example": 2
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing the environments associated with the mapping group.",
            "nullable": true,
            "example": [
              "Environment C",
              "Environment D"
            ]
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.IdpGroupMappingSortField": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>IdpGroup = 0</li><li>PermissionGroup = 1</li><li>SocRoleId = 2</li><li>Environments = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Authentication.Apis.IdpGroupPagingDto": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.IdpGroupMapperDto"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Common.Authentication.Apis.PagingData"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.PagingData": {
        "type": "object",
        "properties": {
          "totalNumberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecordsCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Authentication.Apis.PatchExternalProviderRequest": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Name of the provider, this field is unique.",
            "nullable": true,
            "example": "oktaProvider"
          },
          "identityProviderType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType"
          },
          "remoteEntityIdUrl": {
            "type": "string",
            "description": "The identifier of the IDP.",
            "nullable": true,
            "example": "http://www.okta.com/exk95djonm0rDdj"
          },
          "localEntityIdUrl": {
            "type": "string",
            "description": "The ACS URL.",
            "nullable": true,
            "example": "https://mydomain.net/Saml2"
          },
          "autoRedirect": {
            "type": "boolean",
            "description": "Decides if user can be automatically authenticated.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "autoAddUser": {
            "type": "boolean",
            "description": "Created user dynamically when the log in based on the attributes configured.\r\nWhen there is more than one provider this should be always false.",
            "nullable": true
          },
          "areSamlSettingsInUse": {
            "type": "boolean",
            "description": "Are the settings enabled.",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "publicCertificate": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "allowUnsolicitedResponse": {
            "type": "boolean",
            "description": "User will automatically be logged in into the system from external provider application.",
            "nullable": true
          },
          "firstNameAttribute": {
            "type": "string",
            "description": "Name of the field from which first name is extracted.",
            "nullable": true,
            "example": "FirstName"
          },
          "lastNameAttribute": {
            "type": "string",
            "description": "Name of the field from which last name is extracted.",
            "nullable": true,
            "example": "LastName"
          },
          "usernameAttribute": {
            "type": "string",
            "description": "Name of the field from which login id is extracted.",
            "nullable": true,
            "example": "Username"
          },
          "emailAttribute": {
            "type": "string",
            "description": "Name of the field from which user email is extracted.",
            "nullable": true,
            "example": "Primary email"
          },
          "defaultLicenseType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "defaultSocRoleId": {
            "type": "integer",
            "description": "The role of the new user.(only applicable on just in time user provisioning).",
            "format": "int64",
            "nullable": true
          },
          "defaultPermissionGroup": {
            "type": "string",
            "description": "The permission group of the new user. (only applicable on just in time user provisioning).",
            "nullable": true,
            "example": "Admins"
          },
          "defaultEnvironments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The environments the new user will be exposed to. (only applicable on just in time user provisioning).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "contentUrl": {
            "type": "string",
            "nullable": true
          },
          "previewUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "pinned": {
            "type": "boolean"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CaseChat.ApiDataModels.ApiCaseChatAttachment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.CaseSummaryData": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.SummaryFieldData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.CasesQueryRequest": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortType": {
            "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.SortTypeEnum"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "liveQueueSettings": {
            "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.LiveQueueSettingsDataModel"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.LiveQueueSettingsDataModel": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "analysts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "stages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "startTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "endTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.Requests.AddEvidenceRequest": {
        "type": "object",
        "properties": {
          "caseIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "base64Blob": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.Requests.ApiAddOrUpdateCaseTask": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskPriorityEnum"
          },
          "isImportant": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskStatusEnum"
          },
          "ownerComment": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "dueDateUnixTimeMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completionComment": {
            "type": "string",
            "nullable": true
          },
          "completionUnixTimeMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.Requests.ApiRaiseIncidentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.Requests.ApiUnraiseIncidentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.SortTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "<ul><li>CreationTimeDescending = 0</li><li>CreationTimeAscending = 1</li><li>ModificationTimeDescending = 2</li><li>ModificationTimeAscending = 3</li><li>PriorityDescending = 4</li><li>PriorityAscending = 5</li><li>IdDescending = 6</li><li>IdAscending = 7</li><li>SlaDescending = 8</li><li>SlaAscending = 9</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Cases.DataModel.SummaryFieldData": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.SummaryValueData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Cases.DataModel.SummaryValueData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.AlertCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Alert ID",
            "format": "int64",
            "example": 1
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Alert ingestion time in unix format as milliseconds",
            "format": "int64",
            "example": 1673774674567
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Alert modification time internally in unix format as milliseconds",
            "format": "int64",
            "example": 1673774674567
          },
          "identifier": {
            "type": "string",
            "description": "Alert identifier - {alertName}_{ticketId}",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedThreatIndicatorStatus"
          },
          "name": {
            "type": "string",
            "description": "Alert display name",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "workflowsStatus": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "slaExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "slaCriticalExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "description": "Alert start time in unix format as milliseconds.\r\nStart time of the first event.",
            "format": "int64",
            "example": 1673774674567
          },
          "endTime": {
            "type": "integer",
            "description": "Alert end time in unix format as milliseconds.\r\nEnd time of the last event.",
            "format": "int64",
            "example": 1673774674567
          },
          "alertGroupIdentifier": {
            "type": "string",
            "description": "Group identifier of the alert which is unique across the system. Identifier property can be identical for 2 alerts in 2 different environments.\r\nAlertGroupIdentifier structure - {Identifier}_{Guid.New}.",
            "nullable": true,
            "example": "Phishing email detector3wM/eL7XV3hdthDGI3TUCzTZrm+gwID5DaLrxaRCT6U=_8de6bde4-3431-426d-a64f-3370e7b3002e"
          },
          "eventsCount": {
            "type": "integer",
            "description": "Number of events the alert contains",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Alert display name",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL"
          },
          "ruleGenerator": {
            "type": "string",
            "description": "Rule that generates this alert - based on the connector",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "deviceProduct": {
            "type": "string",
            "description": "Source product that the alert ingested from.",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "playbookAttached": {
            "type": "string",
            "description": "Name of the selected playbook attached to the alert. The playbook selected is the one with the highest priority. If there are a few playbooks with the same priority, the server will use the one that was created first.",
            "nullable": true,
            "example": "New Playbook"
          },
          "playbookRunCount": {
            "type": "integer",
            "description": "Run count of the selected playbook attached to the alert. The playbook selected is the one with the highest priority. If there are a few playbooks with the same priority, the server will use the one that was created first.",
            "format": "int32",
            "example": 1
          },
          "isManualAlert": {
            "type": "boolean",
            "description": "Flag that indicates whether the alert was created manually - currently not in use",
            "example": true
          },
          "sla": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.ApiSla"
          },
          "fieldsGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Cases.FieldGroupData"
            },
            "description": "List of the alert fields",
            "nullable": true
          },
          "sourceUrl": {
            "type": "string",
            "description": "Configured source url - defined in the connector that ingested this alert",
            "nullable": true,
            "example": "https://www.google.com"
          },
          "sourceRuleUrl": {
            "type": "string",
            "description": "Configured source rule url - defined in the connector that ingested this alert",
            "nullable": true,
            "example": "https://www.google.com/ruleDetections/{ruleParams}"
          },
          "siemAlertId": {
            "type": "string",
            "description": "Chronicle SIEM alert identifier.\r\n            \r\nIn case the identifier is null, then, it is assumed that\r\nit is not synced with the SIEM.\r\n            \r\nTo avoid syncing the alert, SiemAlertId can be set to -1.",
            "nullable": true,
            "example": "de_1dc89453-fd55-4c9f-96c9-c93f4926806b"
          }
        },
        "additionalProperties": false,
        "description": "Represents an alert card in the system"
      },
      "Siemplify.Common.CasesV2.DataModel.ApiSla": {
        "type": "object",
        "properties": {
          "slaExpirationTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "criticalExpirationTime": {
            "type": "integer",
            "description": "SLA critical expiration time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "expirationStatus": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.SlaExpirationEnum"
          },
          "remainingTimeSinceLastPause": {
            "type": "integer",
            "description": "SLA remaining since last pause time in unix format as milliseconds.",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.CaseCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isTouched": {
            "type": "boolean"
          },
          "hasSuspiciousEntity": {
            "type": "boolean"
          },
          "isMerged": {
            "type": "boolean"
          },
          "isImportant": {
            "type": "boolean"
          },
          "isIncident": {
            "type": "boolean"
          },
          "hasWorkflow": {
            "type": "boolean"
          },
          "environment": {
            "$ref": "#/components/schemas/Siemplify.Common.Environments.EnvironmentCard"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "assignedUserName": {
            "type": "string",
            "nullable": true
          },
          "assignedUserFullName": {
            "type": "string",
            "nullable": true
          },
          "apiSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.SlaExpiration"
          },
          "apiStageSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.ApiSla"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "caseSource": {
            "type": "string",
            "nullable": true
          },
          "isOverflowCase": {
            "type": "boolean"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "productFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "canOpenIncident": {
            "type": "boolean"
          },
          "hasIncident": {
            "type": "boolean"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.CaseDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Case creation time in unix format as milliseconds - based on the time the case was created in the platform",
            "format": "int64",
            "example": 1673774674567
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Case modification time in unix format as milliseconds - based on the time the case was modified in the platform",
            "format": "int64",
            "example": 1673774674567
          },
          "name": {
            "type": "string",
            "description": "Case title",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "isImportant": {
            "type": "boolean",
            "description": "Flag that indicates whether the case is important or not",
            "example": true
          },
          "isIncident": {
            "type": "boolean",
            "description": "Flag that indicates whether the case is opened as an incident or not",
            "example": true
          },
          "startTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Case start time in unix format as milliseconds\r\nStart time of the first event when the case first created",
            "format": "int64",
            "example": 1673774674567
          },
          "endTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Case end time in unix format as milliseconds\r\nEnd time of the last event when the case first created",
            "format": "int64",
            "example": 1673774674567
          },
          "assignedUser": {
            "type": "string",
            "description": "Case assigned user",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "description": {
            "type": "string",
            "description": "Case description",
            "nullable": true,
            "example": "Example description"
          },
          "isTestCase": {
            "type": "boolean",
            "description": "Flag that indicates whether the case type is test or not\r\nBased on the type of case",
            "readOnly": true,
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "stage": {
            "type": "string",
            "description": "Case stage",
            "nullable": true,
            "example": "Triage"
          },
          "environment": {
            "type": "string",
            "description": "Case environment",
            "nullable": true,
            "example": "Default Environment"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
          },
          "incidentId": {
            "type": "integer",
            "description": "An incident id was opened in the Incident Manager from this case. If equal to 0 no incident was opened.",
            "format": "int64",
            "nullable": true,
            "example": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the case tags",
            "nullable": true,
            "example": [
              "example tag1",
              "example tag2"
            ]
          },
          "alertCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.AlertCard"
            },
            "description": "List of alert cards",
            "nullable": true
          },
          "isOverflowCase": {
            "type": "boolean",
            "description": "Flag that indicates whether the case is classified as an overflow case or not",
            "example": true
          },
          "isManualCase": {
            "type": "boolean",
            "description": "Flag that indicates whether the case was created manually or not",
            "example": true
          },
          "slaExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "slaCriticalExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stageSlaExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stageSlaCriticalExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canOpenIncident": {
            "type": "boolean",
            "description": "Flag that indicates whether the case can be opened in the incident management or not, based on whether the case's environment is authorized to access the Incident Management module",
            "example": true
          },
          "sla": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.ApiSla"
          },
          "stageSla": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.ApiSla"
          }
        },
        "additionalProperties": false,
        "description": "Represents a case information in the system"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AddAttachmentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "base64Blob": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AddCaseCommentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AddCaseTagRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "tag": {
            "type": "string",
            "description": "Case tag",
            "nullable": true,
            "example": "Simulated case"
          }
        },
        "additionalProperties": false,
        "description": "Represents the add case tag request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AddCommentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "base64Blob": {
            "type": "string",
            "description": "File content as base64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": ".doc"
          },
          "name": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "Case_1_Report"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "This is a case comment"
          },
          "isImportant": {
            "type": "boolean",
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a model used for adding a comment and an attachment to a case.\r\nIt contains the necessary data and information required to create the comment and attachment."
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AddOrUpdateCaseTaskRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task id",
            "format": "int64",
            "example": 1
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskPriorityEnum"
          },
          "isImportant": {
            "type": "boolean",
            "description": "Flag that indicates whether the task is important or not",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskStatusEnum"
          },
          "ownerComment": {
            "type": "string",
            "description": "Owner comment - currently not in use",
            "nullable": true,
            "example": "Please resolve this case"
          },
          "content": {
            "type": "string",
            "description": "Task content",
            "nullable": true,
            "example": "Please resolve this case"
          },
          "creator": {
            "type": "string",
            "description": "Task creator",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "owner": {
            "type": "string",
            "description": "Task assignee",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "lastModifier": {
            "type": "string",
            "description": "Task last modifier",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "caseName": {
            "type": "string",
            "description": "Case title",
            "nullable": true,
            "example": "Remote Failed login"
          },
          "dueDateUnixTimeInMs": {
            "type": "integer",
            "description": "Task due date time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "completionComment": {
            "type": "string",
            "description": "Task completion comment",
            "nullable": true,
            "example": "Done!"
          },
          "completionDateTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Task completion time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "completor": {
            "type": "string",
            "description": "Task completer",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Flag that represent whether the task is favorite or not",
            "example": true
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "nullable": true,
            "example": "Investigate"
          }
        },
        "additionalProperties": false,
        "description": "Represents the add or update case task request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AlertEntitiesRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ApiAddCaseCommentRequest": {
        "required": [
          "caseId"
        ],
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "The ID of the case associated with the comment.",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "The identifier of the alert associated with the comment.",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "base64Blob": {
            "type": "string",
            "description": "The base64 encoded string of the attachment file.",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "description": "The type of the file.",
            "nullable": true,
            "example": ".doc"
          },
          "fileName": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true,
            "example": "Case_1_Report"
          },
          "comment": {
            "type": "string",
            "description": "The comment.",
            "nullable": true,
            "example": "This is a case comment"
          }
        },
        "additionalProperties": false,
        "description": "Represents a model used for adding a comment and an attachment to a case.\r\nIt contains the necessary data and information required to create the comment and attachment."
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateCaseCommentRequest": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "integer",
            "description": "File ID",
            "format": "int64",
            "example": 1
          },
          "base64Blob": {
            "type": "string",
            "description": "The base64 encoded string of the attachment file.",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "description": "The type of the file.",
            "nullable": true,
            "example": ".doc"
          },
          "fileName": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true,
            "example": "Case_1_Report"
          },
          "comment": {
            "type": "string",
            "description": "The comment.",
            "nullable": true,
            "example": "This is a case comment"
          }
        },
        "additionalProperties": false,
        "description": "Represents a model used for updating a comment and an attachment to a case.\r\nIt contains the necessary data and information required to update the comment and attachment."
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ApiUpdateWallItemFavoriteRequest": {
        "type": "object",
        "properties": {
          "isFavorite": {
            "type": "boolean",
            "description": "Flag that represent whether the wall item is favorite or not",
            "example": true
          },
          "recordId": {
            "type": "integer",
            "description": "The record id - (record id + type) is unique",
            "format": "int64",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          },
          "activityKind": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.Activities.ActivityKind"
          }
        },
        "additionalProperties": false,
        "description": "Represents the set-wall-item-as-favorite request - used to update IsFavorite flag"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.AssignUserToCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "userId": {
            "type": "string",
            "description": "User id",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          }
        },
        "additionalProperties": false,
        "description": "Represents the assign user to case request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.BulkAssignRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.BulkCloseCaseRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "closeReason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          },
          "rootCause": {
            "type": "string",
            "nullable": true
          },
          "closeComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.BulkReopenCaseRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "IDs of the cases to reopen",
            "nullable": true,
            "example": [
              1,
              2
            ]
          },
          "reopenComment": {
            "type": "string",
            "description": "Case reopen comment",
            "nullable": true,
            "example": "The case has been reopened since it should be investigated further"
          }
        },
        "additionalProperties": false,
        "description": "Represents the reopen cases request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CaseImportanceRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "isImportant": {
            "type": "boolean",
            "description": "Flag that indicates whether the case is important or not",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the change case importance request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CaseQueueFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseQueueFilterTypeEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CompareOperatorsEnum"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeUsers": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CaseQueueFilterTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "<ul><li>Analysts = 0</li><li>Environments = 1</li><li>Priorities = 2</li><li>Stages = 3</li><li>Tags = 4</li><li>AlertsName = 5</li><li>Products = 6</li><li>AlertsVendor = 7</li><li>Type = 8</li><li>EnvironmentDynamicParameters = 9</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CasesQueueRequest": {
        "type": "object",
        "properties": {
          "sortType": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.SortTypeEnum"
          },
          "filterOperator": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.LogicalOperatorEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseQueueFilter"
            },
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
            },
            "nullable": true
          },
          "isVisibleInQueue": {
            "type": "boolean",
            "nullable": true
          },
          "timeRangeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchTimeRangeType"
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseDescriptionRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "Case description",
            "nullable": true,
            "example": "This case contains several phishing alerts"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ChangeCaseStageRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "stage": {
            "type": "string",
            "description": "Case stage",
            "nullable": true,
            "example": "Triage"
          }
        },
        "additionalProperties": false,
        "description": "Represents the change case stage request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CloseCaseRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "rootCause": {
            "type": "string",
            "description": "Case root cause",
            "nullable": true,
            "example": "Malicious"
          },
          "comment": {
            "type": "string",
            "description": "Case comment",
            "nullable": true,
            "example": "Test comment"
          },
          "reason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          }
        },
        "additionalProperties": false,
        "description": "Represents the close case request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CompareOperatorsEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Is = 0</li><li>IsNot = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.CreateEntityRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.DomainEntityDataModel"
            },
            "description": "Entities to be created",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the create entity request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.DomainEntityDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "isSuspicious": {
            "type": "boolean"
          },
          "isArtifact": {
            "type": "boolean"
          },
          "isEnriched": {
            "type": "boolean"
          },
          "isVulnerable": {
            "type": "boolean"
          },
          "isPivot": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "isManuallyCreated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.GetAlertEventsRequest": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the Get alert events request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.IsCaseUpdatedRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "currentModificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Case current modification time in unix format as milliseconds",
            "format": "int64",
            "example": 1673774674567
          }
        },
        "additionalProperties": false,
        "description": "Represents the Is Case Updated request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.RaiseIncidentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the raise incident model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.RemoveCaseTagRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "tag": {
            "type": "string",
            "description": "Case tag",
            "nullable": true,
            "example": "Simulated case"
          }
        },
        "additionalProperties": false,
        "description": "Represents the remove case tag request model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.RenameCaseNameRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Case title",
            "nullable": true,
            "example": "Phishing email detector"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.ResolveOverviewRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "widgetDefinitionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "forceRefresh": {
            "type": "boolean"
          },
          "isFirstRequest": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.SortTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<ul><li>CreationTimeDescending = 0</li><li>CreationTimeAscending = 1</li><li>ModificationTimeDescending = 2</li><li>ModificationTimeAscending = 3</li><li>PriorityDescending = 4</li><li>PriorityAscending = 5</li><li>IdDescending = 6</li><li>IdAscending = 7</li><li>SlaDescending = 8</li><li>SlaAscending = 9</li><li>StageSlaDescending = 10</li><li>StageSlaAscending = 11</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.UnraiseIncidentRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the un-raise case as an incident model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.UpdateAlertPriorityRequest": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "alertName": {
            "type": "string",
            "description": "Alert Name",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL"
          },
          "previousPriority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          }
        },
        "additionalProperties": false,
        "description": "Represents the update alert priority model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.UpdateCasePriorityRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          }
        },
        "additionalProperties": false,
        "description": "Represents the update case priority model"
      },
      "Siemplify.Common.CasesV2.DataModel.Requests.UpdateCommentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "attachmentId": {
            "type": "integer",
            "description": "File ID",
            "format": "int64",
            "example": 1
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "base64Blob": {
            "type": "string",
            "description": "File content as base64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": ".doc"
          },
          "name": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "Case_1_Report"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "This is a case comment"
          },
          "isImportant": {
            "type": "boolean",
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a model used for updating a comment and an attachment to a case.\r\nIt contains the necessary data and information required to update the comment and attachment."
      },
      "Siemplify.Common.CasesV2.DataModel.Responses.AlertEvent": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Cases.FieldGroupData"
            },
            "description": "List of the event field groups\r\nGroups of RawFields",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "description": "Event identifier",
            "format": "uuid",
            "example": "1a1e0ebd-ce0c-437e-be7a-c975f445b4e4"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "name": {
            "type": "string",
            "description": "Event name",
            "nullable": true,
            "example": "Email check"
          },
          "product": {
            "type": "string",
            "description": "Case product - based on the connector",
            "nullable": true,
            "example": "Phishing email detector"
          },
          "port": {
            "type": "string",
            "description": "Event port - based on the connector",
            "nullable": true,
            "example": "5432"
          },
          "sourceSystemName": {
            "type": "string",
            "description": "Name of the source system - based on the connector\r\n<example>VirusTotal</example>",
            "nullable": true
          },
          "outcome": {
            "type": "string",
            "description": "Event category outcome - based on the connector",
            "nullable": true,
            "example": "allowed"
          },
          "time": {
            "type": "integer",
            "description": "Event time value\r\nDetermine by fall back hierarchy, startTime -> endTime -> managerReceiptTime by that order",
            "format": "int64",
            "example": 1673774674567
          },
          "type": {
            "type": "string",
            "description": "Event type",
            "nullable": true,
            "example": "USB"
          },
          "artifactEntities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of entities that cataloged as artifacts",
            "nullable": true,
            "example": [
              "USB"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Represents a alert event information"
      },
      "Siemplify.Common.CasesV2.DataModel.Responses.CasesQueueResponse": {
        "type": "object",
        "properties": {
          "caseCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.CaseCard"
            },
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Results.BaseWidgetResultsData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "gridColumns": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "jsonData": {
            "type": "string",
            "nullable": true
          },
          "errorJsonData": {
            "type": "string",
            "nullable": true
          },
          "resultStatus": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.ResultStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Results.CaseQueueFilterData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "filterOperator": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.LogicalOperatorEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Requests.CaseQueueFilter"
            },
            "nullable": true
          },
          "timeRangeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchTimeRangeType"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Results.OverviewData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "playbookDefinitionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.Results.OverviewWidgetMetadataResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Results.OverviewWidgetMetadataResult": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "templateIdentifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "width": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum"
          },
          "configuration": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.BaseDataConfiguration"
          },
          "presentIfEmpty": {
            "type": "boolean"
          },
          "conditionsGroup": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsGroup"
          },
          "predefinedWidgetTemplateIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stepIntegration": {
            "type": "string",
            "nullable": true
          },
          "blockStepIdentifier": {
            "type": "string",
            "description": "Represents the nested block step identifier from a playbook;\r\nOnly used when the current widget is a predefined widget linked to step inside a block;",
            "format": "uuid",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "blockStepInstanceName": {
            "type": "string",
            "description": "Represents the nested block step instance name from a playbook;\r\nOnly used when the current widget is a predefined widget linked to step inside a block;",
            "nullable": true,
            "example": "New Block_1"
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CasesV2.DataModel.Results.ResultStatusEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Success = 0</li><li>Error = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.DataModel.SlaExpiration": {
        "type": "object",
        "properties": {
          "slaExpirationTime": {
            "type": "integer",
            "description": "SLA expiration time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "criticalExpirationTime": {
            "type": "integer",
            "description": "SLA critical expiration time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "expirationStatus": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.SlaExpirationEnum"
          }
        },
        "additionalProperties": false,
        "description": "Represents the case sla information"
      },
      "Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesFiltersEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>IsAssignedToMe = 0</li><li>IsAssignedToMyRole = 1</li><li>IsMentioningMeInComment = 2</li><li>IsMentioningMyRoleInComment = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesPriorityFiltersEnum": {
        "enum": [
          40,
          60,
          80,
          100,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Low = 40</li><li>Medium = 60</li><li>High = 80</li><li>Critical = 100</li><li>Informative = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesSlaFiltersEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Exceeded = 0</li><li>Critical = 1</li><li>Normal = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CasesV2.Enums.CasesEnums+HomepageCasesSortByEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "<ul><li>CreationTimeAscending = 0</li><li>CreationTimeDescending = 1</li><li>PriorityAscending = 2</li><li>PriorityDescending = 3</li><li>RemainingSlaAscending = 4</li><li>RemainingSlaDescending = 5</li><li>RemainingCaseSlaAscending = 6</li><li>RemainingCaseSlaDescending = 7</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Chat.DataModel.ChannelTypes": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Direct = 0</li><li>Group = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Chat.DataModel.ChatChannelCard": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "channelIdentifier": {
            "type": "string",
            "nullable": true
          },
          "hasNewMessages": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Chat.DataModel.ChannelTypes"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "groupAdminMember": {
            "type": "string",
            "nullable": true
          },
          "lastMessageSentTime": {
            "type": "integer",
            "format": "int64"
          },
          "groupMembers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastMessage": {
            "type": "string",
            "nullable": true
          },
          "lastViewTimeOfChannel": {
            "type": "integer",
            "format": "int64"
          },
          "additionalInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Chat.DataModel.ChatChannelMessage": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "channelIdentifier": {
            "type": "string",
            "nullable": true
          },
          "sentTime": {
            "type": "integer",
            "format": "int64"
          },
          "fromMember": {
            "type": "string",
            "nullable": true
          },
          "fromMemberName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentUser": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Chat.DataModel.Requests.ApiChannelConversationRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "channelIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Chat.DataModel.Requests.ApiSendChatMessageRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "channelIdentifier": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.CloudLogging.Requests.ApiLoggingRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Optional. A filter that chooses which log entries to return.\r\nSee Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries).\r\nOnly log entries that match the filter are returned.\r\nAn empty filter matches all log entries.\r\nThe maximum length of the filter is 10000 characters.\r\nThe filter supports the following properties for siemplify components:\r\n    labels.integration_name\r\n    labels.integration_instance\r\n    labels.integration_version\r\n    labels.connector_name\r\n    labels.connector_instance\r\n    labels.action_name\r\n    jsonPayload.job_name",
            "nullable": true,
            "example": "label.integration_name=\"Siemplify\""
          },
          "pageToken": {
            "type": "string",
            "description": "The token returned from the previous request. A value of an empty string retrieves the first page. Optional.",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "description": "The size of page to request. The response will not be larger than this, but may be smaller.\r\nA value of null or 0 uses a server-defined page size of 1000. Max value is 10000.",
            "format": "int32"
          },
          "sortOrder": {
            "type": "string",
            "description": "Optional. How the results should be sorted. Presently, the only permitted values are \"asc\" (default) and \"desc\".\r\nThe first option returns entries in order of increasing values of LogEntry.timestamp (oldest first),\r\nand the second option returns entries in order of decreasing timestamps (newest first).\r\nEntries with equal timestamps are returned in order of their insert_id values.",
            "nullable": true,
            "example": "desc"
          }
        },
        "additionalProperties": false,
        "description": "Cloud Logging request"
      },
      "Siemplify.Common.CloudLogging.Responses.ApiLoggingResponse": {
        "type": "object",
        "properties": {
          "pageToken": {
            "type": "string",
            "description": "The token returned from the previous request. A value of an empty string retrieves the first page.",
            "nullable": true
          },
          "filter": {
            "type": "string",
            "description": "Request filter provided from the previous request.",
            "nullable": true
          },
          "logs": {
            "description": "Structured logs with the following convention (placeholders are dynamic and depended on the response):\r\n\"Logs\": {\r\n       \"{{integration_name_1}}\": {\r\n          \"{{integration_instance_1}}\" : {\r\n               \"{{action_name_1}}\": [\r\n                    {\r\n                        \"Timestamp\": \"2023-06-18T04:15:23.669646600Z\",\r\n                        \"CorrelationId\": \"c6b449204b5f498e83cb31e3318e8876\",\r\n                        \"Message\": \"\",\r\n                        \"Severity\": \"Info\",\r\n                        \"IntegrationName\": \"{{integration_name_1}}\",\r\n                        \"IntegrationInstance\": \"{{integration_instance_1}}\",\r\n                        \"IntegrationVersion\": \"\",\r\n                        \"ActionName\": \"{{action_name_1}}}\"\r\n                    }\r\n               ],\r\n               \"{{action_name_2}}\":[\r\n                    ...\r\n               ]\r\n          },\r\n          \"{{integration_instance_2}}\" {\r\n               ...\r\n          },\r\n          \"connectors\": {\r\n             \"{{connector_name_1}}\":{\r\n                ...\r\n             },\r\n             \"{{connector_name_2}}\": {\r\n                ...\r\n             }\r\n          },\r\n          \"jobs\": {\r\n             \"{{job_name_1}}\": {\r\n                ...\r\n             }\r\n          }\r\n  }",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Cloud Logging response"
      },
      "Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>Comment = 1</li><li>Fact = 2</li><li>Decision = 3</li><li>Task = 4</li><li>Assessment = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentAccessEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Collaborator = 0</li><li>AdminCollaborator = 1</li><li>Auditor = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentRangeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Targeted = 0</li><li>OpportunityBased = 1</li><li>Unknown = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Attack = 0</li><li>Failure = 1</li><li>Unknown = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterUserTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Internal = 0</li><li>External = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Configuration.DataModel.HtmlTemplatesAllowListConfiguration": {
        "type": "object",
        "properties": {
          "allowedTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.ManagementServerConfiguration": {
        "type": "object",
        "properties": {
          "disableMappingEntityDelimiterList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Configuration.DataModel.ManagementServerConfiguration+MappingEntityDelimiterIsDisabled"
            },
            "nullable": true
          },
          "entityFieldNamesPlaceholderBlockList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "maliciousCodeDenyList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastQueryBackForScoringInDays": {
            "type": "integer",
            "format": "int32"
          },
          "alertMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "entitiesMultiplier": {
            "type": "integer",
            "format": "int32"
          },
          "similarCasesPercentThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "maxEntitiesAndRelationsInCase": {
            "type": "integer",
            "format": "int32"
          },
          "maxAttempsToChooseCaseCadidatesForGrouping": {
            "type": "integer",
            "format": "int32"
          },
          "loginSessionTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "maximumNotificationsToShow": {
            "type": "integer",
            "format": "int32"
          },
          "forgotPasswordTimeLimitInHours": {
            "type": "integer",
            "format": "int32"
          },
          "allowConcurrentUserSessions": {
            "type": "boolean"
          },
          "shouldTraceActions": {
            "type": "boolean"
          },
          "shouldTracePlaybooks": {
            "type": "boolean"
          },
          "isBeta": {
            "type": "boolean"
          },
          "shouldHideLogo": {
            "type": "boolean"
          },
          "shouldHideElevio": {
            "type": "boolean"
          },
          "shouldTracePythonExecution": {
            "type": "boolean"
          },
          "maximumConfigurableAlertsGrouping": {
            "type": "integer",
            "format": "int32"
          },
          "maximumCharactersGeneralResult": {
            "type": "integer",
            "format": "int32"
          },
          "defaultMaximumAlertsGrouping": {
            "type": "integer",
            "format": "int32"
          },
          "maximumManualPlaybooksPerAlert": {
            "type": "integer",
            "format": "int32"
          },
          "maximumRerunPlaybooksPerAlert": {
            "type": "integer",
            "format": "int32"
          },
          "maximumAutomaticPlaybooksPerAlert": {
            "type": "integer",
            "format": "int32"
          },
          "scriptDefaultTimeOutInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "scriptTimeoutTerminationGraceInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "minAsyncPollingIntervalInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "maxScriptTimeoutInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "connectorKeepAliveTimeoutInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "nginxConfigurationFolder": {
            "type": "string",
            "nullable": true
          },
          "asyncActionScheduleIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "noPlaceholderFound": {
            "type": "string",
            "nullable": true
          },
          "enableNotifications": {
            "type": "boolean"
          },
          "localStorePath": {
            "type": "string",
            "nullable": true
          },
          "stagingBucketName": {
            "type": "string",
            "nullable": true
          },
          "uncertifiedBucketName": {
            "type": "string",
            "nullable": true
          },
          "defaultAnnouncementIdentifier": {
            "type": "string",
            "nullable": true
          },
          "htmlTemplatesAllowListConfiguration": {
            "$ref": "#/components/schemas/Siemplify.Common.Configuration.DataModel.HtmlTemplatesAllowListConfiguration"
          },
          "systemNotificationsMessageTemplates": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "systemNotificationsConfiguration": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Siemplify.Common.Configuration.DataModel.SystemNotificationConf"
            },
            "nullable": true
          },
          "pythonVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Configuration.DataModel.PythonVersionSettings"
            },
            "nullable": true
          },
          "pythonScriptProvider": {
            "type": "string",
            "nullable": true
          },
          "privatePythonPod": {
            "type": "string",
            "nullable": true
          },
          "integrationsCacheFolder": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "pythonIntegrationsCacheFolder": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "commandLineExecutor": {
            "type": "string",
            "nullable": true
          },
          "pgBinPath": {
            "type": "string",
            "nullable": true
          },
          "connectorsProcessingFolderPath": {
            "type": "string",
            "nullable": true
          },
          "pythonExecutionTimeoutSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "indexerService": {
            "type": "string",
            "nullable": true
          },
          "indexerFillMissingValues": {
            "type": "boolean"
          },
          "spotlightUseCaseIdentifier": {
            "type": "string",
            "nullable": true
          },
          "reportTemplatesPath": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "maximumAlertSizeChars": {
            "type": "integer",
            "format": "int32"
          },
          "maximumFieldsPerEvent": {
            "type": "integer",
            "format": "int32"
          },
          "maximumEventsPerAlert": {
            "type": "integer",
            "format": "int32"
          },
          "alertUrlPath": {
            "type": "string",
            "nullable": true
          },
          "alertIdUrlParameter": {
            "type": "string",
            "nullable": true
          },
          "ruleUrlPath": {
            "type": "string",
            "nullable": true
          },
          "ruleUrlParameter": {
            "type": "string",
            "nullable": true
          },
          "entityUrlPath": {
            "type": "string",
            "nullable": true
          },
          "entityIdUrlParameter": {
            "type": "string",
            "nullable": true
          },
          "entityTypeUrlParameter": {
            "type": "string",
            "nullable": true
          },
          "trackedProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "maxSlaPeriodInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "siemSyncStartUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "siemSyncMaxEventsPerAlert": {
            "type": "integer",
            "format": "int32"
          },
          "dropAlertsWhenLicenseLimitReached": {
            "type": "boolean"
          },
          "dropAlertWhenEnvironmentNotExist": {
            "type": "boolean"
          },
          "indexerCacheItemSlidingExpirationSeconds": {
            "type": "number",
            "format": "double"
          },
          "maxJsonResultSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxWebhooksPresentedLogs": {
            "type": "integer",
            "format": "int32"
          },
          "connectorLogsTimePeriodSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "connectorLogsMaxPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "connectorLogsMaxEntriesPerInstance": {
            "type": "integer",
            "format": "int32"
          },
          "chronicleAuthServiceAccountName": {
            "type": "string",
            "nullable": true
          },
          "pendingActionsJobBatchSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.ManagementServerConfiguration+MappingEntityDelimiterIsDisabled": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.PythonVersionSettings": {
        "type": "object",
        "properties": {
          "pythonVersion": {
            "$ref": "#/components/schemas/Siemplify.Common.SiemplifyPythonVersion"
          },
          "pythonExecutableName": {
            "type": "string",
            "nullable": true
          },
          "pythonSitePackagesPath": {
            "type": "string",
            "nullable": true
          },
          "virtualEnvPythonExecutableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.ServiceStateInfo": {
        "type": "object",
        "properties": {
          "serverDnsName": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "currentState": {
            "$ref": "#/components/schemas/Siemplify.Common.ServiceWorkingState"
          },
          "desiredState": {
            "$ref": "#/components/schemas/Siemplify.Common.ServiceWorkingState"
          },
          "timePassedInSeconds": {
            "type": "string",
            "format": "date-span"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.ServiceStatus": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/Siemplify.Common.ServiceWorkingState"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.DataModel.SystemNotificationConf": {
        "type": "object",
        "properties": {
          "isCloudRelevant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.Dtos.ConfigurationItemUpdateDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Configuration.GlobalConfiguration": {
        "type": "object",
        "properties": {
          "disableCaseLock": {
            "type": "boolean"
          },
          "asyncActionScheduleIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "playbookServiceScheduleIntervalMs": {
            "type": "integer",
            "format": "int32"
          },
          "baseServerFolder": {
            "type": "string",
            "nullable": true
          },
          "indexerStrategy": {
            "type": "string",
            "nullable": true
          },
          "parallelPlaybooksCount": {
            "type": "integer",
            "format": "int32"
          },
          "casesQueueReIngestingTimeoutInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "indexerQueueReIngestingTimeoutInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "playbookInProgressReschedulingTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "queueReIngestionCheckIntervalInPercents": {
            "type": "integer",
            "format": "int32"
          },
          "queueFetchCount": {
            "type": "integer",
            "format": "int32"
          },
          "keepDoneQueueRecords": {
            "type": "boolean"
          },
          "dataProcessingEngineConfiguration": {
            "type": "string",
            "nullable": true
          },
          "playbookStatisticsServiceIntervalInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "stopTheWorldServiceKeepAliveIntervalInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "deleteTenantsBackgroundServiceBatchTenantsPerCycle": {
            "type": "integer",
            "format": "int32"
          },
          "deleteTenantsBackgroundServiceInDisabledStateMinutesBeforeDeletion": {
            "type": "integer",
            "format": "int32"
          },
          "deleteTenantsBackgroundServiceIntervalMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "deleteTenantsBackgroundServiceRowsBatchSize": {
            "type": "integer",
            "format": "int32"
          },
          "serviceRequestTrace": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorCard": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The identifier of the described connector.",
            "nullable": true,
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Describes whether the connector is currently enabled.",
            "example": true
          },
          "isRemote": {
            "type": "boolean",
            "description": "Determines whether the connector is in remote mode (executed on a remote machine using an agent) or\r\nlocally as part of the deployment.",
            "example": true
          },
          "displayName": {
            "type": "string",
            "description": "The name of the connector.",
            "nullable": true,
            "example": "ChronicleAlertsConnector"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorConnectivityStatusEnum"
          }
        },
        "additionalProperties": false,
        "description": "Connector card groups related information regarding a specific connector.\r\nMostly being used for UI client purposes."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorConnectivityStatusEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Live = 0</li><li>NoConnectivity = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceEdit": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The identifier of the described connector.",
            "nullable": true,
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          },
          "connectorDefinitionName": {
            "type": "string",
            "description": "The name of the connector definition, which this connector instance was derived from.",
            "nullable": true,
            "example": "ChronicleAlertsConnector"
          },
          "integration": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.IntegrationKey"
          },
          "displayName": {
            "type": "string",
            "description": "The name of the connector instance.",
            "nullable": true,
            "example": "ChronicleAlertsConnectorNewInstance"
          },
          "description": {
            "type": "string",
            "description": "Short description about this connector instance.",
            "nullable": true,
            "example": "This connector ingests alerts from Google Chronicle SIEM."
          },
          "environment": {
            "type": "string",
            "description": "The environment which the connector is associated with.",
            "nullable": true,
            "example": "Default Environment"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Determines whether this connector instance is enabled or not.",
            "example": true
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "description": "The period of time in seconds between each new execution of this connector instance.",
            "format": "int32",
            "example": 10
          },
          "isRemote": {
            "type": "boolean",
            "description": "Determines whether the connector is in remote mode (executed on a remote machine using an agent) or\r\nlocally as part of the deployment.",
            "example": true
          },
          "agentIdentifier": {
            "type": "string",
            "description": "Represents the agent identifier in case the connector is executed in remote mode, otherwise, null.",
            "nullable": true,
            "example": "c89d0e6c-d702-4375-bc63-156de8187f02"
          },
          "deviceProductField": {
            "type": "string",
            "description": "The source field name which assists in parsing the product name.",
            "nullable": true,
            "example": "ProductName"
          },
          "eventNameField": {
            "type": "string",
            "description": "The source field name which assists in parsing the event name.",
            "nullable": true,
            "example": "EventName"
          },
          "version": {
            "type": "integer",
            "description": "The version of the connector definition.",
            "format": "int64",
            "example": 3
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceParameterValue"
            },
            "description": "A list of parameters which the connector executor expects to use.",
            "nullable": true
          },
          "allowList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of filters which can be used by the connector instance. Regularly, filters are\r\nassembled according to the integration specifications.",
            "nullable": true,
            "example": [
              "Rule.severity = medium",
              "Rule.ruleName = default_rule"
            ]
          },
          "isNew": {
            "type": "boolean",
            "readOnly": true
          },
          "hasReferenceToDefinition": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorInstanceParameterValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the parameter.",
            "nullable": true,
            "example": "Max records"
          },
          "value": {
            "type": "string",
            "description": "The value of the parameter.",
            "nullable": true,
            "example": "200"
          }
        },
        "additionalProperties": false,
        "description": "Represents a connector instance parameter's key and its corresponding value."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleAlertsResults": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Determines whether the test run completed successfully or not.",
            "example": true
          },
          "debugOutput": {
            "type": "string",
            "description": "Full debug output of the connector executor.",
            "nullable": true
          },
          "sampleCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleData"
            },
            "description": "Sample data which has been produced by the connector test run.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a connector instance test run result."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorSampleData": {
        "type": "object",
        "properties": {
          "alertName": {
            "type": "string",
            "description": "The name of the sample alert.",
            "nullable": true,
            "example": "Random Alert Name 643ed6bc-347a-42cc-9c4d-748abe4393e5"
          },
          "product": {
            "type": "string",
            "description": "The name of the product which produced the alert.",
            "nullable": true,
            "example": "SampleProduct"
          },
          "startTime": {
            "type": "integer",
            "description": "Start time of the alert.",
            "format": "int64",
            "example": 1672587952626
          },
          "endTime": {
            "type": "integer",
            "description": "End time of the alert.",
            "format": "int64",
            "example": 1672587952626
          },
          "eventCount": {
            "type": "integer",
            "description": "Number of events which make up the whole alert.",
            "format": "int32",
            "example": 2
          },
          "caseInfoJson": {
            "type": "string",
            "description": "Full JSON information which makes the whole alert as received from the connector.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sample of data which is produced during a test run of a connector."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorStatus": {
        "type": "object",
        "properties": {
          "connectorIdentifier": {
            "type": "string",
            "description": "The identifier of the connector instance.",
            "nullable": true,
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          },
          "connectivityStatus": {
            "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorConnectivityStatusEnum"
          },
          "amountAlertsInLastDay": {
            "type": "integer",
            "description": "Represents the number of alerts ingested over the last day by this connector instance.",
            "format": "int32",
            "example": 150
          },
          "avgAlertsPerDay": {
            "type": "integer",
            "description": "Represents the average number of daily ingested alerts by this connector instance.",
            "format": "int32",
            "example": 100
          }
        },
        "additionalProperties": false,
        "description": "Details the statistics associated with a specific connector."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplate": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The identifier of the described connector.",
            "nullable": true,
            "example": "ChronicleAlertsConnector_34348097-b030-40cb-b196-b8648cd14e40"
          },
          "connectorDefinitionName": {
            "type": "string",
            "description": "The name of the connector definition, which this connector instance was derived from.",
            "nullable": true,
            "example": "ChronicleAlertsConnector"
          },
          "displayName": {
            "type": "string",
            "description": "The name of the connector instance.",
            "nullable": true,
            "example": "ChronicleAlertsConnectorNewInstance"
          },
          "description": {
            "type": "string",
            "description": "Short description about this connector instance.",
            "nullable": true,
            "example": "This connector ingests alerts from Google Chronicle SIEM."
          },
          "environment": {
            "type": "string",
            "description": "The environment which the connector is associated with.",
            "nullable": true,
            "example": "Default Environment"
          },
          "isCustom": {
            "type": "boolean",
            "description": "Determine whether this instance is an original integration's connector, or it was customized by the user.",
            "example": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Determine whether this connector instance is enabled or not.",
            "example": true
          },
          "isRemote": {
            "type": "boolean",
            "description": "Determine whether the connector is in remote mode (executed on a remote machine using an agent) or\r\nlocally as part of the deployment.",
            "example": true
          },
          "agentIdentifier": {
            "type": "string",
            "description": "Represent the agent identifier in case the connector is executed in remote mode, otherwise, null.",
            "nullable": true,
            "example": "c89d0e6c-d702-4375-bc63-156de8187f02"
          },
          "integration": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.IIntegrationKey"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateParameter"
            },
            "description": "A list of parameters which the connector executor expects to use.",
            "nullable": true
          },
          "isAllowlistSupported": {
            "type": "boolean",
            "description": "Determine whether allow list is supported for this connector instance.",
            "example": true
          },
          "allowList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of filters which can be used by the connector instance. Regularly, filters are\r\nassembled according to the integration specifications.",
            "nullable": true,
            "example": [
              "Rule.severity = medium",
              "Rule.ruleName = default_rule"
            ]
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "description": "The period of time in seconds between each new execution of this connector instance.",
            "format": "int32",
            "example": 10
          },
          "deviceProductField": {
            "type": "string",
            "description": "The source field name which assists in parsing the product name.",
            "nullable": true,
            "example": "ProductName"
          },
          "eventNameField": {
            "type": "string",
            "description": "The source field name which assists in parsing the event name.",
            "nullable": true,
            "example": "EventName"
          },
          "version": {
            "type": "integer",
            "description": "The version of the connector definition.",
            "format": "int64",
            "example": 3
          },
          "documentationLink": {
            "type": "string",
            "description": "A link to the documentation of the connector.",
            "nullable": true,
            "example": "https://connector-documentation-link.com"
          },
          "isUpdateAvailable": {
            "type": "boolean",
            "description": "Determine whether this connector definition has been modified recently, and should be updated.",
            "example": true
          },
          "loggingEnabledUntilUnixMs": {
            "type": "integer",
            "description": "Represent the time (unix time in milliseconds) when connector logs will be stopped for this instance.\r\nIn case logs are disabled, its value equals to 0.",
            "format": "int64",
            "example": 1672575963979
          }
        },
        "additionalProperties": false,
        "description": "Represents a connector instance in the system."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateCard": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name of the connector instance.",
            "nullable": true,
            "example": "ChronicleAlertsConnectorNewInstance"
          },
          "integration": {
            "type": "string",
            "description": "The name of the integration which this connector definition is associated with.",
            "nullable": true,
            "example": "Chronicle"
          },
          "connectorDefinitionName": {
            "type": "string",
            "description": "The name of the connector definition, which this connector instance was derived from.",
            "nullable": true,
            "example": "ChronicleAlertsConnector"
          }
        },
        "additionalProperties": false,
        "description": "Basic information about a connector definition."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.ConnectorTemplateParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the parameter.",
            "nullable": true,
            "example": "Max records"
          },
          "value": {
            "type": "string",
            "description": "The value of the parameter.",
            "nullable": true,
            "example": "200"
          },
          "description": {
            "type": "string",
            "description": "The description of the parameter.",
            "nullable": true,
            "example": "Maximum number of rows which will be pulled by the connector"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.ParamTypeEnum"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Determines whether this parameter is required or not."
          },
          "isAdvanced": {
            "type": "boolean",
            "description": "Determines whether this parameter should get precedence over non-advanced parameters.",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an input parameter, its value and relevant metadata which should be used by a connector instance."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.IntegrationConnectorCards": {
        "type": "object",
        "properties": {
          "integration": {
            "type": "string",
            "description": "The name of the integration.",
            "nullable": true,
            "example": "Chronicle"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.ConnectorsManagement.DataModel.ConnectorCard"
            },
            "description": "Connector cards which are associated with the integration.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Integration's connector cards container."
      },
      "Siemplify.Common.ConnectorsManagement.DataModel.NewConnectorTemplate": {
        "type": "object",
        "properties": {
          "integration": {
            "type": "string",
            "description": "The name of the integration which this connector definition is associated with.",
            "nullable": true,
            "example": "Chronicle"
          },
          "connectorDefinitionName": {
            "type": "string",
            "description": "The name of the connector definition, which this connector instance was derived from.",
            "nullable": true,
            "example": "ChronicleAlertsConnector"
          },
          "agentIdentifier": {
            "type": "string",
            "description": "Represents the agent identifier in case the connector is executed in remote mode, otherwise, null.",
            "nullable": true,
            "example": "c89d0e6c-d702-4375-bc63-156de8187f02"
          },
          "isRemote": {
            "type": "boolean",
            "description": "Determines whether the connector is in remote mode (executed on a remote machine using an agent) or\r\nlocally as part of the deployment.",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Basic connector information."
      },
      "Siemplify.Common.Dashboards.DataModel.CalculateFieldEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>Count = 0</li><li>HandlingAvgTime = 1</li><li>SlaAvgRemainingTime = 2</li><li>TaskDueDateAvgTime = 3</li><li>Percentage = 4</li><li>AvgRuntime = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.CustomWidgetChartTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<ul><li>Pie = 0</li><li>HorizentalBars = 1</li><li>VerticalBars = 2</li><li>Table = 3</li><li>TimeSeries = 4</li><li>Trends = 6</li><li>SocStatus = 7</li><li>ROI = 8</li><li>Text = 9</li><li>Image = 10</li><li>NumberStatus = 11</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.CustomWidgetObjectEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          30,
          31,
          32,
          40,
          41,
          42,
          43,
          44,
          50,
          51,
          52,
          53,
          54,
          56,
          70,
          71,
          72,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          183
        ],
        "type": "integer",
        "description": "<ul><li>Analyst = 0</li><li>Tag = 1</li><li>Priority = 2</li><li>RuleName = 3</li><li>Environment = 4</li><li>Playbook = 5</li><li>Product = 6</li><li>Importance = 7</li><li>CaseStatus = 8</li><li>CaseCloseReason = 9</li><li>CaseRootCause = 10</li><li>EntityType = 11</li><li>Network = 12</li><li>Stage = 13</li><li>Port = 14</li><li>CategoryOutcome = 15</li><li>EntityIdentifier = 16</li><li>SlaStatus = 17</li><li>Block = 18</li><li>SocAnalystsLoad = 30</li><li>SocStatus = 31</li><li>PlaybookStatus = 32</li><li>AlertsReduction = 40</li><li>OpenCasesStageAvrageHandlingTime = 41</li><li>AverageStageTransitionTime = 42</li><li>SlaStageMeetingRate = 43</li><li>SlaStageOverdueRate = 44</li><li>CaseOpenAndClosureTrends = 50</li><li>AlertTrends = 51</li><li>CaseClosureByAnalystTrends = 52</li><li>MostReportingProductsTrends = 53</li><li>CaseTagsTrends = 54</li><li>PlaybookTrends = 56</li><li>TaskCreator = 70</li><li>TaskOwner = 71</li><li>TaskStatus = 72</li><li>PlaybookTotalRuns = 81</li><li>PlaybookSucceededRuns = 82</li><li>PlaybookPending = 83</li><li>PlaybookFailedRuns = 84</li><li>PlaybookDeclinedRuns = 85</li><li>PlaybookClosedCases = 86</li><li>PlaybookAvgRuntime = 87</li><li>PlaybookRunsStats = 88</li><li>PlaybookPercentageAlertsHandledPerEnvironment = 89</li><li>PlaybookPercentageAlertsClosedPerPlaybook = 90</li><li>PlaybookPercentageErrorRun = 91</li><li>PlaybookPercentageAlertsClosedPerEnvironment = 92</li><li>PlaybookInProgressRuns = 183</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.CustomWidgetSubjectEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Cases = 0</li><li>Alerts = 1</li><li>Tasks = 2</li><li>Playbooks = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardDataModel": {
        "type": "object",
        "properties": {
          "creator": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultTimeRange": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          },
          "allowedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
            },
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardEntityKey": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums": {
        "enum": [
          1,
          3,
          7,
          14,
          30,
          90,
          180,
          365
        ],
        "type": "integer",
        "description": "<ul><li>LAST_DAY = 1</li><li>LAST_3_DAYS = 3</li><li>LAST_WEEK = 7</li><li>LAST_2_WEEKS = 14</li><li>LAST_MONTH = 30</li><li>LAST_3_MONTHS = 90</li><li>LAST_6_MONTHS = 180</li><li>LAST_YEAR = 365</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel": {
        "type": "object",
        "properties": {
          "dashboardId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "widgetType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetTypesEnum"
          },
          "widthSize": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.WidgetWidthSizeTypes"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "timeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "environmentFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "entityTypeFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "analystFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priorityFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
            },
            "nullable": true
          },
          "caseStatusesFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
            },
            "nullable": true
          },
          "importanceStatusesFilter": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "incidentStatusesFilter": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "exceededSlaFilter": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "closeReasonsFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
            },
            "nullable": true
          },
          "caseStageFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "caseRootCauseFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "productFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "alertNamesFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "entityIdentifierFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "networksFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "portsFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryOutcomeFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "subject": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetSubjectEnum"
          },
          "dimensionA": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetObjectEnum"
          },
          "dimensionB": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetObjectEnum"
          },
          "chartType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetChartTypeEnum"
          },
          "resultsAmount": {
            "type": "integer",
            "format": "int32"
          },
          "resultsOrder": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.ResultsOrder"
          },
          "startStage": {
            "type": "string",
            "nullable": true
          },
          "endStage": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "calculateField": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CalculateFieldEnum"
          },
          "playbooksFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "integrationsFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "playbookStatusFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.PlaybookStatusFilter"
            },
            "nullable": true
          },
          "socAnalystsLoadFirstSocRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "socAnalystsLoadSecondSocRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "socAnalystsLoadManagerUsername": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardWidgetDefinitionDataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "widgetPreviewImage": {
            "type": "string",
            "nullable": true
          },
          "widgetType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetTypesEnum"
          },
          "axisXDescription": {
            "type": "string",
            "nullable": true
          },
          "axisYDescription": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardWidgetSeriesDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "seriesType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.SeriesTypeEnum"
          },
          "entity": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardEntityKey"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardWidgetTypesEnum": {
        "enum": [
          70,
          100
        ],
        "type": "integer",
        "description": "<ul><li>Custom = 70</li><li>PlaybookMonitoring = 100</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.DashboardWidgetValues": {
        "type": "object",
        "properties": {
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetSeriesDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Dashboards.DataModel.PlaybookStatusFilter": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "<ul><li>FinishedSuccessfully = 1</li><li>Error = 2</li><li>WaitingForUserAction = 3</li><li>Declined = 4</li><li>PlaybookClosedAlert = 5</li><li>Pending = 6</li><li>Terminated = 7</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.ResultsOrder": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Descending = 0</li><li>Ascending = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.SeriesTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Number = 0</li><li>String = 1</li><li>TimeInMs = 2</li><li>Percentage = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Dashboards.DataModel.WidgetWidthSizeTypes": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>ONE_BLOCK = 1</li><li>TWO_BLOCKS = 2</li><li>THREE_BLOCKS = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.DataRetention.DataModel.ExecuteRetentionRequest": {
        "type": "object",
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skipVacuum": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.EntityExplorer.DataModel.Requests.AddOrUpdateInvolvedEntityPropertyRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Entity identifier",
            "nullable": true,
            "example": "F.ATTACKER4@GMAIL.COM"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "Entity type",
            "nullable": true,
            "example": "USERUNIQNAME"
          },
          "property": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
          },
          "entityKey": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
          }
        },
        "additionalProperties": false,
        "description": "Represents the ingest case in other environment request model"
      },
      "Siemplify.Common.Environments.EnvironmentCard": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "dynamicParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Environments.EnvironmentDynamicParameterCard"
            },
            "nullable": true
          },
          "base64Image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Environments.EnvironmentDynamicParameterCard": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.ApiDataModels.Requests.TasksFiltersEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>IsAssignedToMe = 0</li><li>IsAssignedToMyRole = 1</li><li>IsCreatedByMe = 2</li><li>Open = 3</li><li>Close = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Homepage.ApiDataModels.Requests.TasksSortByEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>OldestFirst = 0</li><li>NewestFirst = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Homepage.DataModels.RSSFeed": {
        "type": "object",
        "properties": {
          "modifierUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "feed": {
            "type": "string",
            "nullable": true
          },
          "expirationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.DataModels.UserAttachment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isFileExtensionSafe": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "sizeInKB": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "blob": {
            "$ref": "#/components/schemas/Siemplify.Common.Homepage.DataModels.UserAttachmentBlob"
          },
          "creatorUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.DataModels.UserAttachmentBlob": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.DataModels.UserContactDetails": {
        "type": "object",
        "properties": {
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.DataModels.UserNote": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Homepage.DataModels.UserWebsiteLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.CustomActionParameterType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          21
        ],
        "type": "integer",
        "description": "<ul><li>String = 0</li><li>Boolean = 1</li><li>WFS_Repository = 2</li><li>User_Repository = 3</li><li>Stages_Repository = 4</li><li>CloseCase_Reason_Repository = 5</li><li>CloseCase_RootCause_Repository = 6</li><li>Priorities_Repository = 7</li><li>EmailContent = 10</li><li>Content = 11</li><li>Password = 12</li><li>Entity_Type = 13</li><li>MultiValues = 14</li><li>List = 15</li><li>Code = 16</li><li>TimeSpanSeconds = 17</li><li>MultipleChoiceParameter = 21</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Integrations.DataModel.EnvironmentInstancesFilterSettings": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "configuration": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "remote": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.EnvironmentInstancesQueryRequest": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32"
          },
          "environmentInstancesFilterSettings": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.EnvironmentInstancesFilterSettings"
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "hideEmptyEnvironments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.IntegrationParamTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13
        ],
        "type": "integer",
        "description": "<ul><li>Boolean = 0</li><li>Int = 1</li><li>String = 2</li><li>Password = 3</li><li>IP = 4</li><li>IP_OR_HOST = 5</li><li>URL = 6</li><li>Domain = 7</li><li>Email = 8</li><li>Values = 9</li><li>ValuesAsSemiColonSeperatedString = 10</li><li>MultiValuesSelection = 11</li><li>Script = 12</li><li>FilterList = 13</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Integrations.DataModel.IntegrationProperty": {
        "type": "object",
        "properties": {
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyDescription": {
            "type": "string",
            "nullable": true
          },
          "propertyDisplayName": {
            "type": "string",
            "nullable": true
          },
          "propertyType": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationParamTypeEnum"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.IntegrationSettingData": {
        "type": "object",
        "properties": {
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyDescription": {
            "type": "string",
            "nullable": true
          },
          "propertyDisplayName": {
            "type": "string",
            "nullable": true
          },
          "propertyType": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationParamTypeEnum"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "integrationInstance": {
            "type": "string",
            "format": "uuid"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.IntegrationSupportedAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.IntegrationTestResults": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.OptionalIntegrationsInstancesFilter": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.Responses.IntegrationPackageInstallationResult": {
        "type": "object",
        "properties": {
          "integrationName": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isSuccessfull": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.DataModel.ScriptResultEntityData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isForEntity": {
            "type": "boolean"
          },
          "csvLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "attachments": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "htmls": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "rawJson": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Integrations.IIntegrationKey": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The identifier of the integration.",
            "nullable": true,
            "readOnly": true,
            "example": "Siemplify"
          },
          "version": {
            "type": "number",
            "description": "The version of the integration.",
            "format": "double",
            "readOnly": true,
            "example": 65
          }
        },
        "additionalProperties": false,
        "description": "Uniquely represents an integration."
      },
      "Siemplify.Common.Integrations.IntegrationKey": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.ApiJobParam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.ParamTypeEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.JobDataAddRequest": {
        "type": "object",
        "properties": {
          "uniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "jobDefinitionId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataParamDto"
            },
            "nullable": true
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "isSystemJob": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.JobDataParamDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.ParamTypeEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.JobDataResponse": {
        "type": "object",
        "properties": {
          "uniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataParamDto"
            },
            "nullable": true
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time"
          },
          "isSystemJob": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.JobDataUpdateRequest": {
        "type": "object",
        "properties": {
          "uniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobDefinitionId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.JobDataParamDto"
            },
            "nullable": true
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "isSystemJob": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Jobs.Apis.JobDetailsDto": {
        "type": "object",
        "properties": {
          "uniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobDefinitionId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Jobs.Apis.ApiJobParam"
            },
            "nullable": true
          },
          "runIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time"
          },
          "isSystemJob": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Logging.LogLevel": {
        "enum": [
          "Debug",
          "Info",
          "Warn",
          "Error",
          "Verbose"
        ],
        "type": "string",
        "description": "<ul><li>Debug = 0</li><li>Info = 1</li><li>Warn = 2</li><li>Warning = 2</li><li>Error = 3</li><li>Verbose = -1</li></ul>"
      },
      "Siemplify.Common.Management.ApiGlobalConfigurationItem": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Management.ApiQueueWeight": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Notifications.DataModel.NotificationDataTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Message = 0</li><li>Critical = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Notifications.DataModel.NotificationObjectTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "<ul><li>CyberCase = 0</li><li>CaseTask = 1</li><li>CaseAssignment = 2</li><li>CaseStatusChange = 3</li><li>CaseComment = 4</li><li>SharedItem = 5</li><li>CaseManualAction = 6</li><li>PlaybookAction = 7</li><li>CaseAttachment = 8</li><li>CaseTag = 9</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Notifications.DataModel.UserNotificationMessage": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean"
          },
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "notificationObjectType": {
            "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.NotificationObjectTypeEnum"
          },
          "dataType": {
            "$ref": "#/components/schemas/Siemplify.Common.Notifications.DataModel.NotificationDataTypeEnum"
          },
          "dataBase64": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "caseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sendAsPushNotification": {
            "type": "boolean",
            "nullable": true
          },
          "isPushNotificationSent": {
            "type": "boolean",
            "nullable": true
          },
          "sendAsEmail": {
            "type": "boolean",
            "nullable": true
          },
          "isEmailSent": {
            "type": "boolean",
            "nullable": true
          },
          "isRead": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.ApiExportVisualFamilyRequest": {
        "type": "object",
        "properties": {
          "familyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.ComparisonTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Equal = 0</li><li>Contains = 1</li><li>StartWith = 2</li><li>EndWith = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "securityEventFieldName": {
            "type": "string",
            "nullable": true
          },
          "transformationFunction": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.FieldMappingTransformationEnum"
          },
          "transformationFunctionParam": {
            "type": "string",
            "nullable": true
          },
          "rawDataPrimaryFieldMatchTerm": {
            "type": "string",
            "nullable": true
          },
          "rawDataPrimaryFieldComparisonType": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ComparisonTypeEnum"
          },
          "rawDataSecondaryFieldMatchTerm": {
            "type": "string",
            "nullable": true
          },
          "rawDataSecondaryFieldComparisonType": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ComparisonTypeEnum"
          },
          "rawDataThirdFieldMatchTerm": {
            "type": "string",
            "nullable": true
          },
          "rawDataThirdFieldComparisonType": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.ComparisonTypeEnum"
          },
          "enrichmentFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isArtifact": {
            "type": "boolean",
            "readOnly": true
          },
          "extractionFunctionParam": {
            "type": "string",
            "nullable": true
          },
          "extractionFunction": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.FieldMappingExtractionEnum"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.FieldMappingExtractionEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>None = 0</li><li>RegEx = 1</li><li>Delimiter = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Ontology.DataModel.FieldMappingTransformationEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          7,
          15,
          100,
          101,
          102,
          103,
          105,
          106,
          107,
          108,
          109,
          110
        ],
        "type": "integer",
        "description": "<ul><li>TO_STRING = 0</li><li>TO_INTEGER = 1</li><li>TO_DOUBLE = 2</li><li>FROM_UNIXTIME_STRING_OR_LONG = 3</li><li>FROM_CUSTOM_DATETIME = 4</li><li>TO_BOOLEAN = 5</li><li>EXTRACT_BY_REGEX = 7</li><li>EXTRACT_BY_REGEX_WITH_GROUP = 15</li><li>TO_IS_CORRELATION = 100</li><li>TO_IP_ADDRESS = 101</li><li>TO_LIST_OF_LONGS_SEPARATED_COMMA = 102</li><li>SUBSTR_BY_LENGTH = 103</li><li>SUBSTR_BY_ENDTEXT = 105</li><li>FIRST_LINES = 106</li><li>JOIN_RAW_FIELDS = 107</li><li>STATIC_VALUE = 108</li><li>EXTRACT_DOMAIN_FROM_URI = 109</li><li>CLEAN_URL = 110</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Ontology.DataModel.MappingRuleMetadata": {
        "type": "object",
        "properties": {
          "mappingRule": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.EventFieldMappingRuleDataModel"
          },
          "ontologyConfigurationLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyConfigurationLevelEnum"
          },
          "targetFieldType": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.TargetFieldTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.OntologyConfigurationLevelEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Source = 0</li><li>Product = 1</li><li>EventName = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Ontology.DataModel.OntologyEventData": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.OntologyVisualFamilyExists": {
        "type": "object",
        "properties": {
          "ontologies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "visualFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.TargetFieldTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Entity = 0</li><li>GeneralField = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel": {
        "type": "object",
        "properties": {
          "family": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "isCustom": {
            "type": "boolean"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyRuleDataModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.VisualFamilyRuleDataModel": {
        "type": "object",
        "properties": {
          "primarySource": {
            "type": "string",
            "nullable": true
          },
          "secondarySource": {
            "type": "string",
            "nullable": true
          },
          "thirdSource": {
            "type": "string",
            "nullable": true
          },
          "fourthSource": {
            "type": "string",
            "nullable": true
          },
          "relationType": {
            "type": "string",
            "nullable": true
          },
          "primaryDestination": {
            "type": "string",
            "nullable": true
          },
          "secondaryDestination": {
            "type": "string",
            "nullable": true
          },
          "thirdDestination": {
            "type": "string",
            "nullable": true
          },
          "fourthDestination": {
            "type": "string",
            "nullable": true
          },
          "visualFamily": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Ontology.DataModel.VisualizationResponse": {
        "type": "object",
        "properties": {
          "visualFamilyId": {
            "type": "integer",
            "format": "int64"
          },
          "ontologyConfigurationLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.OntologyConfigurationLevelEnum"
          },
          "visualFamilyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.Condition": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionFieldOperator"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.ConditionFieldOperator": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "<ul><li>Equal = 0</li><li>Contains = 1</li><li>StartsWith = 2</li><li>GreaterThan = 3</li><li>LesserThan = 4</li><li>NotEqual = 5</li><li>NotContains = 6</li><li>IsEmpty = 7</li><li>IsNotEmpty = 8</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.ConditionsGroup": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Condition"
            },
            "nullable": true
          },
          "logicalOperator": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsLogicalOperator"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.ConditionsLogicalOperator": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>And = 0</li><li>Or = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.DataModel.ActionWidgetTemplateDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "integrationVersion": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "actionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataDefinition": {
            "nullable": true
          },
          "defaultSize": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum"
          },
          "conditionsGroup": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsGroup"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.OverviewTemplateDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "playbookDefinitionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateEnum"
          },
          "alertRuleType": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateDataModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.OverviewTemplateEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>PlaybookDefault = 0</li><li>Regular = 1</li><li>SystemAlert = 2</li><li>SystemCase = 3</li><li>AlertType = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.AccessPermissionProfileInfoOption": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserRoleEnum"
          },
          "socRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserType"
          },
          "allowEditOption": {
            "type": "boolean"
          },
          "hasModuleEditPermissions": {
            "type": "boolean"
          },
          "hasAllEnvsPermissions": {
            "type": "boolean"
          },
          "hasAllEnvsModulePermissions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionDefinitionDataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "scriptResultName": {
            "type": "string",
            "nullable": true
          },
          "dynamicResultsMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiDynamicResultMetadata"
            },
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionParameter"
            },
            "nullable": true
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "asyncPollingIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "totalIntervalTimeoutForAsyncInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "isAsync": {
            "type": "boolean",
            "nullable": true
          },
          "defaultResultValue": {
            "type": "string",
            "nullable": true
          },
          "integrationInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiIntegrationInstanceDataModel"
            },
            "nullable": true
          },
          "hasJsonResult": {
            "type": "boolean"
          },
          "actionWidgetTemplateIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "customActionId": {
            "type": "integer",
            "format": "int64"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.CustomActionParameterType"
          },
          "optionalValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Faulted = 0</li><li>InProgress = 1</li><li>Completed = 2</li><li>PendingUserInput = 3</li><li>PendingPreviousSteps = 4</li><li>Started = 5</li><li>FaultedAndSkipped = 6</li><li>HandledTimedout = 7</li><li>UnhandledTimedout = 8</li><li>Terminated = 9</li><li>NotRunAndSkipped = 10</li><li>PendingActionTimeout = 11</li><li>PendingActionTimeoutAndSkipped = 12</li><li>NoStatus = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiDynamicResultMetadata": {
        "type": "object",
        "properties": {
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "resultExample": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiIntegrationInstanceDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "environmentIdentifier": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "instanceDescription": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean"
          },
          "isSystemDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepInstanceDataModel": {
        "type": "object",
        "properties": {
          "casePriority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "alertPriority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "pendingStepTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "pendingStepExpirationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "caseTitle": {
            "type": "string",
            "nullable": true
          },
          "alertName": {
            "type": "string",
            "nullable": true
          },
          "messageToAssignee": {
            "type": "string",
            "nullable": true
          },
          "slaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.ApiSlaExpiration"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "originalWorkflowDefinitionIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPlaybooksAccessPermissionsAddRequest": {
        "type": "object",
        "properties": {
          "workflowOriginalIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.WorkbookAccessPermissionsItem"
            },
            "nullable": true
          },
          "defaultAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiSecurityEntityDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "isSuspicious": {
            "type": "boolean"
          },
          "isArtifact": {
            "type": "boolean"
          },
          "isEnriched": {
            "type": "boolean"
          },
          "isVulnerable": {
            "type": "boolean"
          },
          "isPivot": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
            },
            "nullable": true
          },
          "isManuallyCreated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel": {
        "type": "object",
        "properties": {
          "workflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "parentWorkflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceIdentifier": {
            "type": "integer",
            "format": "int64"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "indicatorIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionStatusEnum"
          },
          "executingUser": {
            "type": "string",
            "nullable": true
          },
          "allowedToExecute": {
            "type": "boolean"
          },
          "resultCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.ScriptResultEntityData"
            },
            "nullable": true
          },
          "targetEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "resultEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "actionDef": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiActionDefinitionDataModel"
          },
          "blockStepId": {
            "type": "string",
            "nullable": true
          },
          "jsonResultObject": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "integrationInstanceName": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceEnvironment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pendingStepProperties": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiPendingStepInstanceDataModel"
          },
          "stepInstanceIdentifier": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isAutomatic": {
            "type": "boolean"
          },
          "isSkippable": {
            "type": "boolean"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "actionProvider": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.StepType"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "autoSkipOnFailure": {
            "type": "boolean"
          },
          "isDebugMockData": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.ApiWorkflowStepParameterDataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.CustomActionParameterType"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.GetWorkflowPermissionsResponse": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
            },
            "nullable": true
          },
          "userOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Playbooks.AccessPermissionProfileInfoOption"
            },
            "nullable": true
          },
          "socRolesOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.SocRoles.SocRole"
            },
            "nullable": true
          },
          "defaultAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Playbooks.WorkbookAccessPermissionsItem": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true
          },
          "accessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Requests.GetOverviewTemplateRequest": {
        "type": "object",
        "properties": {
          "playbookIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Templates.BaseDataConfiguration": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "widgetDefinitionScope": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.TargetScopeEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "playbookIdentifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.OverviewTemplateEnum"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.TemplateWidgetDefinition"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Templates.TargetScopeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Case = 0</li><li>Alert = 1</li><li>Both = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.DataModel.Templates.TemplateWidgetDefinition": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.TemplateWidgetMetadata"
          },
          "config": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.Templates.TemplateWidgetMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "templateIdentifier": {
            "type": "string",
            "nullable": true
          },
          "predefinedWidgetTemplateIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "stepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stepIntegration": {
            "type": "string",
            "nullable": true
          },
          "blockStepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "blockStepInstanceName": {
            "type": "string",
            "nullable": true
          },
          "presentIfEmpty": {
            "type": "boolean"
          },
          "conditionsGroup": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsGroup"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.WidgetTemplateDataModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "templateIdentifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum"
          },
          "dataDefinitionJson": {
            "type": "string",
            "nullable": true
          },
          "gridColumns": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum"
          },
          "actionWidgetTemplateIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stepIntegration": {
            "type": "string",
            "nullable": true
          },
          "blockStepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "blockStepInstanceName": {
            "type": "string",
            "nullable": true
          },
          "presentIfEmpty": {
            "type": "boolean"
          },
          "conditionsGroup": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsGroup"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.DataModel.WidgetTemplateGridColumnsEnum": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>HalfWidth = 1</li><li>FullWidth = 2</li><li>OneThirdWidth = 3</li><li>TwoThirdWidth = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.DataModel.WidgetTemplateTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16
        ],
        "type": "integer",
        "description": "<ul><li>KeyValue = 0</li><li>Events = 1</li><li>JsonResults = 2</li><li>Html = 3</li><li>WallActivities = 4</li><li>Alerts = 5</li><li>Timeline = 6</li><li>Graph = 7</li><li>Text = 8</li><li>PotentiallyGroupedAlerts = 9</li><li>EntitiesHighlight = 10</li><li>PendingSteps = 11</li><li>CaseRecommendations = 12</li><li>Statistics = 13</li><li>CaseDescription = 14</li><li>Insight = 15</li><li>CaseAssistant = 16</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.Enums.ApprovalLinkStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>Success = 0</li><li>StepNotFound = 1</li><li>StepAlreadyExecuted = 2</li><li>StepTimeToResponseExpired = 3</li><li>StepNotPending = 4</li><li>ClickRequired = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.Enums.ApprovalLinkTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Approve = 0</li><li>Decline = 1</li><li>MultiChoiceAnswer = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.Enums.PendingActionSortByEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "<ul><li>TimeAscending = 0</li><li>TimeDescending = 1</li><li>PriorityAscending = 2</li><li>PriorityDescending = 3</li><li>TimeToResponseAscending = 4</li><li>TimeToResponseDescending = 5</li><li>SlaAscending = 6</li><li>SlaDescending = 7</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>NoAccess = 0</li><li>View = 1</li><li>Edit = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.ServiceModels.ApprovalLinkResult": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.ApprovalLinkStatus"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "approvalLinkActionType": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.ApprovalLinkTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions": {
        "type": "object",
        "properties": {
          "workflowOriginalIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "accessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration._Entities_.v2.WorkflowDeletionStatusEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Deleted = 0</li><li>Archived = 1</li><li>Attached = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration._Entities_.v2.WorkflowVersionLog": {
        "type": "object",
        "properties": {
          "workFlowIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "workflowName": {
            "type": "string",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "versionCreator": {
            "type": "string",
            "nullable": true
          },
          "versionComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.v2.RunPlaybookInDebugResponse": {
        "type": "object",
        "properties": {
          "workflowInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "newTestCaseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "triggerMatches": {
            "type": "boolean"
          },
          "newWorkflowIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "parsedNestedInputParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Orchestration.v2.StepType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "<ul><li>Action = 0</li><li>MultiChoiceQuestion = 1</li><li>PreviousAction = 2</li><li>CaseDataCondition = 3</li><li>Condition = 4</li><li>Block = 5</li><li>Output = 6</li><li>ParallelActionsContainer = 7</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Orchestration.v2.WorkflowTriggerType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<ul><li>VendorName = 0</li><li>TagName = 1</li><li>RuleName = 2</li><li>ProductName = 3</li><li>NetworkName = 4</li><li>EntityDetails = 5</li><li>RelationDetails = 6</li><li>TrackingList = 7</li><li>All = 8</li><li>AlertTriggerValue = 9</li><li>CaseData = 10</li><li>GetInputs = 11</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.OrderByDescriptor`1[[Siemplify.Common.SearchEverything.DataModel.SearchEverythingCaseProperty, Siemplify.Common.SearchEverything, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "$ref": "#/components/schemas/Siemplify.Common.SortOrder"
          },
          "sortBy": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingCaseProperty"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.PagingOptions": {
        "type": "object",
        "properties": {
          "requestedPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ParamTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13
        ],
        "type": "integer",
        "description": "<ul><li>Boolean = 0</li><li>Int = 1</li><li>String = 2</li><li>Password = 3</li><li>IP = 4</li><li>IP_OR_HOST = 5</li><li>URL = 6</li><li>Domain = 7</li><li>Email = 8</li><li>Values = 9</li><li>ValuesAsSemiColonSeperatedString = 10</li><li>MultiValuesSelection = 11</li><li>Script = 12</li><li>FilterList = 13</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Permissions.PermissionTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Regular = 0</li><li>ViewOnly = 1</li><li>Collaborator = 2</li><li>ManagedUser = 3</li><li>ManagedUserPlus = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.DataModels.AdvancedReportsAccess": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>None = 0</li><li>Edit = 1</li><li>View = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.DataModels.IdentityProviderEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Okta = 0</li><li>GSuite = 1</li><li>CustomSaml2 = 2</li><li>Ldap = 3</li><li>None = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.DataModels.UserAccountState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Disabled = 0</li><li>Pending = 1</li><li>Active = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.DataModels.UserLicenseAgreement": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "licenseAgreementId": {
            "type": "integer",
            "format": "int64"
          },
          "signatureTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.PermissionsV2.DataModels.UserRoleEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Analyst = 0</li><li>Admin = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.DataModels.UserType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Windows = 0</li><li>Internal = 1</li><li>External = 2</li><li>Support = 3</li><li>IncidentManager = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.PermissionsV2.PermissionGroupInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "isSystemGroup": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "landingPage": {
            "$ref": "#/components/schemas/Siemplify.Api.Common.LandingPageEnum"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "permissionNodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionNode"
            },
            "nullable": true
          },
          "permissionsGroupRestrictionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "permissionsGroupAdMapping": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.PermissionsV2.PermissionNode": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.PermissionNode"
            },
            "nullable": true
          },
          "permissionsGroupId": {
            "type": "integer",
            "format": "int64"
          },
          "permissionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "shouldPresentWarning": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ProxySettings": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "proxyServerAddressXml": {
            "type": "string",
            "nullable": true
          },
          "targetAddressXml": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ignoreAddressXml": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.CaseIngestionQueueErrorRecord": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "sourceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "sourceType": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.IngestionSourceType"
          },
          "connectorIp": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "sourceSystemName": {
            "type": "string",
            "nullable": true
          },
          "alertTicketId": {
            "type": "string",
            "nullable": true
          },
          "alertProduct": {
            "type": "string",
            "nullable": true
          },
          "alertType": {
            "type": "string",
            "nullable": true
          },
          "alertTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.LoadDataTypeEnum"
          },
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.CaseIngestionQueueRecord": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "sourceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "sourceType": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.IngestionSourceType"
          },
          "connectorIp": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "sourceSystemName": {
            "type": "string",
            "nullable": true
          },
          "alertTicketId": {
            "type": "string",
            "nullable": true
          },
          "alertProduct": {
            "type": "string",
            "nullable": true
          },
          "alertType": {
            "type": "string",
            "nullable": true
          },
          "alertTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.LoadDataTypeEnum"
          },
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.IndexerQueueErrorRecord": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.IndexerRequestType"
          },
          "forceClean": {
            "type": "boolean"
          },
          "operationType": {
            "type": "integer",
            "format": "int32"
          },
          "operationName": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "workflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "stepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionResultId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.IndexerQueueRecord": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.IndexerRequestType"
          },
          "forceClean": {
            "type": "boolean"
          },
          "operationType": {
            "type": "integer",
            "format": "int32"
          },
          "operationName": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "workflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "stepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionResultId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.IndexerRequestType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Case = 0</li><li>WorkflowInstance = 1</li><li>WorkflowSteps = 2</li><li>DeclinedWorkflow = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Queues.DataModel.QueueMessageStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Pending = 0</li><li>InProgress = 1</li><li>Done = 2</li><li>Duplicate = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Queues.DataModel.QueueWeightDetails": {
        "type": "object",
        "properties": {
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Requests.QueueMessageStatusV2": {
        "enum": [
          "pending",
          "in-progress",
          "done",
          "duplicate"
        ],
        "type": "string",
        "description": "<ul><li>Pending = 0</li><li>InProgress = 1</li><li>Done = 2</li><li>Duplicate = 3</li></ul>"
      },
      "Siemplify.Common.Queues.DataModel.Requests.QueueTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Cases = 0</li><li>Workflows = 1</li><li>Indexer = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Queues.DataModel.Requests.QueueTypeEnumV2": {
        "enum": [
          "cases",
          "workflows",
          "indexer"
        ],
        "type": "string",
        "description": "<ul><li>Cases = 0</li><li>Workflows = 1</li><li>Indexer = 2</li></ul>"
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.CaseIngestionQueueErrorRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.CaseIngestionQueueErrorRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.CaseIngestionQueueRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.CaseIngestionQueueRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.IndexerQueueErrorRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.IndexerQueueErrorRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.IndexerQueueRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.IndexerQueueRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.WorkflowQueueErrorRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.WorkflowQueueErrorRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueItemsResponse`1[[Siemplify.Common.Queues.DataModel.WorkflowQueueRecord, Siemplify.Common.Queues, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.WorkflowQueueRecord"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.Responses.QueueSummaryResponse": {
        "type": "object",
        "properties": {
          "queueType": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.Requests.QueueTypeEnum"
          },
          "queueTypeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "pendingDelayedCount": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressDelayedCount": {
            "type": "integer",
            "format": "int32"
          },
          "pendingCount": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressCount": {
            "type": "integer",
            "format": "int32"
          },
          "errorsCount": {
            "type": "integer",
            "format": "int32"
          },
          "delayThresholdInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "oldestPendingCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "oldestInProgressCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "oldestErrorCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "newestPendingCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "newestInProgressCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "newestErrorCreationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.WorkflowQueueErrorRecord": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "workflowInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertCreationUnixTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "executionDelayUnixtimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "isNested": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Queues.DataModel.WorkflowQueueRecord": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "workflowInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertCreationUnixTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "executionDelayUnixtimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "isNested": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Queues.DataModel.QueueMessageStatus"
          },
          "serverIdentifier": {
            "type": "string",
            "nullable": true
          },
          "processingStartTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "isReIngested": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ReportSystem.AdvancedReportProvider": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Tableau = 0</li><li>Looker = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.ReportSystem.DataModel.AdvancedReports.AdvancedReportsSettings": {
        "type": "object",
        "properties": {
          "advancedReportsUrl": {
            "type": "string",
            "nullable": true
          },
          "advancedReportProvider": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.AdvancedReportProvider"
          },
          "advancedReportSessionLength": {
            "type": "integer",
            "format": "int32"
          },
          "advancedReportsUsername": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsPassword": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsCacheExpiryInMs": {
            "type": "integer",
            "format": "int64"
          },
          "advancedReportsLastRefreshInMs": {
            "type": "integer",
            "format": "int64"
          },
          "advancedReportsIsConnectionError": {
            "type": "boolean"
          },
          "advancedReportsDatabaseServer": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDatabaseServerUsername": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDatabaseServerPassword": {
            "type": "string",
            "nullable": true
          },
          "advancedReportSecret": {
            "type": "string",
            "nullable": true
          },
          "advancedReportSdkApiVersion": {
            "type": "string",
            "nullable": true
          },
          "advancedReportSdkClientId": {
            "type": "string",
            "nullable": true
          },
          "advancedReportSdkClientSecret": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsSlotName": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsSiteName": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsConnectionErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "advancedReportSdkBaseUrl": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDashboardsServiceAccount": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ReportSystem.DataModel.CaseReportRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "reportKind": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ReportSystem.DataModel.ReportTemplateCategoryEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Roi = 0</li><li>Management = 1</li><li>Sla = 2</li><li>Tier1 = 3</li><li>General = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails": {
        "type": "object",
        "properties": {
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorFullName": {
            "type": "string",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateCategoryEnum"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "reportWidgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
            },
            "nullable": true
          },
          "hasScheduler": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ReportSystem.DataModel.ReportTemplateGenerationRequest": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTemplateDetails"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTypeEnum"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "timeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.ReportSystem.DataModel.ReportTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "<ul><li>Pdf = 0</li><li>Rtf = 1</li><li>Doc = 2</li><li>Docx = 3</li><li>Html = 4</li><li>Xlsx = 5</li><li>Csv = 6</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.ReportSystem.Looker.AdvancedReportCategory": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Default = 0</li><li>Personal = 1</li><li>Shared = 2</li><li>Other = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.SearchEverything.DataModel.ApiSearchEntitiesFilterValuesRequest": {
        "type": "object",
        "properties": {
          "typeOfFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.EntitySearchFilterTypeEnum"
          },
          "numberOfValuesToReturn": {
            "type": "integer",
            "format": "int32"
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.ApiSearchEverythingCaseRequest": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Defines the UTC start time to search for cases by Creation time\r\n(optional - used if TimeRangeFilter is set to Custom filter).\r\nThe Localization (timezone) settings are taken into consideration (default is the start of epoch time).",
            "format": "date-time",
            "nullable": true,
            "example": "2023-01-16T00:00:00.000Z"
          },
          "endTime": {
            "type": "string",
            "description": "Defines the UTC end time to search for cases by Creation time\r\n(optional - used if TimeRangeFilter is set to Custom filter).\r\nThe Localization (timezone) settings are taken into consideration (default is current time).",
            "format": "date-time",
            "nullable": true,
            "example": "2023-01-16T23:59:59.999Z"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing case tags.\r\nIf one or more tags exist in the case, it will be fetched.",
            "nullable": true,
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "caseSource": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing case sources.\r\nAvailable inputs: System / Manual / Test.",
            "nullable": true,
            "example": [
              "System",
              "Manual"
            ]
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
            },
            "description": "List of strings representing case priority",
            "nullable": true,
            "example": [
              "Informative"
            ]
          },
          "importance": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing the case importance (i.e. marked as \"is important\").\r\nex. [\"True\"] will return only cases that were marked as important.\r\nex. [\"True\",\"False] Will return only cases marked as important and all cases not marked as important (all).\r\nAvailable inputs: True / False.",
            "nullable": true,
            "example": [
              "True"
            ]
          },
          "incident": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing cases marked as incidents.\r\nex. [\"True\"] will return only cases that were marked as an incident.\r\nex. [\"True\",\"False\"] Will return all cases marked as an incident and all cases not marked as an incident (all).\r\nAvailable inputs: True / False.",
            "nullable": true,
            "example": [
              "True"
            ]
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings representing the environments that the case is associated with.\r\nIf the case matches at least one environment it will be fetched.",
            "nullable": true,
            "example": [
              "Env1",
              "Env2"
            ]
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of strings that represents the Users (analysts) / Roles that are assigned to the case.\r\nIf the case matches at least one User or Role it will be fetched.\r\nAvailable inputs: Username (GUID) / @Role name.",
            "nullable": true,
            "example": [
              "b5129492-c154-4e56-8229-23e75b348fde",
              "@Tier1"
            ]
          },
          "externalAlertId": {
            "type": "string",
            "description": "Represents the 'TicketId' mapped from the original SIEM's alert ID",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of strings that represent the Products that exists in the case.\r\nIf the case matches at least one Product it will be fetched.",
            "nullable": true,
            "example": [
              "DLP_Product",
              "Phishing email detector"
            ]
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that represent the ports that exist in the case.\r\nIf the case matches at least one Port it will be fetched.",
            "nullable": true,
            "example": [
              "633",
              "770"
            ]
          },
          "stage": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that represents the Stages that case is on.\r\nIf the case matches at least one Stage it will be fetched.\r\nAvailable inputs: Triage / Assessment / Investigation / Incident / Improvement / Research.",
            "nullable": true,
            "example": [
              "Triage",
              "Assessment"
            ]
          },
          "ruleGenerator": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that represents the Rule Generator (Alert Type in the Platform) that exist in the case.\r\nIf the case matches at least one Rule Generator it will be fetched.",
            "nullable": true,
            "example": [
              "IRC Connections"
            ]
          },
          "categoryOutcomes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that represents whether to fetch cases that contain a specific value in CategoryOutcome.\r\nAvailable inputs: Allowed / Blocked / [] (empty).",
            "nullable": true,
            "example": [
              "Allowed"
            ]
          },
          "involvedEntity": {
            "type": "string",
            "description": "A string that represents an entity to search for in cases",
            "nullable": true
          },
          "caseComment": {
            "type": "string",
            "description": "A string that represents a part of the body of a case comment to search for in cases",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A string that represents free text / search term to search for cases.\r\nFree text will look for the case's name.\r\nAvailable inputs: free text / Entity: / AlertName: / DestinationEntity: / SourceEntity: / TicketIds: / CaseIDs:",
            "nullable": true
          },
          "isCaseClosed": {
            "type": "boolean",
            "description": "A boolean field that represents whether to filter by the case status (is closed or not).\r\nAvailable inputs: true / false / null.",
            "nullable": true,
            "example": true
          },
          "caseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true,
            "deprecated": true
          },
          "requestingUser": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "requestedPage": {
            "type": "integer",
            "description": "An integer field that represents the number of page to fetch. \r\nAvailable inputs: 0 - 9999.",
            "format": "int32",
            "example": 3
          },
          "closeReason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          },
          "pageSize": {
            "type": "integer",
            "description": "Represents the number of cases to present at each page.\r\nAvailable inputs: 1 - 999 (default = 50).",
            "format": "int32",
            "nullable": true,
            "example": 50
          },
          "timeRangeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchTimeRangeType"
          },
          "sortBy": {
            "$ref": "#/components/schemas/Siemplify.Common.OrderByDescriptor`1[[Siemplify.Common.SearchEverything.DataModel.SearchEverythingCaseProperty, Siemplify.Common.SearchEverything, Version=6.2.33.3, Culture=neutral, PublicKeyToken=null]]"
          },
          "paging": {
            "$ref": "#/components/schemas/Siemplify.Common.PagingOptions"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.CaseSearchFilterTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<ul><li>Tags = 0</li><li>Environments = 1</li><li>AssignedUsers = 2</li><li>Products = 3</li><li>Ports = 4</li><li>CategoryOutcomes = 5</li><li>AlertName = 6</li><li>AlertType = 7</li><li>AlertPlaybookTrigger = 8</li><li>Vendors = 9</li><li>RootCauseCloses = 10</li><li>UsersAndSocRoles = 11</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.SearchEverything.DataModel.DomainEntityWithCasesCount": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Results.DomainEntity"
          },
          "casesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.EntitySearchFilterTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>OperationSystem = 0</li><li>Network = 1</li><li>Country = 2</li><li>Environment = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingCaseProperty": {
        "enum": [
          "Id",
          "Title",
          "Time",
          "UserAssigned",
          "IsImportant",
          "IsIncident",
          "InvolvedSuspiciousEntity",
          "IsCaseClosed",
          "Environment",
          "Priority",
          "Stage"
        ],
        "type": "string",
        "description": "<ul><li>Id = 0</li><li>Title = 1</li><li>Time = 2</li><li>UserAssigned = 3</li><li>IsImportant = 4</li><li>IsIncident = 5</li><li>InvolvedSuspiciousEntity = 6</li><li>IsCaseClosed = 7</li><li>Environment = 8</li><li>Priority = 9</li><li>Stage = 10</li></ul>"
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingEntityRequest": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isSuspicious": {
            "type": "boolean",
            "nullable": true
          },
          "isInternalAsset": {
            "type": "boolean",
            "nullable": true
          },
          "isEnriched": {
            "type": "boolean",
            "nullable": true
          },
          "networkName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "environmentsName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32"
          },
          "requestingUser": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookFlowRunStats": {
        "type": "object",
        "properties": {
          "faultedRuns": {
            "type": "integer",
            "format": "int32"
          },
          "totalRuns": {
            "type": "integer",
            "format": "int32"
          },
          "branchRuns": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsMap": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStepRunStats"
            },
            "nullable": true
          },
          "flows": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookFlowRunStats"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStatsRequest": {
        "type": "object",
        "properties": {
          "fromUnixTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "toUnixTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "originalWorkflowIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchEverything.DataModel.SearchEverythingPlaybookStepRunStats": {
        "type": "object",
        "properties": {
          "successfulRuns": {
            "type": "integer",
            "format": "int32"
          },
          "faultedRuns": {
            "type": "integer",
            "format": "int32"
          },
          "totalRuns": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SearchTimeRangeType": {
        "enum": [
          0,
          1,
          2,
          3,
          7,
          14,
          30,
          90,
          180,
          365
        ],
        "type": "integer",
        "description": "<ul><li>CUSTOM = 0</li><li>LAST_DAY = 1</li><li>LAST_2_DAYS = 2</li><li>LAST_3_DAYS = 3</li><li>LAST_WEEK = 7</li><li>LAST_2_WEEKS = 14</li><li>LAST_MONTH = 30</li><li>LAST_3_MONTHS = 90</li><li>LAST_6_MONTHS = 180</li><li>LAST_YEAR = 365</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.ServiceWorkingState": {
        "enum": [
          "Paused",
          "Active"
        ],
        "type": "string",
        "description": "<ul><li>Paused = 0</li><li>Active = 1</li></ul>"
      },
      "Siemplify.Common.Settings.DataModel.AuditSettingsExportRequest": {
        "type": "object",
        "properties": {
          "auditType": {
            "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsRequestTypeEnum"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Settings.DataModel.AuditSettingsExportRequestV2": {
        "type": "object",
        "properties": {
          "auditType": {
            "$ref": "#/components/schemas/Siemplify.Common.Settings.DataModel.AuditSettingsRequestTypeEnum"
          },
          "usersNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Settings.DataModel.AuditSettingsRequestTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Group = 0</li><li>Count = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Settings.DataModel.EmailSettings": {
        "required": [
          "senderEmailAddress",
          "smtpServerAddress"
        ],
        "type": "object",
        "properties": {
          "siemplifySmtp": {
            "type": "boolean"
          },
          "senderDisplayName": {
            "type": "string",
            "nullable": true
          },
          "senderEmailAddress": {
            "minLength": 1,
            "pattern": "^(?!\\.)(\"([^\"\\r\\\\]|\\\\[\"\\r\\\\])*\"|([-A-Za-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\\.)\\.)*)(?<!\\.)@[A-Za-z0-9][\\w\\.-]*[A-Za-z0-9]\\.[A-Za-z][A-Za-z\\.]*[A-Za-z]$",
            "type": "string"
          },
          "isRequireAuthentication": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string"
          },
          "smtpPort": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "useOauthToken": {
            "type": "boolean"
          },
          "mailServerProvider": {
            "type": "string",
            "nullable": true
          },
          "azureClientId": {
            "type": "string",
            "nullable": true
          },
          "azureTenantId": {
            "type": "string",
            "nullable": true
          },
          "useSsl": {
            "type": "boolean"
          },
          "trustCertificate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.SiemplifyPythonVersion": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>None = 0</li><li>V2_7 = 1</li><li>V3_7 = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.SortOrder": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Descending = 0</li><li>Ascending = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Store.DataModel.ActionDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "hasPredefineWidget": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.ApiIntegrationFullDetails": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "minimumSystemVersion": {
            "type": "number",
            "format": "double"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.ActionDetail"
            },
            "nullable": true
          },
          "jobs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "connectors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "managers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "customFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "exampleUseCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "mappingRules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "isCustom": {
            "type": "boolean"
          },
          "integrationProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationProperty"
            },
            "nullable": true
          },
          "releaseNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.MarketplaceReleaseNote"
            },
            "nullable": true
          },
          "documentationLink": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.HtmlViewPreset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "thumbnailBase64": {
            "type": "string",
            "nullable": true
          },
          "htmlCode": {
            "type": "string",
            "nullable": true
          },
          "htmlHeight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.IntegrationInstancesByEnvironment": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          },
          "integrationInstances": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.IntegrationTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Commercial = 0</li><li>Partner = 1</li><li>Community = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Store.DataModel.MarketplaceReleaseNote": {
        "type": "object",
        "properties": {
          "version": {
            "type": "number",
            "format": "double"
          },
          "publishTimeUnixTime": {
            "type": "integer",
            "format": "int64",
            "default": -1
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.PlaybooksByEnvironment": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          },
          "playbooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.StoreItemStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>New = 0</li><li>Exist = 1</li><li>ShouldUpdate = 2</li><li>Error = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Common.Store.DataModel.Usecases.ApiUsecaseExportRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "videoLink": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "updaterFullName": {
            "type": "string",
            "nullable": true
          },
          "updaterEmail": {
            "type": "string",
            "nullable": true
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.Usecases.UseCaseElement"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeIntegrations": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Store.DataModel.Usecases.UseCaseElement": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Tenants.AddTenantRequest": {
        "required": [
          "adminEmail",
          "adminFirstName",
          "adminLastName",
          "tenantName"
        ],
        "type": "object",
        "properties": {
          "tenantName": {
            "minLength": 1,
            "pattern": "[a-zA-Z0-9]+",
            "type": "string"
          },
          "adminEmail": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^(?!\\.)(\"([^\"\\r\\\\]|\\\\[\"\\r\\\\])*\"|([-A-Za-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\\.)\\.)*)(?<!\\.)@[A-Za-z0-9][\\w\\.-]*[A-Za-z0-9]\\.[A-Za-z][A-Za-z\\.]*[A-Za-z]$",
            "type": "string"
          },
          "adminFirstName": {
            "minLength": 1,
            "type": "string"
          },
          "adminLastName": {
            "minLength": 1,
            "type": "string"
          },
          "privatePythonPod": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Tenants.Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "isCreationFailed": {
            "type": "boolean",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Tenants.TenantDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "isCreationFailed": {
            "type": "boolean",
            "nullable": true
          },
          "privatePythonPod": {
            "type": "string",
            "nullable": true
          },
          "remainingLicenseDays": {
            "type": "integer",
            "format": "int32"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Tenants.TenantDetailsCreated": {
        "type": "object",
        "properties": {
          "systemApiKey": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "isCreationFailed": {
            "type": "boolean",
            "nullable": true
          },
          "privatePythonPod": {
            "type": "string",
            "nullable": true
          },
          "remainingLicenseDays": {
            "type": "integer",
            "format": "int32"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhookUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultEnvironment": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "webhookMappingRules": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMappingRules"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "jsonExampleData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.ApiDataModels.Requests.ApiWebhooksAddRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultEnvironment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.ApiDataModels.Responses.ApiWebhookResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultEnvironment": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "postfix": {
            "type": "string",
            "nullable": true
          },
          "webhookMappingRules": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMappingRules"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "jsonExampleData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.ApiDataModels.Responses.WebhookCard": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping": {
        "type": "object",
        "properties": {
          "mandatory": {
            "type": "boolean"
          },
          "mapping": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.DataModels.ApiWebhookMappingRules": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "webhookInstanceIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "webhookMappingsFields": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMappings"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.DataModels.ApiWebhookMappings": {
        "type": "object",
        "properties": {
          "ticketId": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "sourceSystemName": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "name": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "deviceVendor": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "ruleGenerator": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "startTime": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "environment": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "description": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "displayId": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "reason": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "deviceProduct": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "endTime": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "eventsList": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "eventProduct": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          },
          "eventName": {
            "$ref": "#/components/schemas/Siemplify.Common.Webhooks.DataModels.ApiWebhookMapping"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.DataModels.ApiWebhookStatus": {
        "type": "object",
        "properties": {
          "amountAlertsInLastDay": {
            "type": "integer",
            "format": "int32"
          },
          "avgAlertsPerDay": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Common.Webhooks.DataModels.WebhookLogDataParsed": {
        "type": "object",
        "properties": {
          "rawJson": {
            "type": "string",
            "nullable": true
          },
          "timestampUnixTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/Siemplify.Common.Logging.LogLevel"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Authentication.ExternalAuthentication.ExternalProvider": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "identityProviderType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType"
          },
          "remoteEntityIdUrl": {
            "type": "string",
            "nullable": true
          },
          "localEntityIdUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "lastNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "usernameAttribute": {
            "type": "string",
            "nullable": true
          },
          "emailAttribute": {
            "type": "string",
            "nullable": true
          },
          "defaultLicenseType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "defaultSocRoleId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "defaultPermissionGroup": {
            "type": "string",
            "nullable": true
          },
          "defaultEnvironments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "autoRedirect": {
            "type": "boolean"
          },
          "autoAddUser": {
            "type": "boolean"
          },
          "allowUnsolicitedResponse": {
            "type": "boolean"
          },
          "areSamlSettingsInUse": {
            "type": "boolean"
          },
          "publicCertificate": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Authentication.ExternalAuthentication.IdentityProviderType": {
        "enum": [
          0,
          1,
          2,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Okta = 0</li><li>GSuite = 1</li><li>CustomSaml2 = 2</li><li>None = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Authentication.ExternalAuthentication.SamlSettingsFileType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Metadata = 0</li><li>PublicCertificate = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Authentication.ExternalAuthentication.UploadSamlSettings": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Authentication.ExternalAuthentication.SamlSettingsFileType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentBase64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.AttachWorkflowToCaseRequest": {
        "type": "object",
        "properties": {
          "cyberCaseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "shouldRunAutomatic": {
            "type": "boolean"
          },
          "wfName": {
            "type": "string",
            "nullable": true
          },
          "originalWorkflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.CaseAssignmentPolicy": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>AllowUsersOnlyFromPermittedEnvironments = 0</li><li>AllowUsersFromAllEnvironments = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Cases.CaseAttachment": {
        "type": "object",
        "properties": {
          "creator": {
            "type": "string",
            "nullable": true
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "commentId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "evidenceThumbnail": {
            "type": "string",
            "nullable": true
          },
          "sizeInKB": {
            "type": "integer",
            "format": "int32"
          },
          "evidenceType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.EvidenceType"
          },
          "blob": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAttachmentBlob"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "alertIdentifier": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.CaseAttachmentBlob": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.CaseTask": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskPriorityEnum"
          },
          "isImportant": {
            "type": "boolean",
            "description": "Flag that indicates whether the task is important or not",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.TaskStatusEnum"
          },
          "ownerComment": {
            "type": "string",
            "description": "Owner comment - currently not is used",
            "nullable": true,
            "example": "Please resolve this case"
          },
          "content": {
            "type": "string",
            "description": "Task content",
            "nullable": true,
            "example": "Please resolve this case"
          },
          "creator": {
            "type": "string",
            "description": "Task creator",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Task creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "owner": {
            "type": "string",
            "description": "Task assignee",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "ownerFullName": {
            "type": "string",
            "description": "Task assignee full name",
            "nullable": true,
            "example": "John Smith"
          },
          "lastModifier": {
            "type": "string",
            "description": "Task last modifier",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "lastModifierFullName": {
            "type": "string",
            "description": "Task last modifier full name",
            "nullable": true,
            "example": "John Smith"
          },
          "caseName": {
            "type": "string",
            "description": "Case title",
            "nullable": true,
            "example": "Remote Failed login"
          },
          "dueDateUnixTimeInMs": {
            "type": "integer",
            "description": "Task due date time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "completionComment": {
            "type": "string",
            "description": "Task completion comment",
            "nullable": true,
            "example": "Done!"
          },
          "completionDateTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Task completion time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "completor": {
            "type": "string",
            "description": "Task completer",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Flag that represent whether the task is favorite or not",
            "example": true
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "nullable": true,
            "example": "Investigate alert root cause"
          },
          "alertIdentifier": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents the case task model"
      },
      "Siemplify.DataModel.Cases.EvidenceType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Attachment = 0</li><li>Data = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Cases.FieldData": {
        "type": "object",
        "properties": {
          "originalName": {
            "type": "string",
            "description": "Field key",
            "nullable": true,
            "example": "USB"
          },
          "name": {
            "type": "string",
            "description": "Field display name",
            "nullable": true,
            "example": "USB"
          },
          "value": {
            "type": "string",
            "description": "Field value",
            "nullable": true,
            "example": "USB_DEVICE_1"
          }
        },
        "additionalProperties": false,
        "description": "Represents a fields data item."
      },
      "Siemplify.DataModel.Cases.FieldGroupData": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Field group order",
            "format": "int32",
            "example": 1
          },
          "groupName": {
            "type": "string",
            "description": "Field group name",
            "nullable": true,
            "example": "Virus Total"
          },
          "isIntegration": {
            "type": "boolean",
            "description": "Flag that indicates whether the the group related to a specific integration or not",
            "example": true
          },
          "isHighlight": {
            "type": "boolean",
            "description": "Flag that indicates whether group is highlighted or not",
            "example": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Cases.FieldData"
            },
            "description": "List of fields items",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a fields group data"
      },
      "Siemplify.DataModel.Cases.MoveCaseBetweenEnvironmentsPolicy": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Deny = 0</li><li>Allow = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Cases.TaskPriorityEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>High = 0</li><li>Medium = 1</li><li>Low = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Cases.TaskStatusEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Pending = 0</li><li>Completed = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Cases.Wall.ApiCaseCommentResponse": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "This is a case comment"
          },
          "lastEditorId": {
            "type": "string",
            "description": "Editor ID",
            "nullable": true,
            "example": "C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "lastEditorFullName": {
            "type": "string",
            "description": "Editor full name",
            "nullable": true,
            "example": "John Smith"
          },
          "fileId": {
            "type": "integer",
            "description": "File ID",
            "format": "int64",
            "example": 1
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": ".doc"
          },
          "fileName": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "Case_1_Report"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Is deleted",
            "example": false
          },
          "creatorUserId": {
            "type": "string",
            "description": "Creator ID",
            "nullable": true,
            "example": "C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Indicates whether the item marked as favorite",
            "example": true
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Modification time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Creation time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          }
        },
        "additionalProperties": false,
        "description": "Represents a response object for a case comment."
      },
      "Siemplify.DataModel.Cases.Wall.BaseWallActivity": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "string",
            "description": "Creator ID",
            "nullable": true,
            "example": "C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Indicates whether the item marked as favorite",
            "example": true
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Modification time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Creation time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.Wall.CaseCommentWallActivity": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "commentForClient": {
            "type": "string",
            "nullable": true
          },
          "modificationTimeUnixTimeInMsForClient": {
            "type": "integer",
            "format": "int64"
          },
          "lastEditor": {
            "type": "string",
            "nullable": true
          },
          "lastEditorFullName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "string",
            "description": "Creator ID",
            "nullable": true,
            "example": "C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Indicates whether the item marked as favorite",
            "example": true
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Modification time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Creation time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.Wall.CaseEvidenceWallActivity": {
        "type": "object",
        "properties": {
          "evidenceName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "commentForClient": {
            "type": "string",
            "nullable": true
          },
          "modificationTimeUnixTimeInMsForClient": {
            "type": "integer",
            "format": "int64"
          },
          "evidenceThumbnailBase64": {
            "type": "string",
            "nullable": true
          },
          "evidenceId": {
            "type": "integer",
            "format": "int64"
          },
          "commentId": {
            "type": "integer",
            "format": "int64"
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "lastEditor": {
            "type": "string",
            "nullable": true
          },
          "lastEditorFullName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "string",
            "description": "Creator ID",
            "nullable": true,
            "example": "C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Indicates whether the item marked as favorite",
            "example": true
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Modification time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Creation time in milliseconds as unix time",
            "format": "int64",
            "example": 1681826793506
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Cases.Wall.WallActivityEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "description": "<ul><li>CaseAlertData = 0</li><li>CaseStatusChange = 1</li><li>CaseTask = 2</li><li>CaseAction = 3</li><li>CaseEvidence = 4</li><li>CaseComment = 5</li><li>CaseInsight = 6</li><li>CaseCreation = 7</li><li>CaseExternalChannelMessage = 8</li><li>PinnedCaseChatMessage = 9</li><li>CaseLink = 10</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "family": {
            "type": "string",
            "nullable": true
          },
          "eventFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventDefinition"
            },
            "nullable": true
          },
          "isAllowedToSetDescription": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "watermark": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventType"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventInstance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventType"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>String = 0</li><li>Boolean = 1</li><li>Number = 2</li><li>List = 3</li><li>Email = 4</li><li>Password = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestFiltersEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Open = 0</li><li>Close = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestSortByEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>OldestFirst = 0</li><li>NewestFirst = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.CollaboratorRequests.GenerateCollaboratorRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "family": {
            "type": "string",
            "nullable": true
          },
          "eventFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.CollaboratorRequests.CollaboratorRequestEventInstance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Insights.CaseInsightData": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "triggeredBy": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "entityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightSeverityEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightTypeEnum"
          },
          "additionalDataType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightTypeEnum"
          },
          "additionalData": {
            "type": "string",
            "nullable": true
          },
          "additionalDataTitle": {
            "type": "string",
            "nullable": true
          },
          "originalRequestingUser": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Insights.InsightSeverityEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Info = 0</li><li>Warn = 1</li><li>Error = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Insights.InsightTypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>General = 0</li><li>Entity = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.LoadDataTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>EVENTS = 0</li><li>CASES = 1</li><li>CONNECTOR_LOG = 2</li><li>CONNECTOR_OVERFLOW = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Maintenance.SourceRepository": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string",
            "nullable": true
          },
          "uncertifiedBucketName": {
            "type": "string",
            "nullable": true
          },
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "serviceUrl": {
            "type": "string",
            "nullable": true
          },
          "marketplaceFolder": {
            "type": "string",
            "nullable": true
          },
          "useCasesFolder": {
            "type": "string",
            "nullable": true
          },
          "reportsFolder": {
            "type": "string",
            "nullable": true
          },
          "announcementsFolder": {
            "type": "string",
            "nullable": true
          },
          "integrationsFolder": {
            "type": "string",
            "nullable": true
          },
          "useOnlineMarketplace": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.Activities.ActivityKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24
        ],
        "type": "integer",
        "description": "<ul><li>Action = 0</li><li>Comment = 1</li><li>WorkflowActivity = 2</li><li>Email = 3</li><li>Task = 4</li><li>CaseCreated = 5</li><li>CaseUpdated = 6</li><li>CaseReopened = 7</li><li>CaseAssigned = 8</li><li>CaseClosed = 9</li><li>CaseStageChanged = 10</li><li>IsImportantChanged = 11</li><li>PriorityChanged = 12</li><li>IncidentRaised = 13</li><li>Escalated = 14</li><li>TagChange = 15</li><li>CaseRenamed = 16</li><li>SLAChanged = 17</li><li>MovedAlert = 18</li><li>MergeCases = 19</li><li>EnrichmentAction = 20</li><li>PlaybookAttached = 21</li><li>EntityAdded = 22</li><li>PlaybookRerun = 23</li><li>BlockRerun = 24</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.CaseDataStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>Opened = 1</li><li>Closed = 2</li><li>All = 3</li><li>Merged = 4</li><li>CreationPending = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.CaseStageDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.CaseTag": {
        "type": "object",
        "properties": {
          "tag": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "indicator": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "providerType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagProviderType"
          },
          "canBeCaseTitle": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.CloseReasonEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Malicious = 0</li><li>NotMalicious = 1</li><li>Maintenance = 2</li><li>Inconclusive = 3</li><li>Unknown = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.CyberCase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "lastModifingUser": {
            "type": "string",
            "nullable": true
          },
          "creationTimeDisplayName": {
            "type": "string",
            "nullable": true
          },
          "modificationTimeDisplayName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "highRiskProducts": {
            "type": "string",
            "nullable": true
          },
          "priorityProcessorResult": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Results.PriorityProcessorCaseResult"
          },
          "touched": {
            "type": "boolean"
          },
          "isMerged": {
            "type": "boolean"
          },
          "isImportant": {
            "type": "boolean"
          },
          "isIncident": {
            "type": "boolean"
          },
          "assignedUser": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "isAdHocCase": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "caseDurationInMs": {
            "type": "number",
            "format": "double"
          },
          "startTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "endTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "alertCount": {
            "type": "integer",
            "format": "int64"
          },
          "stage": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "isOverflowCase": {
            "type": "boolean"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "caseSource": {
            "type": "string",
            "nullable": true
          },
          "alertTypeCount": {
            "type": "integer",
            "format": "int64"
          },
          "involvedEntitiesCount": {
            "type": "integer",
            "format": "int64"
          },
          "involvedSuspiciousEntity": {
            "type": "boolean"
          },
          "environment": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
          },
          "slaExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "slaCriticalExpirationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sourceCaseIds": {
            "type": "string",
            "nullable": true
          },
          "slaStatus": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.SlaStatusEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isVisibleInQueue": {
            "type": "boolean"
          },
          "stageSlaExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stageSlaCriticalExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "overallSlaExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "overallSlaCriticalExpirationUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trackingTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "externalCaseId": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseTag"
            },
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.EntityKey": {
        "required": [
          "identifier"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "identifier": {
            "minLength": 1,
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.InvolvedEntity": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "entityType": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "entityIdentifier": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "isSuspicious": {
            "type": "boolean"
          },
          "threatSource": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "operationSystem": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "networkName": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "networkPriority": {
            "type": "integer",
            "format": "int32"
          },
          "isAttacker": {
            "type": "boolean"
          },
          "isPivot": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "useForGrouping": {
            "type": "boolean"
          },
          "mappingTargetType": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Events.SiemplifyEventEntityTypesEnum"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "sourceSystemUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.InvolvedThreatIndicatorStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Status of the alert",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.LogicalOperatorEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>And = 0</li><li>Or = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.RootCauseClose": {
        "type": "object",
        "properties": {
          "rootCause": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "forCloseReason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.SlaStatusEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Critical = 0</li><li>PassedDue = 1</li><li>Paused = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.TagCompareType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Exact = 0</li><li>StartWith = 1</li><li>Contain = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.TagDefinitionV2": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isPotentialCaseName": {
            "type": "boolean"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagProviderType"
          },
          "compareType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagCompareType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Managment.TagProviderType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>ByVendor = 0</li><li>ByProduct = 1</li><li>ByRuleGenerator = 2</li><li>ByEntityPropertyName = 3</li><li>DataDriven = 4</li><li>System = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "Status of a playbook run",
        "format": "int32"
      },
      "Siemplify.DataModel.ModelData.NetworkDetails": {
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.ModelData.TrackingListItem": {
        "type": "object",
        "properties": {
          "entityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "forDBMigration": {
            "type": "boolean"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Results.DomainEntity": {
        "type": "object",
        "properties": {
          "relatedRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Results.DomainRelation"
            },
            "nullable": true
          },
          "involvedEntities": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "involvedRelations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "useForGrouping": {
            "type": "boolean"
          },
          "sourceSystemUrl": {
            "type": "string",
            "nullable": true
          },
          "sourceRuleIdentifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "Properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
            }
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Results.DomainRelation": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
          },
          "to": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
          },
          "isDirectional": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "Properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Enrichment.PropertyValue"
            }
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Results.PriorityProcessorCaseResult": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "casePriorityScore": {
            "type": "integer",
            "format": "int32"
          },
          "casePriorityPrecentile": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "ruleExplanations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Results.PriorityProcessorRuleResult"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "This enum is a result of a precentage value, based on all cases Score result."
      },
      "Siemplify.DataModel.Results.PriorityProcessorRuleResult": {
        "type": "object",
        "properties": {
          "ruleName": {
            "type": "string",
            "nullable": true
          },
          "priorityScore": {
            "type": "integer",
            "format": "int32"
          },
          "explanatoryInformation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.Settings.ApiAlertGroupingParameter": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.SocRoles.SocRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.User.UpdateUser": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "loginIdentifier",
          "permissionGroup",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "permissionType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^(?!\\.)(\"([^\"\\r\\\\]|\\\\[\"\\r\\\\])*\"|([-A-Za-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\\.)\\.)*)(?<!\\.)@[A-Za-z0-9][\\w\\.-]*[A-Za-z0-9]\\.[A-Za-z][A-Za-z\\.]*[A-Za-z]$",
            "type": "string"
          },
          "loginIdentifier": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserRoleEnum"
          },
          "socRoleId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserType"
          },
          "identityProvider": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.IdentityProviderEnum"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsAccess": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.AdvancedReportsAccess"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissionGroup": {
            "minLength": 1,
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isInternalUser": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.User.UploadLicenseRequest": {
        "type": "object",
        "properties": {
          "base64String": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.DataModel.WorkflowInstance": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "workflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "indicatorIdentifier": {
            "maxLength": 2100,
            "type": "string",
            "nullable": true
          },
          "triggerIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "workflowName": {
            "type": "string",
            "description": "This isn't strictly necessary, but it's good for tracing and logging\r\nso you don't have to go fetch the full WorkflowDefinition every time.",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "nestedInputParameters": {
            "type": "string",
            "nullable": true
          },
          "blockStepId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parentWorkflowStepInstanceName": {
            "type": "string",
            "nullable": true
          },
          "forMigrationValue0": {
            "type": "boolean"
          },
          "forMigrationValue1": {
            "type": "boolean"
          },
          "terminatedBySystem": {
            "type": "boolean"
          },
          "isDebug": {
            "type": "boolean"
          },
          "isSimulated": {
            "type": "boolean"
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "messageToAssignee": {
            "type": "string",
            "nullable": true
          },
          "pendingStepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "pendingStepTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "pendingStepExpirationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalWorkflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "runCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentInstanceId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Agents.BL.ClearRetransmissionFilterTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>DeleteAll = 0</li><li>MinimalSize = 1</li><li>ConnectorId = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.Agents.ApiAgent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int64"
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherSlaveName": {
            "type": "string",
            "nullable": true
          },
          "accessLink": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentStatusEnum"
          },
          "certificate": {
            "type": "string",
            "nullable": true
          },
          "loggingLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentLoggingLevelEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Agents.ApiAgentConnectorAvailability": {
        "type": "object",
        "properties": {
          "agentAvailabilityConnectorStatus": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentAvailabilityConnectorEnum"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "publisherId": {
            "type": "integer",
            "format": "int64"
          },
          "publisherName": {
            "type": "string",
            "nullable": true
          },
          "publisherSlaveName": {
            "type": "string",
            "nullable": true
          },
          "accessLink": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentStatusEnum"
          },
          "certificate": {
            "type": "string",
            "nullable": true
          },
          "loggingLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentLoggingLevelEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Agents.ApiAgentInformation": {
        "type": "object",
        "properties": {
          "agentIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "agentName": {
            "type": "string",
            "nullable": true
          },
          "lastCommunicationUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastActionExecutionUnixTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "agentVersion": {
            "type": "string",
            "nullable": true
          },
          "requiredSiemplifyVersion": {
            "type": "string",
            "nullable": true
          },
          "agentIP": {
            "type": "string",
            "nullable": true
          },
          "agentHostname": {
            "type": "string",
            "nullable": true
          },
          "communicationStatus": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentCommunicationStatusEnum"
          },
          "usages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "connectivityFlag": {
            "$ref": "#/components/schemas/Siemplify.Common.Agents.DataModel.AgentPublisherConnectivityFlag"
          },
          "deploymentType": {
            "type": "string",
            "nullable": true
          },
          "remoteLoggingLevel": {
            "type": "string",
            "nullable": true
          },
          "availableForLoggingLevel": {
            "type": "boolean",
            "nullable": true
          },
          "isUpgradeAvailable": {
            "type": "boolean",
            "nullable": true
          },
          "redeployInfo": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Agents.RedeployInfo"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Agents.ApiPublisher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "serverApiRoot": {
            "type": "string",
            "nullable": true
          },
          "agentCommunicationTimeInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "apiToken": {
            "type": "string",
            "nullable": true
          },
          "publisherLogsLink": {
            "type": "string",
            "nullable": true
          },
          "slavePublisherId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Agents.RedeployInfo": {
        "type": "object",
        "properties": {
          "wasRedeployed": {
            "type": "boolean"
          },
          "redeployedFromAgent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiActionDefinitionDataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "script": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "scriptResultName": {
            "type": "string",
            "nullable": true
          },
          "dynamicResultsMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiDynamicResultMetadata"
            },
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionParameter"
            },
            "nullable": true
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "asyncPollingIntervalInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "totalIntervalTimeoutForAsyncInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "isAsync": {
            "type": "boolean",
            "nullable": true
          },
          "defaultResultValue": {
            "type": "string",
            "nullable": true
          },
          "integrationInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
            },
            "nullable": true
          },
          "hasJsonResult": {
            "type": "boolean"
          },
          "actionWidgetTemplateIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiActionParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "customActionId": {
            "type": "integer",
            "format": "int64"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.CustomActionParameterType"
          },
          "optionalValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiActionResultDataModel": {
        "type": "object",
        "properties": {
          "scriptResultEntityData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.ScriptResultEntityData"
            },
            "nullable": true
          },
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "alertDisplayName": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "executingUser": {
            "type": "string",
            "nullable": true
          },
          "providerIdentifier": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "integrationInstanceName": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceEnvironment": {
            "type": "string",
            "nullable": true
          },
          "actionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "actionCategory": {
            "$ref": "#/components/schemas/Siemplify.Common.Actions.Interfaces.ServerBaseClasses.ActionCategoryEnum"
          },
          "caseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "entityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "shouldCreateActivity": {
            "type": "boolean"
          },
          "resultCode": {
            "type": "integer",
            "format": "int32"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "resultJsonObject": {
            "type": "string",
            "nullable": true
          },
          "targetedEntitiesJsonObject": {
            "type": "string",
            "nullable": true
          },
          "resultEntitiesJsonObject": {
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Actions.Interfaces.ActionStatus"
          },
          "indicatorIdentifier": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "workflowStep": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "blockStepId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "workflowStepInstanceName": {
            "type": "string",
            "nullable": true
          },
          "isAsyncPollingResult": {
            "type": "boolean"
          },
          "firstResultUnixTime": {
            "type": "integer",
            "format": "int64"
          },
          "isSkippedAndNotExecuted": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiAlertGroupingCategory": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>All = 0</li><li>AlertType = 1</li><li>ProductName = 2</li><li>DataSource = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiAlertGroupingRule": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingCategory"
          },
          "subCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Settings.ApiAlertGroupingParameter"
            },
            "nullable": true
          },
          "groupingType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAlertGroupingTypeEnum"
          },
          "entityGrouping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSiemplifyEventEntityTypesEnum"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiAlertGroupingTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Entities = 0</li><li>SourceGroupingIdentifier = 1</li><li>None = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiAnalyst": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiBlockListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "entityIdentifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "elementType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItemType"
          },
          "scope": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItemScope"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiBlockListItemScope": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>All = 0</li><li>ForAggregationOnly = 1</li><li>ForGroupOnly = 2</li><li>ForModel = 3</li><li>ForCreationAlert = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiBlockListItemType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "<ul><li>HostName = 0</li><li>UserUniqName = 1</li><li>IP = 2</li><li>EventProduct = 3</li><li>EventVendor = 4</li><li>EventSignutre = 5</li><li>MacAddress = 6</li><li>Entity = 7</li><li>Event = 8</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiCaseInsightData": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "triggeredBy": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
          },
          "severity": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightSeverityEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightTypeEnum"
          },
          "additionalDataType": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Insights.InsightTypeEnum"
          },
          "additionalData": {
            "type": "string",
            "nullable": true
          },
          "additionalDataTitle": {
            "type": "string",
            "nullable": true
          },
          "creatorUserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCaseRecommendationRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "caseRecommendationOutcomeStatus": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CaseRecommendationOutcomeStatusEnum"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "scorePercent": {
            "type": "integer",
            "format": "int32"
          },
          "isClosed": {
            "type": "boolean"
          },
          "closedRootCause": {
            "type": "string",
            "nullable": true
          },
          "closedComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCaseRecommendations": {
        "type": "object",
        "properties": {
          "similarCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCaseRecommendationRecord"
            },
            "nullable": true
          },
          "relevantAnalysts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "relevantTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCaseTagDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCheckWorkflowNameInDifferentEnvironmentsRequest": {
        "type": "object",
        "properties": {
          "wfName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCreateManualCaseRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "assignedUser": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "playbooks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "alertName": {
            "type": "string",
            "nullable": true
          },
          "occurenceTime": {
            "type": "string",
            "format": "date-time"
          },
          "slaExpirationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCyberCaseCardDataModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "isTouched": {
            "type": "boolean"
          },
          "hasSuspiciousEntity": {
            "type": "boolean"
          },
          "isMerged": {
            "type": "boolean"
          },
          "isImportant": {
            "type": "boolean"
          },
          "isIncident": {
            "type": "boolean"
          },
          "hasWorkflow": {
            "type": "boolean"
          },
          "environment": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiOperatingEnvironmentCard"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "assignedUserName": {
            "type": "string",
            "nullable": true
          },
          "apiSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.ApiSlaExpiration"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "caseSource": {
            "type": "string",
            "nullable": true
          },
          "isOverflowCase": {
            "type": "boolean"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "productFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "canOpenIncident": {
            "type": "boolean"
          },
          "hasIncident": {
            "type": "boolean"
          },
          "workflowInstance": {
            "$ref": "#/components/schemas/Siemplify.DataModel.WorkflowInstance"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiCyberCaseFullDataModel": {
        "type": "object",
        "properties": {
          "wallData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiBaseWallActivity"
            },
            "nullable": true
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityAlertFullDataModel"
            },
            "nullable": true
          },
          "caseRecommendations": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCaseRecommendations"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCaseTagDataModel"
            },
            "nullable": true
          },
          "insights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCaseInsightData"
            },
            "nullable": true
          },
          "productFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/Siemplify.Common.Cases.DataModel.CaseSummaryData"
          },
          "entityCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SecurityEntityCard"
            },
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "canOpenIncident": {
            "type": "boolean"
          },
          "hasIncident": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isTouched": {
            "type": "boolean"
          },
          "hasSuspiciousEntity": {
            "type": "boolean"
          },
          "isMerged": {
            "type": "boolean"
          },
          "isImportant": {
            "type": "boolean"
          },
          "isIncident": {
            "type": "boolean"
          },
          "hasWorkflow": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "assignedUserName": {
            "type": "string",
            "nullable": true
          },
          "apiSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.ApiSlaExpiration"
          },
          "apiStageSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Common.CasesV2.DataModel.ApiSla"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CaseType"
          },
          "caseSource": {
            "type": "string",
            "nullable": true
          },
          "isOverflowCase": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiDashboardDataModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultTimeRange": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedUsersJson": {
            "type": "string",
            "nullable": true
          },
          "allowedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiDynamicResultMetadata": {
        "type": "object",
        "properties": {
          "resultName": {
            "type": "string",
            "nullable": true
          },
          "resultExample": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiEnvironmentCard": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "base64Image": {
            "type": "string",
            "nullable": true
          },
          "numOfInstalledIntegrations": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiEnvironmentParameterValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "dynamicParameterId": {
            "type": "integer",
            "format": "int64"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiGetAgentsByEnvironmentDataModel": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiGetTrackingListFilterDataModel": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiIntegrationDependencies": {
        "type": "object",
        "properties": {
          "playbooksByEnvironment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.PlaybooksByEnvironment"
            },
            "nullable": true
          },
          "integrationInstancesByEnvironment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.IntegrationInstancesByEnvironment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "environmentIdentifier": {
            "type": "string",
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "instanceDescription": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean"
          },
          "isSystemDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel": {
        "type": "object",
        "properties": {
          "versionForDisplay": {
            "type": "string",
            "nullable": true
          },
          "installedVersionForDisplay": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.StoreItemStatusEnum"
          },
          "documentationLink": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "isAvailableForCommunity": {
            "type": "boolean"
          },
          "integrationType": {
            "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.IntegrationTypeEnum"
          },
          "hasConnectors": {
            "type": "boolean"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "latestReleasePublishTimeUnixTime": {
            "type": "integer",
            "format": "int64"
          },
          "installedVersion": {
            "type": "number",
            "format": "double"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "smallImageBase64": {
            "type": "string",
            "nullable": true
          },
          "svgImage": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isCertified": {
            "type": "boolean"
          },
          "uploaderEmail": {
            "type": "string",
            "nullable": true
          },
          "uploaderFullName": {
            "type": "string",
            "nullable": true
          },
          "uploaderImageBase64": {
            "type": "string",
            "nullable": true
          },
          "marketplaceItemUpdateStatus": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.MarketplaceItemUpdateStatusEnum"
          },
          "uploaderProfileLink": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
            },
            "nullable": true
          },
          "integrationSupportedActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSupportedAction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiLdapSettings": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adminDN": {
            "type": "string",
            "nullable": true
          },
          "adminPassword": {
            "type": "string",
            "nullable": true
          },
          "usersBaseDN": {
            "type": "string",
            "nullable": true
          },
          "userNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "firstNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "lastNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "emailAttribute": {
            "type": "string",
            "nullable": true
          },
          "groupAttribute": {
            "type": "string",
            "nullable": true
          },
          "useTls": {
            "type": "boolean",
            "nullable": true
          },
          "trustRemoteCertificate": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiManualActionDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "targetEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "actionProvider": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "alertGroupIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPredefinedScope": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiOperatingEnvironment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactEmails": {
            "type": "string",
            "nullable": true
          },
          "contactEmailsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "allowedActions": {
            "type": "string",
            "nullable": true
          },
          "remediationDurationInDays": {
            "type": "integer",
            "format": "int32"
          },
          "shouldAllowRemediationActions": {
            "type": "boolean"
          },
          "shouldNotifyOnRemediationActions": {
            "type": "boolean"
          },
          "retentionDurationInMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retentionDurationInMonthsInternal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "base64Image": {
            "type": "string",
            "nullable": true
          },
          "forDBMigration": {
            "type": "boolean"
          },
          "environmentAllowedForAllUsers": {
            "type": "boolean"
          },
          "dynamicParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiEnvironmentParameterValue"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "isSystem": {
            "type": "boolean"
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "instanceUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiOperatingEnvironmentCard": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "base64Image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiPackageImportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isCustom": {
            "type": "boolean"
          },
          "isCertified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiPeriodTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "<ul><li>Minutes = 0</li><li>Hours = 1</li><li>Days = 2</li><li>Seconds = 3</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiReassignTask": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiReportStoreMetadataDataModel": {
        "type": "object",
        "properties": {
          "releaseNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.MarketplaceReleaseNote"
            },
            "nullable": true
          },
          "itemStatus": {
            "$ref": "#/components/schemas/Siemplify.Common.Store.DataModel.StoreItemStatusEnum"
          },
          "isDownloadAvailable": {
            "type": "boolean"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isAvailableForCommunity": {
            "type": "boolean"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "installedVersion": {
            "type": "number",
            "format": "double"
          },
          "uniqName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiResultJsonUploadRequest": {
        "type": "object",
        "properties": {
          "resultJsonExample": {
            "type": "string",
            "nullable": true
          },
          "customActionId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSearchCaseResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "closingTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "alertNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ticketIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "eventNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sources": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "destinations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "artificats": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "outcomes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userAssigned": {
            "type": "string",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean"
          },
          "isIncident": {
            "type": "boolean"
          },
          "involvedSuspiciousEntity": {
            "type": "boolean"
          },
          "isCaseClosed": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "closeReason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          },
          "rootCause": {
            "type": "string",
            "nullable": true
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSearchCaseResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSearchCaseResult"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSearchEverythingEntitiyResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityWithCasesCountDataModel"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSecurityAlertFullDataModel": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.InvolvedThreatIndicatorStatus"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "hasWorkflows": {
            "type": "boolean"
          },
          "workflowsStatus": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "sourceSystemName": {
            "type": "string",
            "nullable": true
          },
          "securityEventCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEventCardDataModel"
            },
            "nullable": true
          },
          "entityCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SecurityEntityCard"
            },
            "nullable": true
          },
          "productFamilies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "startTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "apiSlaExpiration": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.ApiSlaExpiration"
          },
          "isManualAlert": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "isSuspicious": {
            "type": "boolean"
          },
          "isArtifact": {
            "type": "boolean"
          },
          "isEnriched": {
            "type": "boolean"
          },
          "isVulnerable": {
            "type": "boolean"
          },
          "isPivot": {
            "type": "boolean"
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
            },
            "nullable": true
          },
          "isManuallyCreated": {
            "type": "boolean"
          },
          "sourceUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSecurityEntityWithCasesCountDataModel": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
          },
          "casesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSecurityEventCardDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "type": "string",
            "nullable": true
          },
          "sources": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "destinations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "artificats": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.EntityKey"
            },
            "nullable": true
          },
          "port": {
            "type": "string",
            "nullable": true
          },
          "outcome": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deviceEventClassId": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextGroupDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSiemplifyEventEntityTypesEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36
        ],
        "type": "integer",
        "description": "<ul><li>SourceHostName = 0</li><li>SourceAddress = 1</li><li>SourceUserName = 2</li><li>SourceProcessName = 3</li><li>SourceMacAddress = 4</li><li>DestinationHostName = 5</li><li>DestinationAddress = 6</li><li>DestinationUserName = 7</li><li>DestinationProcessName = 8</li><li>DestinationMacAddress = 9</li><li>DestinationURL = 10</li><li>Process = 11</li><li>FileName = 12</li><li>FileHash = 13</li><li>EmailSubject = 14</li><li>ThreatSignature = 15</li><li>USB = 16</li><li>Deployment = 17</li><li>CreditCard = 18</li><li>PhoneNumber = 19</li><li>CVE = 20</li><li>ThreatActor = 21</li><li>ThreatCampaign = 22</li><li>GenericEntity = 23</li><li>ParentProcess = 24</li><li>ParentHash = 25</li><li>ChildProcess = 26</li><li>ChildHash = 27</li><li>SourceDomain = 28</li><li>DestinationDomain = 29</li><li>IPSET = 30</li><li>Cluster = 31</li><li>Application = 32</li><li>Database = 33</li><li>Pod = 34</li><li>Container = 35</li><li>Service = 36</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiSlaAlertType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>AllAlerts = 0</li><li>SpecificAlerts = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiSlaDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "valueType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaProviderTypeEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "slaPeriodType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPeriodTypeEnum"
          },
          "slaPeriod": {
            "type": "number",
            "format": "double"
          },
          "criticalPeriodType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiPeriodTypeEnum"
          },
          "criticalPeriod": {
            "type": "number",
            "format": "double"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "alertType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaAlertType"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiSlaProviderTypeEnum": {
        "enum": [
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<ul><li>AlertRuleGenerator = 2</li><li>CaseStage = 3</li><li>CasePriority = 4</li><li>AlertPriority = 5</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.ApiUsecaseData": {
        "type": "object",
        "properties": {
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseStoreRecordDetails"
            },
            "nullable": true
          },
          "useCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUsecaseStoreRecordDetails"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiUsecaseStoreRecordDetails": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "downloads": {
            "type": "integer",
            "format": "int32"
          },
          "isAvailableForCommunity": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "creationTimeInUnixtime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "videoLink": {
            "type": "string",
            "nullable": true
          },
          "updaterFullName": {
            "type": "string",
            "nullable": true
          },
          "updaterEmail": {
            "type": "string",
            "nullable": true
          },
          "categorySvgImage": {
            "type": "string",
            "nullable": true
          },
          "updaterImageBase64": {
            "type": "string",
            "nullable": true
          },
          "playbooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.NameAndIdentifier"
            },
            "nullable": true
          },
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.UsecaseIntegrationDetails"
            },
            "nullable": true
          },
          "connectors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "installedConnectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.NameAndIdentifier"
            },
            "nullable": true
          },
          "testCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "galleryImageBase64": {
            "type": "string",
            "nullable": true
          },
          "galleryOrder": {
            "type": "integer",
            "format": "int32"
          },
          "minimumSystemVersion": {
            "type": "string",
            "nullable": true
          },
          "isLocal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiUserProfile": {
        "required": [
          "userType"
        ],
        "type": "object",
        "properties": {
          "permissionGroup": {
            "type": "string",
            "nullable": true
          },
          "socRole": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean",
            "readOnly": true
          },
          "loginIdentifier": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "permissionType": {
            "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
          },
          "role": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserRoleEnum"
          },
          "socRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "pattern": "^(?!\\.)(\"([^\"\\r\\\\]|\\\\[\"\\r\\\\])*\"|([-A-Za-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\\.)\\.)*)(?<!\\.)@[A-Za-z0-9][\\w\\.-]*[A-Za-z0-9]\\.[A-Za-z][A-Za-z\\.]*[A-Za-z]$",
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserType"
          },
          "identityProvider": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.IdentityProviderEnum"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsAccess": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.AdvancedReportsAccess"
          },
          "accountState": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserAccountState"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "previousLoginTime": {
            "type": "integer",
            "format": "int64"
          },
          "lastPasswordChangeTime": {
            "type": "integer",
            "format": "int64"
          },
          "lastPasswordChangeNotificationTime": {
            "type": "integer",
            "format": "int64"
          },
          "loginWrongPasswordCount": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletionTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiUserProfileCard": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "accountState": {
            "$ref": "#/components/schemas/Siemplify.Common.PermissionsV2.DataModels.UserAccountState"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiUserProfileRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiVisualFamilyRuleRequest": {
        "type": "object",
        "properties": {
          "primarySource": {
            "type": "string",
            "nullable": true
          },
          "secondarySource": {
            "type": "string",
            "nullable": true
          },
          "thirdSource": {
            "type": "string",
            "nullable": true
          },
          "fourthSource": {
            "type": "string",
            "nullable": true
          },
          "relationType": {
            "type": "string",
            "nullable": true
          },
          "primaryDestination": {
            "type": "string",
            "nullable": true
          },
          "secondaryDestination": {
            "type": "string",
            "nullable": true
          },
          "thirdDestination": {
            "type": "string",
            "nullable": true
          },
          "fourthDestination": {
            "type": "string",
            "nullable": true
          },
          "visualFamily": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiWorkflowCardsRequest": {
        "type": "object",
        "properties": {
          "caseEnvironment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiWorkflowLogVersionRequest": {
        "type": "object",
        "properties": {
          "workFlowIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiWorkflowRestoreRequest": {
        "type": "object",
        "properties": {
          "restoreWorkflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "restoreComment": {
            "type": "string",
            "nullable": true
          },
          "isOverride": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ApiWorkflowSaveVersionRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CaseRecommendationOutcomeStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<ul><li>Open = 0</li><li>Malicious = 1</li><li>NotMalicious = 2</li><li>Maintenance = 3</li><li>Inconclusive = 4</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.Cases.ApiCaseAssignmentPolicySettings": {
        "type": "object",
        "properties": {
          "assignmentPolicy": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.CaseAssignmentPolicy"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Cases.ApiMoveCaseBetweenEnvironmentsPolicySettings": {
        "type": "object",
        "properties": {
          "moveCaseBetweenEnvironmentsPolicy": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.MoveCaseBetweenEnvironmentsPolicy"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Cases.ApiWallItemsForCommandCenter": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiBaseWallActivity"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiBaseWallActivity"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiBaseWallActivity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterAssessment": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "severityScore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
            },
            "nullable": true
          },
          "decisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterComment": {
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision": {
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterFact": {
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask": {
        "type": "object",
        "properties": {
          "dueDateInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completionTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assigneeUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assgineeFirstName": {
            "type": "string",
            "nullable": true
          },
          "assgineeLastName": {
            "type": "string",
            "nullable": true
          },
          "assigneeDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "completorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completionContent": {
            "type": "string",
            "nullable": true
          },
          "completorFirstName": {
            "type": "string",
            "nullable": true
          },
          "completorLastName": {
            "type": "string",
            "nullable": true
          },
          "completorDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterWallItem": {
        "type": "object",
        "properties": {
          "dueDateInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completionTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completionContent": {
            "type": "string",
            "nullable": true
          },
          "assigneeUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assgineeFirstName": {
            "type": "string",
            "nullable": true
          },
          "assgineeLastName": {
            "type": "string",
            "nullable": true
          },
          "assigneeDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "completorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "completorFirstName": {
            "type": "string",
            "nullable": true
          },
          "completorLastName": {
            "type": "string",
            "nullable": true
          },
          "completorDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "severityScore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
            },
            "nullable": true
          },
          "decisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterDecision"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterTask"
            },
            "nullable": true
          },
          "attachment": {
            "$ref": "#/components/schemas/Siemplify.Api.Common.ApiFile"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterActivityTypeEnum"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.Activities.ApiCommandCenterIncidentUserMin"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCaseWallItemsIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Cases.Wall.WallActivityEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Api"
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncident": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "severityScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
            },
            "nullable": true
          },
          "criticalImpacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "risks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "mainStrategy": {
            "type": "string",
            "nullable": true
          },
          "operationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterOperationStatus"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentTypeEnum"
          },
          "range": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentRangeEnum"
          },
          "motivation": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "missingInformation": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterIncidentUser": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "isArchived": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentAccessEnum"
          },
          "user": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser"
          },
          "isIncidentCreator": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterUserTypeEnum"
          },
          "isAuditor": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterOperationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterUserTypeEnum"
          },
          "isAuditor": {
            "type": "boolean"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ContextGroupDataModel": {
        "type": "object",
        "properties": {
          "isHighlight": {
            "type": "boolean"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "hideOptions": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ContextStringItemDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ContextStringItemDataModel": {
        "type": "object",
        "properties": {
          "originalName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybook": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybookByEnvironment": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true
          },
          "playbooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Ide.ApiIntegrationPlaybook"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.IntegrationsStoreMetadataDataResponse": {
        "type": "object",
        "properties": {
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.MarketplaceItemUpdateStatusEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Regular = 0</li><li>RecentlyUpdated = 1</li><li>New = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.NameAndIdentifier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiActionStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          -1
        ],
        "type": "integer",
        "description": "<ul><li>Faulted = 0</li><li>InProgress = 1</li><li>Completed = 2</li><li>PendingUserInput = 3</li><li>PendingPreviousSteps = 4</li><li>Started = 5</li><li>FaultedAndSkipped = 6</li><li>HandledTimedout = 7</li><li>UnhandledTimedout = 8</li><li>Terminated = 9</li><li>NotRunAndSkipped = 10</li><li>PendingActionTimeout = 11</li><li>PendingActionTimeoutAndSkipped = 12</li><li>NoStatus = -1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiCaseEntities": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "entityCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SecurityEntityCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiCategoryState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Empty = 0</li><li>Full = 1</li><li>FullFromRestrictedEnvironment = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiEnrichmentData": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "useInPlaybook": {
            "type": "boolean"
          },
          "isCustom": {
            "type": "boolean"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiPendingStepInstanceDataModel": {
        "type": "object",
        "properties": {
          "casePriority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "pendingStepTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "pendingStepExpirationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "alertName": {
            "type": "string",
            "nullable": true
          },
          "messageToAssignee": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiPlaybookType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Regular = 0</li><li>Nested = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiSkipStepInstanceDataModel": {
        "type": "object",
        "properties": {
          "skipComment": {
            "type": "string",
            "nullable": true
          },
          "workflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceIdentifier": {
            "type": "integer",
            "format": "int64"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "indicatorIdentifier": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiActionStatusEnum"
          },
          "executingUser": {
            "type": "string",
            "nullable": true
          },
          "allowedToExecute": {
            "type": "boolean"
          },
          "resultCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.ScriptResultEntityData"
            },
            "nullable": true
          },
          "targetEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "resultEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "actionDef": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionDefinitionDataModel"
          },
          "blockStepId": {
            "type": "string",
            "nullable": true
          },
          "jsonResultObject": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "integrationInstanceName": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceEnvironment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pendingStepProperties": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPendingStepInstanceDataModel"
          },
          "parallelActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
            },
            "nullable": true
          },
          "stepInstanceIdentifier": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isAutomatic": {
            "type": "boolean"
          },
          "isSkippable": {
            "type": "boolean"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "actionProvider": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.StepType"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "autoSkipOnFailure": {
            "type": "boolean"
          },
          "isDebugMockData": {
            "type": "boolean"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDebugDataModel"
          },
          "parentStepContainerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiStepCaseDebugDataRequest": {
        "type": "object",
        "properties": {
          "stepOriginalIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiTriggerCondition": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionFieldOperator"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowCategoryDataModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "categoryState": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiCategoryState"
          },
          "isDefaultCategory": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDebugDataModel": {
        "type": "object",
        "properties": {
          "debugBaseAlertId": {
            "type": "string",
            "nullable": true
          },
          "debugAlertId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isDebugMode": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalPlaybookIdentifier": {
            "type": "string",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "trigger": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowTriggerDataModel"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDataModel"
            },
            "nullable": true
          },
          "stepsRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRelationDataModel"
            },
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "playbookType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPlaybookType"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDebugDataModel"
          },
          "entityAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "defaultAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
            },
            "nullable": true
          },
          "overviewTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModelWithRestrictedEnvsParam": {
        "type": "object",
        "properties": {
          "hasRestrictedEnvironments": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isDebugMode": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalPlaybookIdentifier": {
            "type": "string",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "trigger": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowTriggerDataModel"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDataModel"
            },
            "nullable": true
          },
          "stepsRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRelationDataModel"
            },
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "playbookType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPlaybookType"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDebugDataModel"
          },
          "entityAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "defaultAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
            },
            "nullable": true
          },
          "overviewTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceDataModel": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.WorkflowInstanceStatusEnum"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepCardDataModel"
            },
            "nullable": true
          },
          "positionInQueue": {
            "type": "integer",
            "format": "int32"
          },
          "runCount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isDebugMode": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalPlaybookIdentifier": {
            "type": "string",
            "nullable": true
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "trigger": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowTriggerDataModel"
          },
          "stepsRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRelationDataModel"
            },
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "playbookType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPlaybookType"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDebugDataModel"
          },
          "entityAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "defaultAccessLevel": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.Enums.WorkflowAccessEnum"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowAccessPermissions"
            },
            "nullable": true
          },
          "overviewTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Orchestration.DataModel.Templates.OverviewTemplateData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummary": {
        "type": "object",
        "properties": {
          "usedIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummaryIntegrationInfo"
            },
            "nullable": true
          },
          "completedSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
            },
            "nullable": true
          },
          "faultedSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
            },
            "nullable": true
          },
          "userActionRequiredStep": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
          },
          "executionTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "totalPendingActionSteps": {
            "type": "integer",
            "description": "Total steps that are pending for user action - either failed or manual",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowInstanceSummaryIntegrationInfo": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowRequestDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "shouldFetchSteps": {
            "type": "boolean"
          },
          "definitionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "collapseBlocks": {
            "type": "boolean"
          },
          "nestedStepIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parentWorkflowInstanceId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepCardDataModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isAutomatic": {
            "type": "boolean"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.StepType"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiActionStatusEnum"
          },
          "workflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "parentStepIdentifiers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "previousResultConditions": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "resultJsonObject": {
            "type": "string",
            "nullable": true
          },
          "isDebugMockData": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parallelActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepCardDataModel"
            },
            "nullable": true
          },
          "parentStepContainerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDataModel": {
        "type": "object",
        "properties": {
          "parallelActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDataModel"
            },
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isAutomatic": {
            "type": "boolean"
          },
          "isSkippable": {
            "type": "boolean"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actionProvider": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.StepType"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "autoSkipOnFailure": {
            "type": "boolean"
          },
          "isDebugMockData": {
            "type": "boolean"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDebugDataModel"
          },
          "parentStepContainerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "workflowIdentifier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDebugDataModel": {
        "type": "object",
        "properties": {
          "originalWorkflowIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "originalStepIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "resultJson": {
            "type": "string",
            "nullable": true
          },
          "scopeEntitiesEnrichmentData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiEnrichmentData"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel": {
        "type": "object",
        "properties": {
          "workflowIdentifier": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceIdentifier": {
            "type": "integer",
            "format": "int64"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "indicatorIdentifier": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiActionStatusEnum"
          },
          "executingUser": {
            "type": "string",
            "nullable": true
          },
          "allowedToExecute": {
            "type": "boolean"
          },
          "resultCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "resultValue": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.ScriptResultEntityData"
            },
            "nullable": true
          },
          "targetEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "resultEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "actionDef": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiActionDefinitionDataModel"
          },
          "blockStepId": {
            "type": "string",
            "nullable": true
          },
          "jsonResultObject": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "integrationInstanceName": {
            "type": "string",
            "nullable": true
          },
          "integrationInstanceEnvironment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pendingStepProperties": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPendingStepInstanceDataModel"
          },
          "parallelActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepInstanceDataModel"
            },
            "nullable": true
          },
          "stepInstanceIdentifier": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isAutomatic": {
            "type": "boolean"
          },
          "isSkippable": {
            "type": "boolean"
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "nullable": true
          },
          "actionProvider": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.StepType"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel"
            },
            "nullable": true
          },
          "autoSkipOnFailure": {
            "type": "boolean"
          },
          "isDebugMockData": {
            "type": "boolean"
          },
          "debugData": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepDebugDataModel"
          },
          "parentStepContainerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepParameterDataModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.CustomActionParameterType"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRelationDataModel": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string",
            "nullable": true
          },
          "fromStep": {
            "type": "string",
            "nullable": true
          },
          "toStep": {
            "type": "string",
            "nullable": true
          },
          "destinationActionStatus": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiActionStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowStepRequestDataModel": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "workflowIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "stepIdentifier": {
            "type": "string",
            "nullable": true
          },
          "blockStepId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowTriggerDataModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.v2.WorkflowTriggerType"
          },
          "logicalOperator": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration.ConditionsLogicalOperator"
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiTriggerCondition"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.Playbooks.AttachNestedWorkflowToCaseRequest": {
        "type": "object",
        "properties": {
          "cyberCaseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertGroupIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "wfName": {
            "type": "string",
            "nullable": true
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiTriggerCondition"
            },
            "nullable": true
          },
          "originalWorkflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.ReportsStoreMetadataDataResponse": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiReportStoreMetadataDataModel"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SecurityEntityCard": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "isSuspicious": {
            "type": "boolean"
          },
          "linkedEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SecurityEntityCard"
            },
            "nullable": true
          },
          "direction": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SecurityEntityDirectionEnum"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SecurityEntityDirectionEnum": {
        "enum": [
          0,
          10,
          20,
          30
        ],
        "type": "integer",
        "description": "<ul><li>None = 0</li><li>Inbound = 10</li><li>Outbound = 20</li><li>Both = 30</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiAddOrUpdateSocRoleRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "setAsDefault": {
            "type": "boolean"
          },
          "additionalRoleAccess": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleRequest": {
        "type": "object",
        "properties": {
          "socRoleId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiDeleteSocRoleResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "failReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiSocRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "usersAssigned": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleAccess": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleWithRoleAccesses": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "usersAssigned": {
            "type": "integer",
            "format": "int32"
          },
          "additionalRoleAccesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.SocRoles.ApiSocRoleAccess"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.UsecaseIntegrationDetails": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "svg": {
            "type": "string",
            "nullable": true
          },
          "isMandatory": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.WallActivity.ApiBaseWallActivity": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiWallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.DataModel.WallActivity.ApiCaseTaskChangedWallActivity": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiTaskStatusEnum"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiTaskPriorityEnum"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "nullable": true,
            "example": "Investigate"
          },
          "content": {
            "type": "string",
            "description": "Task content",
            "nullable": true,
            "example": "Please resolve this case"
          },
          "owner": {
            "type": "string",
            "description": "Task assignee",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "ownerFullName": {
            "type": "string",
            "description": "Task assignee full name",
            "nullable": true,
            "example": "John Smith"
          },
          "completor": {
            "type": "string",
            "description": "Task completer",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "creator": {
            "type": "string",
            "description": "Task creator",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "creatorFullName": {
            "type": "string",
            "description": "Task creator full name",
            "nullable": true,
            "example": "John Smith"
          },
          "lastModifier": {
            "type": "string",
            "description": "Task last modifier",
            "nullable": true,
            "example": "67e2cbc1-eaa4-4b6e-a594-fe0e6278a255"
          },
          "lastModifierFullName": {
            "type": "string",
            "description": "Task last modifier full name",
            "nullable": true,
            "example": "John Smith"
          },
          "completionComment": {
            "type": "string",
            "description": "Task completion comment",
            "nullable": true,
            "example": "John Smith"
          },
          "completionDateTimeUnixTimeInMs": {
            "type": "integer",
            "description": "Task completion time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "dueDateUnixTimeInMs": {
            "type": "integer",
            "description": "Task due date time in unix format as milliseconds",
            "format": "int64",
            "nullable": true,
            "example": 1673774674567
          },
          "creatorUserId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.WallActivity.ApiWallActivityEnum"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the case task wall activity model"
      },
      "Siemplify.Server.Api.DataModel.WallActivity.ApiTaskPriorityEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>High = 0</li><li>Medium = 1</li><li>Low = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.WallActivity.ApiTaskStatusEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<ul><li>Pending = 0</li><li>Completed = 1</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.DataModel.WallActivity.ApiWallActivityEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "<ul><li>CaseAlertData = 0</li><li>CaseStatusChange = 1</li><li>CaseTask = 2</li><li>CaseAction = 3</li><li>CaseEvidence = 4</li><li>CaseComment = 5</li><li>CaseInsight = 6</li><li>CaseCreation = 7</li><li>CaseExternalChannelMessage = 8</li><li>PinnedCaseChatMessage = 9</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.Api.Requests.Agents.ApiClearRetransmissionRequest": {
        "type": "object",
        "properties": {
          "filterType": {
            "$ref": "#/components/schemas/Siemplify.Server.Agents.BL.ClearRetransmissionFilterTypeEnum"
          },
          "filterValue": {
            "type": "string",
            "description": "The filter value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Agents.ApiDeleteAgentRequest": {
        "type": "object",
        "properties": {
          "agentIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Agents.ApiGetAgentsInformationByIdentifiersRequest": {
        "type": "object",
        "properties": {
          "agentIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Agents.ApiRedeployAgentRequest": {
        "type": "object",
        "properties": {
          "oldAgentIdentifier": {
            "type": "string",
            "nullable": true
          },
          "newAgentIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiAnalystsRequest": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiCloseAlertRequest": {
        "type": "object",
        "properties": {
          "sourceCaseId": {
            "type": "integer",
            "description": "Case ID where the alert is being closed from",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "rootCause": {
            "type": "string",
            "description": "Alert close root cause",
            "nullable": true,
            "example": "Malicious"
          },
          "reason": {
            "type": "string",
            "description": "Alert close reason",
            "nullable": true,
            "example": "Other"
          },
          "comment": {
            "type": "string",
            "description": "Alert close comment",
            "nullable": true,
            "example": "The alert is closed as it was a false alarm"
          },
          "usefulness": {
            "type": "string",
            "description": "Alert usefulness - used to create statistics about the usefulness of a certain alert.\r\nThe options are - None, NotUseful, Useful.",
            "nullable": true,
            "example": "Useful"
          }
        },
        "additionalProperties": false,
        "description": "Represents the close alert request model"
      },
      "Siemplify.Server.Api.Requests.ApiConfigureIntegrationInstanceRequest": {
        "type": "object",
        "properties": {
          "instanceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Integrations.DataModel.IntegrationSettingData"
            },
            "nullable": true
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "instanceDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiCreateEntityRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSecurityEntityDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiCreateIntegrationInstanceRequest": {
        "type": "object",
        "properties": {
          "integrationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiDuplicateFamilyRequest": {
        "type": "object",
        "properties": {
          "familyId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiExecuteMagicLinkRequest": {
        "type": "object",
        "properties": {
          "encryptedData": {
            "type": "string",
            "nullable": true
          },
          "hashedEncryptedData": {
            "type": "string",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiGetEnvironmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiMergeCasesRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "caseToMergeWith": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiMoveAlertToNewCaseRequest": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          },
          "sourceCaseId": {
            "type": "integer",
            "description": "The id of the case where the alert is moving from",
            "format": "int64",
            "example": 1
          },
          "destinationCaseId": {
            "type": "integer",
            "description": "The id of the case where the alert is moving to",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the move alert to new case request model"
      },
      "Siemplify.Server.Api.Requests.ApiPageRequest": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiPlaybookSimulationEnrichmentRequest": {
        "type": "object",
        "properties": {
          "testCaseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalStepIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "originalWorkflowIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiReopenAlertRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "description": "Case ID",
            "format": "int64",
            "example": 1
          },
          "alertIdentifier": {
            "type": "string",
            "description": "Alert identifier",
            "nullable": true,
            "example": "SUSPICIOUS PHISHING EMAIL_C7A739D7-E465-4106-9871-18F415D6C3BD"
          }
        },
        "additionalProperties": false,
        "description": "Represents the reopen alert request model"
      },
      "Siemplify.Server.Api.Requests.ApiSearchCasesFilterValuesRequest": {
        "type": "object",
        "properties": {
          "typeOfFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.SearchEverything.DataModel.CaseSearchFilterTypeEnum"
          },
          "numberOfValuesToReturn": {
            "type": "integer",
            "format": "int32"
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiSocRolesRequest": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiTestCasesPageRequest": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiTestProxyRequest": {
        "type": "object",
        "properties": {
          "testUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiUpdateAlertPriorityRequest": {
        "type": "object",
        "properties": {
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alertName": {
            "type": "string",
            "nullable": true
          },
          "previousPriority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiUsersPageRequest": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "filterRole": {
            "type": "boolean"
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filterDisabledUsers": {
            "type": "boolean"
          },
          "filterSupportUsers": {
            "type": "boolean"
          },
          "fetchOnlySupportUsers": {
            "type": "boolean"
          },
          "filterPermissionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiUsersPageRequestByEnvironment": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "filterRole": {
            "type": "boolean"
          },
          "requestedPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filterDisabledUsers": {
            "type": "boolean"
          },
          "filterSupportUsers": {
            "type": "boolean"
          },
          "fetchOnlySupportUsers": {
            "type": "boolean"
          },
          "filterPermissionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Permissions.PermissionTypeEnum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiVisualFamilyDataModelRequest": {
        "type": "object",
        "properties": {
          "visualFamilyDataModel": {
            "$ref": "#/components/schemas/Siemplify.Common.Ontology.DataModel.VisualFamilyDataModel"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.ApiVisualFamilyImageRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageBase64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkAssignRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkChangeCasePriorityRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkChangeCaseStageRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkChangeCaseTagsRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkCloseCaseRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "closeReason": {
            "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
          },
          "rootCause": {
            "type": "string",
            "nullable": true
          },
          "closeComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.BulkReopenCaseRequest": {
        "type": "object",
        "properties": {
          "casesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "reopenComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.CommandCenter.ApiCommandCenterWallItemsRequest": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "minCreationTimeInMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCloseIncidentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCommandCenterCreateIncidentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "severityScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterSeverityScore"
            },
            "nullable": true
          },
          "criticalImpacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "risks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "mainStrategy": {
            "type": "string",
            "nullable": true
          },
          "operationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCommandCenterOperationStatus"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentTypeEnum"
          },
          "range": {
            "$ref": "#/components/schemas/Siemplify.Common.CommandCenter.DataModel.Enums.CommandCenterIncidentRangeEnum"
          },
          "motivation": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "missingInformation": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.CommandCenter.Incidents.ApiCreateCommandCenterIncidentRequest": {
        "type": "object",
        "properties": {
          "incidentName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "criticalImpacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "risks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "wallItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.CommandCenter.ApiCaseWallItemsIdentifier"
            },
            "nullable": true
          },
          "incidentLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.CommandCenter.SeverityScores.ApiCreateCommandCenterSeverityScoreRequest": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Ontology.ApiOntologyExportRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Ontology.ApiOntologyImportRequest": {
        "type": "object",
        "properties": {
          "replaceExistingVisualFamily": {
            "type": "boolean"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "blob": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Sla.ApiAlertSlaRequest": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "integer",
            "format": "int64"
          },
          "alertIdentifier": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiDeleteWorkflowsRequest": {
        "type": "object",
        "properties": {
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of workflow identifiers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to delete multiple workflows (playbooks)"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiDuplicateNestedWorkflowsRequest": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "Category of duplicated workflows",
            "format": "int32"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Workflow Environments",
            "nullable": true
          },
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of workflow identifiers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to duplicate blocks/nested workflows"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiDuplicateWorkflowsRequest": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "description": "Priority of duplicated workflows (playbooks)",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "description": "Category of duplicated workflows (playbooks)",
            "format": "int32"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Environments where to be duplicated",
            "nullable": true
          },
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of workflow identifiers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to duplicate workflows (playbooks)"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiExportDefinitionsRequest": {
        "type": "object",
        "properties": {
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of workflow identifiers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Api request to export definitions"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiMoveDefinitionsToCategoryRequest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "integer",
            "description": "Target category where to move the workflows",
            "format": "int32"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of workflow identifiers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Move workflows to a specific category request"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiRemoveCategoriesRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Ids of categories to be removed",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Api call to remove Categories"
      },
      "Siemplify.Server.Api.Requests.Workflows.ApiRunPlaybookInDebugRequest": {
        "type": "object",
        "properties": {
          "workflow": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiWorkflowDefinitionDataModel"
          },
          "testCaseId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiAnalystResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiAnalyst"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiCaseManipulationResponse": {
        "type": "object",
        "properties": {
          "isRequestValid": {
            "type": "boolean",
            "description": "Flag that indicates whether the request is valid or not",
            "example": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of errors",
            "nullable": true,
            "example": true
          },
          "newCaseId": {
            "type": "integer",
            "description": "Case new id",
            "format": "int64",
            "nullable": true,
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the case manipulation response model"
      },
      "Siemplify.Server.Api.Responses.ApiConfigureIntegrationsResponse": {
        "type": "object",
        "properties": {
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationInstanceDataModel"
            },
            "nullable": true
          },
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiIntegrationStoreMetadataDataModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiDisplayEnvironmentsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiEnvironmentCard"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiNotificationItemSettings": {
        "type": "object",
        "properties": {
          "receiveEmail": {
            "type": "boolean"
          },
          "receivePushNotification": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Abstraction for grouping email and push notifications"
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiBlocklistResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiBlockListItem"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiEnvironmentsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiOperatingEnvironment"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiGetCaseStageDefinitionRecordsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseStageDefinition"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiNetworkDetailsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.ModelData.NetworkDetails"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata": {
        "type": "object",
        "properties": {
          "totalNumberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecordsCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiSlaDefinitionsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiSlaDefinition"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagDefinitionsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.TagDefinitionV2"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTagNamesResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiTestCasesResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CyberCase"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfileCardsResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfileCard"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPagingResponses.ApiUserProfilesResponse": {
        "type": "object",
        "properties": {
          "objectsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiUserProfile"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiPagingResponses.ApiPagingMetadata"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiPlaybookCard": {
        "type": "object",
        "properties": {
          "playbookName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "playbookType": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.Playbooks.ApiPlaybookType"
          },
          "isDebugMode": {
            "type": "boolean"
          },
          "originalWorkflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "workflowDefinitionIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiTestEmailResult": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiTestProxyResult": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.ApiUserNotificationSettings": {
        "type": "object",
        "properties": {
          "canReceiveSystemNotifications": {
            "type": "boolean"
          },
          "canReceiveUserNotifications": {
            "type": "boolean"
          },
          "maxDaysToShowInFeed": {
            "type": "integer",
            "format": "int32"
          },
          "caseAssignmentSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "caseStatusChangeSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "caseCommentSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "taskSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "sharedItemSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "manualActionSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          },
          "playbookActionSettings": {
            "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiNotificationItemSettings"
          }
        },
        "additionalProperties": false,
        "description": "Api model for user notifications"
      },
      "Siemplify.Server.Api.Responses.ApiUserProfileLightMetadata": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "socRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "socRole": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "loginIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.CaseCardsResponse": {
        "type": "object",
        "properties": {
          "caseCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.DataModel.ApiCyberCaseCardDataModel"
            },
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.CasesFilterUserAndRolesResponse": {
        "type": "object",
        "properties": {
          "socRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.ApiUserProfileLightMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.Settings.ApiEnumDescriptor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.Responses.Workflows.ApiDeleteCategoryResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of category",
            "format": "int64"
          },
          "failed": {
            "type": "boolean",
            "description": "Flag indicating whether it was successful or error"
          },
          "errorMessage": {
            "type": "string",
            "description": "Any error messages associated with the call",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Api result for deletion of categories"
      },
      "Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowResult": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Workflow identifier",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/Siemplify.Common.Orchestration._Entities_.v2.WorkflowDeletionStatusEnum"
          },
          "failed": {
            "type": "boolean",
            "description": "Flag indicating whether the operation failed"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message to return to the user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Result of deletion of each workflow"
      },
      "Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowResult"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to delete request"
      },
      "Siemplify.Server.Api.Responses.Workflows.ApiRemoveCategoriesResponse": {
        "type": "object",
        "properties": {
          "deletedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteCategoryResult"
            },
            "nullable": true
          },
          "deletedPlaybooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.Api.Responses.Workflows.ApiDeleteWorkflowResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Api response to removal of a group of categories"
      },
      "Siemplify.Server.Api.V1.ApiDashboardWidgetDataModel": {
        "type": "object",
        "properties": {
          "dashboardId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "widgetType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardWidgetTypesEnum"
          },
          "widthSize": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.WidgetWidthSizeTypes"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "tagFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "productFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "analystFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priorityFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Api.DataModel.Cases.CasePriority"
            },
            "nullable": true
          },
          "timeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          },
          "environmentFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "entityTypeFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "caseStatusesFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CaseDataStatus"
            },
            "nullable": true
          },
          "alertNamesFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "importanceStatusesFilter": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "incidentStatusesFilter": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "closeReasonsFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.DataModel.Managment.CloseReasonEnum"
            },
            "nullable": true
          },
          "caseRootCauseFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "caseStageFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "entityIdentifierFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "networksFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "portsFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryOutcomeFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "playbooksFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "subject": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetSubjectEnum"
          },
          "dimensionA": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetObjectEnum"
          },
          "dimensionB": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetObjectEnum"
          },
          "chartType": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CustomWidgetChartTypeEnum"
          },
          "resultsAmount": {
            "type": "integer",
            "format": "int32"
          },
          "resultsOrder": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.ResultsOrder"
          },
          "startStage": {
            "type": "string",
            "nullable": true
          },
          "endStage": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "calculateField": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.CalculateFieldEnum"
          },
          "socAnalystsLoadFirstSocRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "socAnalystsLoadSecondSocRoleId": {
            "type": "integer",
            "format": "int64"
          },
          "socAnalystsLoadManagerUsername": {
            "type": "string",
            "nullable": true
          },
          "playbookStatusFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.PlaybookStatusFilter"
            },
            "nullable": true
          },
          "integrationsFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.Api.V1.WorkflowsByActionQuery": {
        "type": "object",
        "properties": {
          "actionId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "workbookUniqName": {
            "type": "string",
            "nullable": true
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorFullName": {
            "type": "string",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "modifierFullName": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeViewOnlyUsers": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportDetails": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.Looker.AdvancedReportCategory"
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "isConnectionError": {
            "type": "boolean"
          },
          "connectionErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workbookUniqName": {
            "type": "string",
            "nullable": true
          },
          "folderName": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "creatorFullName": {
            "type": "string",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "modifierFullName": {
            "type": "string",
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeViewOnlyUsers": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTimeUnixTimeInMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Reports.ApiAdvancedReportsSettings": {
        "type": "object",
        "properties": {
          "advancedReportsUrl": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsUsername": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsPassword": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDatabaseServer": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDatabaseServerUsername": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsDatabaseServerPassword": {
            "type": "string",
            "nullable": true
          },
          "advancedReportsSiteName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Reports.ApiReportSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "reportTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recipentsEmail": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "timeOfDayHours": {
            "type": "number",
            "format": "double"
          },
          "intervalType": {
            "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiReportScheduleIntervalTypeEnum"
          },
          "weeklyDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiWeeklyDayEnum"
            },
            "nullable": true
          },
          "dayOfTheMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Siemplify.Common.ReportSystem.DataModel.ReportTypeEnum"
          },
          "timeFilter": {
            "$ref": "#/components/schemas/Siemplify.Common.Dashboards.DataModel.DashboardTimeRangeTypesEnums"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Reports.ApiReportScheduleIntervalTypeEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<ul><li>Daily = 0</li><li>Weekly = 1</li><li>Monthly = 2</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.ReportSystem.Reports.ApiWeeklyDayEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "<ul><li>Sunday = 0</li><li>Monday = 1</li><li>Tuesday = 2</li><li>Wednesday = 3</li><li>Thursday = 4</li><li>Friday = 5</li><li>Saturday = 6</li></ul>",
        "format": "int32"
      },
      "Siemplify.Server.ReportSystem.Requests.ApiReportTemplateDuplicationRequest": {
        "type": "object",
        "properties": {
          "reportTemplateId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Siemplify.Server.ReportSystem.Responses.ApiAdvancedReportsResponse": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Siemplify.Server.ReportSystem.Reports.ApiAdvancedReport"
            },
            "nullable": true
          },
          "isConnectionError": {
            "type": "boolean"
          },
          "connectionErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "AppKey": {
        "type": "apiKey",
        "description": "Api Key",
        "name": "AppKey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "AppKey": [ ]
    }
  ]
}